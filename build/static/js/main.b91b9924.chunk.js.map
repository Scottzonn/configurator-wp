{"version":3,"sources":["app/utils/utils.ts","app/store/middleware/api.ts","app/store/build.ts","app/store/catalog.ts","app/store/customer.ts","app/store/settings.ts","app/store/ui.ts","app/store/store.ts","app/ui/Checkbox.js","app/ui/StepTitle.tsx","app/ui/AccessoriesInCategory.tsx","app/ui/AcccessoryDetailsSidebar.tsx","app/ui/Accordion.tsx","app/ui/AccessoriesList.tsx","app/ui/AccessoriesPicker.tsx","app/ui/AccessoryDetails.tsx","app/ui/AddressForm.tsx","app/ui/BuildStatusBox.tsx","app/ui/CategoryDisplay.tsx","app/ui/ContactDetailsForm.tsx","app/ui/DeliveryDetailsForm.tsx","app/ui/ModelDetails.tsx","app/ui/ModelPicker.tsx","app/ui/ProductDetails.tsx","app/ui/ProductPicker.tsx","app/ui/ThankYouScreen.tsx","app/ui/Wizard.js","app/ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["formatCurrency","value","includeCents","formatter","Intl","NumberFormat","style","currency","format","Number","toLocaleString","normalize","data","isObject","Object","prototype","toString","call","isArray","flatten","attributes","id","map","item","key","apiCallBegan","createAction","api","dispatch","next","action","a","console","log","type","payload","url","graphQlQuery","onStart","onSuccess","onError","response","undefined","fetch","method","mode","cache","headers","redirect","body","JSON","stringify","graphQLClient","GraphQLClient","request","strapi3datastyle","message","initialState","productId","modelId","accessoryIds","customOptions","buildSlice","createSlice","name","reducers","setCustomOption","state","idx","findIndex","el","optionId","optionSelectionId","push","addAccessory","setProduct","setModel","removeAccessory","indexOf","newState","splice","buildPosted","actions","selectBuildAccessoryIds","build","selectBuildProduct","catalog","products","find","selectBuildModel","models","selectBuildAccessories","accessories","selectBuild","product","model","selectBuildImage","modelImg","featured_image","prodImg","selectBuildCost","productPrice","rrp","modelPrice","accessoryPrice","reduce","acc","curr","selectBuildCustomOptions","customOptionPickers","optionPicker","option_name","selectedOption","buildOption","option","selectedOptionId","customOptionPickersLoading","catalogOption","picker","options","catalogSlice","loading","accessoriesLoading","accessoryCategories","customOptionPickersRequested","customOptionPickersReceived","other_options","accessoriesRequested","accessoriesReceived","catalogRequested","catalogReceived","categoriesRequested","categoriesReceived","selectProducts","selectCompatibleModels","prod","selectAccessoryById","accessory","selectCategories","customerSlice","updateDeliveryDetails","updateCustomerDetails","updateCustomerAddress","address","settings","webhook_url","require_user_contact_details_upfront","logo_light","settingsSlice","settingsRequested","settingsReceived","selectSettings","uiSlice","builderStep","nextBuilderStep","prevBuilderStep","setBuilderStep","selectCurrentStep","ui","store","configureStore","reducer","catalogReducer","buildReducer","uiReducer","settingsReducer","customer","customerReducer","middleware","getDefaultMiddleware","process","Checkbox","props","handleChange","e","disabled","onChange","setState","checked","target","stopPropagation","preventDefault","nativeEvent","saveInput","node","input","defaultChecked","this","focus","blur","prefixCls","className","readOnly","tabIndex","onClick","onFocus","onBlur","autoFocus","required","others","globalProps","keys","prev","substr","classString","classNames","ref","Component","defaultProps","StepTitle","backLink","showBackButton","onBackClick","cx","active","isActive","title","AccessoriesInCategory","catId","useParams","useDispatch","useSelector","filter","isOption","option_for","isInCat","accessory_categories","cat","buildAccessories","category","selectAccessoryCatById","history","useHistory","markup","short_description","val","includes","to","goBack","AccessoryDetailsSidebar","src","alt","description","AccordionContext","React","createContext","openAccordionItem","setOpenAccordionItem","Accordion","useState","children","Children","child","isValidElement","cloneElement","index","Provider","AccordionItem","contentEl","useRef","useContext","isOpen","open","maxHeight","current","scrollHeight","AccessoriesList","cats","catsMarkup","accessoryMarkup","onDetailsClick","text","length","substring","accId","AccessoriesPicker","image","showDetails","setShowDetails","showingAccessoryId","setshowingAccessoryId","accessoryId","cursor","AccessoryDetails","AddressForm","useForm","register","getValues","triggerValidation","result","onValid","Fragment","htmlFor","placeholder","defaultValue","BuildStatusBox","customOptionsMarkup","accessoriesMarkup","productTitle","CategoryDisplay","categoryMarkup","icon","ContactDetailsForm","errors","pattern","email","DeliveryDetailsForm","reValidateMode","validate","deliverymethod","ModelDetails","selectModelById","parseInt","ModelPicker","buildItemsMarkup","useEffect","x","selected","ProductDetails","selectProductById","ProductPicker","ThankYouScreen","Wizard","steps","toArray","Template","path","currentStep","Step","currentPath","valid","setValid","lastIndex","setLastIndex","currentIndex","prevStep","nextStep","NoMatch","StepTitles","step","isValid","Button","noThrow","App","handleValid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"6jBAAaA,EAAiB,SAAEC,GAA0D,IAA3CC,EAA0C,wDAEvF,GAAGA,EAAa,CAId,IAAIC,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CC,MAAO,WACPC,SAAU,QAEZ,OAAOJ,EAAUK,OAAOP,GAExB,MAAO,IAAMQ,OAAOR,GAAOS,kBA2BlBC,EAAY,SAAZA,EAAaC,GACxB,IAAMC,EAAW,SAACD,GAAD,MAC0B,oBAAzCE,OAAOC,UAAUC,SAASC,KAAKL,IAC3BM,EAAU,SAACN,GAAD,MAC2B,mBAAzCE,OAAOC,UAAUC,SAASC,KAAKL,IAE3BO,EAAU,SAACP,GACf,OAAKA,EAAKQ,WAEH,aACLC,GAAIT,EAAKS,IACNT,EAAKQ,YAJmBR,GAQ/B,GAAIM,EAAQN,GACV,OAAOA,EAAKU,KAAI,SAACC,GAAD,OAAcZ,EAAUY,MAG1C,GAAIV,EAASD,GAAO,CAWlB,IAAK,IAAMY,KATTZ,EADEM,EAAQN,EAAKA,MACX,YAAOA,EAAKA,MACPC,EAASD,EAAKA,MAChBO,EAAQ,eAAKP,EAAKA,OACF,OAAdA,EAAKA,KACP,KAEAO,EAAQP,GAIfA,EAAKY,GAAOb,EAAUC,EAAKY,IAG7B,OAAOZ,EAGT,OAAOA,GCpDIa,EAAeC,YAAyB,iBAsEtCC,GArEeD,YAAkB,mBACnBA,YAAqB,kBAE1B,SAAC,GAAD,IAAGE,EAAH,EAAGA,SAAH,OAAkB,SAACC,GAAD,8CAAU,WAAOC,GAAP,iCAAAC,EAAA,yDAElDC,QAAQC,IAAIH,EAAOI,MACfJ,EAAOI,OAAST,EAAaS,KAHiB,yCAGJL,EAAKC,IAHD,UAIlDD,EAAKC,GAJ6C,EAc9CA,EAAOK,QAPTC,EAPgD,EAOhDA,IACAC,EARgD,EAQhDA,aACAzB,EATgD,EAShDA,KACA0B,EAVgD,EAUhDA,QACAC,EAXgD,EAWhDA,UACAC,EAZgD,EAYhDA,QAGEF,GAASV,EAAS,CAAEM,KAAMI,IAfoB,SAkB5CG,OAAWC,EAEVL,EApB2C,kCAqB7BM,MAAMP,EAAK,CAC1BQ,OAAQ,OACRC,KAAM,UACNC,MAAO,WACPC,QAAS,CACP,eAAgB,oBAGlBC,SAAU,SACVC,KAAMC,KAAKC,UAAUvC,KA9BuB,QAqB9C6B,EArB8C,mBAmC7CJ,EAnC6C,wBAoCxCe,EAAgB,IAAIC,gBAAcjB,EAAK,IApCC,UA0C7BgB,EAAcE,QAAQjB,GA1CO,QA0C9CI,EA1C8C,eAgD5CF,GACCE,GAAYJ,IACPkB,EAAmB5C,EAAU8B,GACnCb,EAAS,CAAEM,KAAMK,EAAWJ,QAASoB,KAnDO,kDAyDhDvB,QAAQC,IAAI,aAAa,EAAb,IAKRO,GAASZ,EAAS,CAAEM,KAAMM,EAASL,QAAS,KAAeqB,UA9Df,0DAAV,yDCZpCC,EAA2B,CAC/BC,eAAWhB,EACXiB,aAASjB,EACTkB,aAAc,GACdC,cAAe,IAGJC,EAAaC,YAAY,CACpCC,KAAM,QACNP,eACAQ,SAAU,CACRC,gBAAiB,SAACC,EAAOrC,GAEvB,IAAMsC,EAAMD,EAAMN,cAAcQ,WAC9B,SAACC,GAAD,OAAQA,EAAGC,WAAazC,EAAOK,QAAQoC,aAG5B,IAATH,EACFD,EAAMN,cAAcO,GAAKI,kBACvB1C,EAAOK,QAAQqC,kBACZL,EAAMN,cAAcY,KAAK3C,EAAOK,UAEzCuC,aAAc,SAACP,EAAOrC,GACpBqC,EAAMP,aAAaa,KAAK3C,EAAOK,UAEjCwC,WAAY,SAACR,EAAOrC,GACdqC,EAAMT,YAAc5B,EAAOK,UAC7BgC,EAAMR,aAAUjB,GAElByB,EAAMT,UAAY5B,EAAOK,SAE3ByC,SAAU,SAACT,EAAOrC,GACZqC,EAAMR,UAAY7B,EAAOK,UAC3BgC,EAAMP,aAAe,IAEvBO,EAAMR,QAAU7B,EAAOK,SAEzB0C,gBAAiB,SAACV,EAAOrC,GACvB,IAAMsC,EAAMD,EAAMP,aAAakB,QAAQhD,EAAOK,SAC9C,GAAIiC,GAAO,EAAG,CACZ,IAAMW,EAAWZ,EAAMP,aAAaoB,OAAOZ,EAAK,GAChDpC,QAAQC,IAAI8C,KAGhBE,YAAa,gB,EAmDbnB,EAAWoB,QAJbR,G,EADAR,gB,EACAQ,cACAC,E,EAAAA,WACAC,E,EAAAA,SACAC,E,EAAAA,gBAQWM,EAA0B,SAAChB,GAAD,OACrCA,EAAMiB,MAAMxB,cACDyB,EAAqB,SAAClB,GAAD,uBAChCA,EAAMmB,QAAQC,gBADkB,aAChC,EAAwBC,MAAK,SAAClB,GAAD,aAAQA,EAAGjD,KAAO,cAAG8C,EAAMiB,aAAT,aAAG,EAAa1B,eACpD+B,EAAmB,SAACtB,GAAD,yBAC9BkB,EAAmBlB,UADW,iBAC9B,EAA2BuB,cADG,aAC9B,EAAmCF,MAAK,SAAClB,GAAD,OAAQA,EAAGjD,KAAO,GAAG8C,EAAMiB,MAAMzB,YAC9DgC,EAAyB,SAACxB,GAAD,OACpCA,EAAMiB,MAAMxB,aAAatC,KAAI,SAACD,GAAD,OAC3B8C,EAAMmB,QAAQM,YAAYJ,MAAK,SAAClB,GAAD,OAAQA,EAAGjD,KAAO,GAAGA,SAE3CwE,EAAc,SAAC1B,GAC1B,MAAO,CACL2B,QAAST,EAAmBlB,GAC5B4B,MAAON,EAAiBtB,GACxByB,YAAaD,EAAuBxB,KAI3B6B,EAAmB,SAAC7B,GAAsB,IAAD,IAC9C8B,EAAQ,UAAGR,EAAiBtB,UAApB,aAAG,EAAyB+B,eACpCC,EAAO,UAAGd,EAAmBlB,UAAtB,aAAG,EAA2B+B,eAC3C,OAAID,GAGKE,GAGEC,EAAkB,SAACjC,GAAsB,IAAD,IAC7CkC,GAAe,UAAAhB,EAAmBlB,UAAnB,eAA2BmC,MAAO,EACjDC,GAAa,UAAAd,EAAiBtB,UAAjB,eAAyBmC,MAAO,EAC7CE,EAAiBb,EAAuBxB,GAAOsC,QACnD,SAACC,EAAKC,GAAN,OAAeD,IAAW,OAAJC,QAAI,IAAJA,OAAA,EAAAA,EAAML,MAAO,KACnC,GAEF,OAAIC,EACKA,EAAaC,EACXH,GAGF,GAoCEO,EAA2B,SAACzC,GAQvC,OAPqBA,EAAMmB,QAAQuB,oBAAoBvF,KAAI,SAACwF,GAC1D,MAAO,CACL9C,KAAM8C,EAAaC,YACnBC,gBAlCkC3F,EAkCMyF,EAAazF,GAlCJ,SAAC8C,GAEtD,IAAM8C,EAAc9C,EAAMiB,MAAMvB,cAAc2B,MAAK,SAAC0B,GAClD,OAAOA,EAAO3C,WAAalD,KAEvB8F,EAAgB,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAazC,kBAGtC,IAAIL,EAAMmB,QAAQ8B,2BAAlB,CAIA,IAAMC,EAAgBlD,EAAMmB,QAAQuB,oBAAoBrB,MACtD,SAAC8B,GAAD,OAAYA,EAAOjG,KAAOA,KAG5B,cAAOgG,QAAP,IAAOA,OAAP,EAAOA,EAAeE,QAAQ/B,MAAK,SAAC0B,GAAD,OAAYA,EAAO7F,KAAO8F,QAkBAhD,IAlCxB,IAAC9C,MAwCzByC,IAAf,QClGa0D,EAAezD,YAAY,CACtCC,KAAM,UACNP,aAb4B,CAC5BgE,SAAS,EACTC,oBAAoB,EACpBN,4BAA4B,EAC5B7B,SAAU,GAEVK,YAAa,GACb+B,oBAAqB,GACrBd,oBAAqB,IAMrB5C,SAAU,CACR2D,6BAA8B,SAACzD,EAAOrC,GACpCqC,EAAMiD,4BAA6B,GAErCS,4BAA6B,SAAC1D,EAAOrC,GAC/BA,EAAOK,QAAQ4D,QACjB5B,EAAM0C,oBAAsB/E,EAAOK,QAAQ4D,MAAM+B,eAEnD3D,EAAMiD,4BAA6B,GAErCW,qBAAsB,SAAC5D,EAAOrC,GAC5BqC,EAAMuD,oBAAqB,GAE7BM,oBAAqB,SAAC7D,EAAOrC,GAC3BqC,EAAMuD,oBAAqB,EAC3BvD,EAAMyB,YAAc9D,EAAOK,QAAQyD,aAErCqC,iBAAkB,SAAC9D,EAAOrC,GACxBqC,EAAMsD,SAAU,GAElBS,gBAAiB,SAAC/D,EAAOrC,GACvBE,QAAQC,IAAIH,EAAOK,QAAQoD,UAC3BpB,EAAMoB,SAAWzD,EAAOK,QAAQoD,SAChCpB,EAAMsD,SAAU,GAElBU,oBAAqB,SAAChE,EAAOrC,KAG7BsG,mBAAoB,SAACjE,EAAOrC,GAC1BqC,EAAMwD,oBAAsB7F,EAAOK,QAAQwF,wBAkMpCU,EAAiB,SAAClE,GAAD,OAAsBA,EAAMmB,QAAQC,UACrD+C,EAAyB,SAACnE,GAAD,uBACpCA,EAAMmB,QAAQC,SAASC,MAAK,SAAC+C,GAAD,MAAU,GAAGpE,EAAMiB,MAAM1B,YAAc6E,EAAKlH,aADpC,aACpC,EACIqE,QA4EO8C,EAAsB,SAACnH,GAAD,OAAgB,SAAC8C,GAAD,OACjDA,EAAMmB,QAAQM,YAAYJ,MAAK,SAACiD,GAAD,OAAeA,EAAUpH,KAAO,GAAGA,OACvDqH,EAAmB,SAACvE,GAAD,OAC9BA,EAAMmB,QAAQqC,qBAWDH,IAAf,QC3YamB,EAAgB5E,YAAY,CACvCC,KAAM,WACNP,aAJoC,GAKpCQ,SAAU,CACR2E,sBAAuB,SAACzE,EAAOrC,GAC7B,OAAO,2BAAKqC,GAAUrC,EAAOK,UAE/B0G,sBAAuB,SAAC1E,EAAOrC,GAC7B,OAAO,2BAAKqC,GAAUrC,EAAOK,UAE/B2G,sBAAuB,SAAC3E,EAAOrC,GAC7BqC,EAAM4E,QAAUjH,EAAOK,Y,EASzBwG,EAAczD,QAHhB0D,E,EAAAA,sBACAC,E,EAAAA,sBACAC,E,EAAAA,sBAQaH,IAAf,QCxCMlF,EAAyB,CAC7BgE,SAAS,EACTuB,SAAU,CACRC,iBAAavG,EACbwG,0CAAsCxG,EACtCyG,WAAY,CACV/G,SAAKM,KAKE0G,EAAgBrF,YAAY,CACvCC,KAAM,WACNP,eACAQ,SAAU,CACRoF,kBAAmB,SAAClF,EAAOrC,GACzBqC,EAAMsD,SAAU,GAElB6B,iBAAkB,SAACnF,EAAOrC,GACxBqC,EAAM6E,SAAWlH,EAAOK,QAAQ6G,SAChC7E,EAAMsD,SAAU,MAkCT8B,EAAiB,SAACpF,GAAD,OAAsBA,EAAM6E,SAASA,UAEpDI,IAAf,QC9DaI,EAAUzF,YAAY,CACjCC,KAAM,KACNP,aAN4B,CAC5BgG,YAAa,GAMbxF,SAAU,CACRyF,gBAAiB,SAACvF,EAAOrC,GACvBqC,EAAMsF,eAERE,gBAAiB,SAACxF,EAAOrC,GACnBqC,EAAMsF,YAAc,GACtBtF,EAAMsF,eAGVG,eAAgB,SAACzF,EAAOrC,GACtBqC,EAAMsF,YAAc3H,EAAOK,Y,EAS7BqH,EAAQtE,QAHVwE,E,EAAAA,gBACAC,G,EAAAA,gBAGWE,I,EAFXD,eAE+B,SAACzF,GAAD,OAAsBA,EAAM2F,GAAGL,cAOjDD,KAAf,QCvBaO,GAAQC,YAAe,CAClCC,QAAS,CACP3E,QAAS4E,EACT9E,MAAO+E,EACPL,GAAIM,GACJpB,SAAUqB,EACVC,SAAUC,GAEZC,WAAW,GAAD,mBAAMC,eAAN,CAA8B9I,MAI1CoI,GAAMnI,UJqMqC,SAACA,GA4C1C,OAAOA,EACLH,EAAa,CACXW,IAAKsI,+DACLrI,aA9Cc,m2BA+CdC,QAASkF,EAAatC,QAAQ+C,iBAAiB/F,KAC/CK,UAAWiF,EAAatC,QAAQgD,gBAAgBhG,WIrPtD6H,GAAMnI,UJ0PyC,SAACA,GAwC9C,OAAOA,EACLH,EAAa,CACXW,IAAKsI,+DACLrI,aA1Cc,8qBA2CdC,QAASkF,EAAatC,QAAQ6C,qBAAqB7F,KACnDK,UAAWiF,EAAatC,QAAQ8C,oBAAoB9F,WItS1D6H,GAAMnI,UJ+GwC,SAACA,GAuC7C,OAAOA,EACLH,EAAa,CACXW,IAAKsI,+DACLrI,aAzCc,qsBA0CdC,QAASkF,EAAatC,QAAQiD,oBAAoBjG,KAClDK,UAAWiF,EAAatC,QAAQkD,mBAAmBlG,WI1JzD6H,GAAMnI,UFSsC,SAACA,GAmB3C,OAAOA,EACLH,EAAa,CACXW,IAAKsI,+DACLrI,aArBc,6SAsBdC,QAAS8G,EAAclE,QAAQmE,kBAAkBnH,KACjDK,UAAW6G,EAAclE,QAAQoE,iBAAiBpH,W,6FG7DlDyI,G,oDAYJ,WAAYC,GAAQ,IAAD,wBACjB,cAAMA,IA2BRC,aAAe,SAACC,GAAO,IAAD,EACW,EAAKF,MAA5BG,EADY,EACZA,SAAUC,EADE,EACFA,SACdD,IAGE,YAAa,EAAKH,OACtB,EAAKK,SAAS,CACZC,QAASJ,EAAEK,OAAOD,UAGlBF,GACFA,EAAS,CACPG,OAAO,2BACF,EAAKP,OADJ,IAEJM,QAASJ,EAAEK,OAAOD,UAEpBE,gBALO,WAMLN,EAAEM,mBAEJC,eARO,WASLP,EAAEO,kBAEJC,YAAaR,EAAEQ,gBAlDF,EAuDnBC,UAAY,SAACC,GACX,EAAKC,MAAQD,GArDb,IAAMN,EAAU,YAAaN,EAAQA,EAAMM,QAAUN,EAAMc,eAH1C,OAKjB,EAAKvH,MAAQ,CACX+G,WANe,E,qDAqBjBS,KAAKF,MAAMG,U,6BAIXD,KAAKF,MAAMI,S,+BAkCH,IAAD,IAkBHF,KAAKf,MAhBPkB,EAFK,EAELA,UACAC,EAHK,EAGLA,UACAzL,EAJK,EAILA,MACA0D,EALK,EAKLA,KACA3C,EANK,EAMLA,GACAa,EAPK,EAOLA,KACA6I,EARK,EAQLA,SACAiB,EATK,EASLA,SACAC,EAVK,EAULA,SACAC,EAXK,EAWLA,QACAC,EAZK,EAYLA,QACAC,EAbK,EAaLA,OACAC,EAdK,EAcLA,UACApM,EAfK,EAeLA,MACAqM,EAhBK,EAgBLA,SACGC,EAjBE,kKAoBDC,EAAc1L,OAAO2L,KAAKF,GAAQ9F,QAAO,SAACiG,EAAMlL,GAIpD,MAHyB,UAArBA,EAAImL,OAAO,EAAG,IAAuC,UAArBnL,EAAImL,OAAO,EAAG,IAA0B,SAARnL,IAClEkL,EAAKlL,GAAO+K,EAAO/K,IAEdkL,IACN,IAEKxB,EAAYS,KAAKxH,MAAjB+G,QACF0B,EAAcC,KAAWf,EAAWC,GAAZ,8BACxBD,EADwB,YACFZ,GADE,yBAExBY,EAFwB,aAEDf,GAFC,IAK9B,OACE,0BAAMgB,UAAWa,EAAatM,MAAOA,GACnC,yCACE0D,KAAMA,EACN3C,GAAIA,EACJa,KAAMA,EACNoK,SAAUA,EACVN,SAAUA,EACVjB,SAAUA,EACVkB,SAAUA,EACVF,UAAS,UAAKD,EAAL,UACTZ,UAAWA,EACXgB,QAASA,EACTC,QAASA,EACTC,OAAQA,EACRpB,SAAUW,KAAKd,aACfwB,UAAWA,EACXS,IAAKnB,KAAKJ,UACVtL,MAAOA,GACHuM,IAEN,0BAAMT,UAAS,UAAKD,EAAL,gB,gDAvGWlB,EAAOzG,GACrC,MAAI,YAAayG,EACR,2BACFzG,GADL,IAEE+G,QAASN,EAAMM,UAGZ,S,GA7BY6B,aAAjBpC,GACGqC,aAAe,CACpBlB,UAAW,cACXC,UAAW,GACXzL,MAAO,GACP4B,KAAM,WACNwJ,gBAAgB,EAChBS,QANoB,aAOpBC,OAPoB,aAQpBpB,SARoB,cAkITL,U,MC5HA,SAASsC,GAAUrC,GAChC,IAAIsC,EAaJ,OAXItC,EAAMuC,iBACRD,EACE,0BACEnB,UAAU,YACVG,QAAS,kBAAMtB,EAAMwC,aAAexC,EAAMwC,gBAEzC,KAAM,MAMX,yBAAKrB,UAAWsB,KAAG,aAAc,CAAEC,OAAQ1C,EAAM2C,YAC9CL,EADH,IACa,4BAAKtC,EAAM4C,QCZb,SAASC,KAAyB,IP6VFC,EO5VrCrM,EAAOsM,eAAPtM,GACFO,EAAWgM,cACXhI,EAAciI,aP0VyBH,EO1VkBrM,EP0VA,SAC/D8C,GAEA,OAAOA,EAAMmB,QAAQM,YAAYkI,QAAO,SAACpH,GACvC,GAAIvC,EAAMiB,MAAMzB,QAAS,CACvB,IAAMoK,EAAWrH,EAAIsH,WAAWxI,MAC9B,SAACjE,GAAD,OAAUA,EAAKF,KAAO8C,EAAMiB,MAAMzB,WAE9BsK,EAAUvH,EAAIwH,qBAAqB1I,MAAK,SAAC2I,GAAD,OAASA,EAAI9M,KAAOqM,KAElE,OAAOK,GAAYE,EAEnB,OAAO,QOrWLG,EAAmBP,YAAY1I,GAC/BkJ,EAAWR,YP2TmB,SAACH,GAAD,OAAmB,SAACvJ,GACxD,OAAOA,EAAMmB,QAAQqC,oBAAoBnC,MAAK,SAAC2I,GAAD,OAASA,EAAI9M,KAAOqM,MO5TrCY,CAAuBjN,IAChDkN,EAAUC,eACRC,EAAM,OAAG7I,QAAH,IAAGA,OAAH,EAAGA,EAAatE,KAAI,SAACoF,GAAD,OAC9B,yBAAKqF,UAAU,8BAA8BvK,IAAKkF,EAAIrF,IACpD,4BAAKqF,EAAI1C,MACT,2BAAI0C,EAAIgI,mBACR,kBAAC,GAAD,CACE1D,SAAU,SAAC2D,GACT3M,QAAQC,IAAI0M,GACZA,EAAIxD,OAAOD,QACPtJ,EAAS8C,EAAagC,EAAIrF,KAC1BO,EAASiD,EAAgB6B,EAAIrF,MAEnC6J,QAASkD,EAAiBQ,SAASlI,EAAIrF,MAGzC,kBAAC,KAAD,CAAMwN,GAAI,gBAAkBnI,EAAIrF,IAAhC,mBAIJ,OACE,6BACE,kBAAC,GAAD,CACEmM,MAAO,qBAAea,QAAf,IAAeA,OAAf,EAAeA,EAAUrK,QAAQ,EACxCmJ,gBAAgB,EAChBC,YAAamB,EAAQO,SAGtBL,EAED,kBAAC,KAAD,CAAM1C,UAAU,iBAAiB8C,GAAG,yBAApC,S,4BC1CS,SAASE,GAAwBnE,GAAsC,IAAD,IAE7EnC,EAAYoF,YAAYrF,EAAoBoC,EAAMvJ,KACxD,OACE,yBAAK0K,UAAU,8BACH,OAATtD,QAAS,IAATA,GAAA,UAAAA,EAAWvC,sBAAX,eAA2B9D,MAAO,yBAAK2J,UAAU,yBAAyBiD,IAAK,WAAwCvG,QAAxC,IAAwCA,GAAxC,UAAwCA,EAAWvC,sBAAnD,aAAwC,EAA2B9D,KAAK6M,IAAI,KAC5J,mCAAKxG,QAAL,IAAKA,OAAL,EAAKA,EAAWzE,OACN,OAATyE,QAAS,IAATA,OAAA,EAAAA,EAAWnC,MAAO,uCAAMmC,QAAN,IAAMA,OAAN,EAAMA,EAAWnC,KACpC,kCAAImC,QAAJ,IAAIA,OAAJ,EAAIA,EAAWyG,c,gBCEfC,GAAmBC,IAAMC,cAAgC,CAC7DC,kBAAmB,EACnBC,0BAAsB7M,IAGT,SAAS8M,GAAU5E,GAAuB,IAAD,EACJwE,IAAMK,SAAS,GADX,oBAC/CH,EAD+C,KAC5BC,EAD4B,KAEhDG,EAAWN,IAAMO,SAASrO,IAAIsJ,EAAM8E,UAAU,SAACE,EAAMxL,GACzD,GAAIgL,IAAMS,eAAeD,GACvB,OAAOR,IAAMU,aAAaF,EAAO,CAAEG,MAAO3L,OAG9C,OACE,kBAAC+K,GAAiBa,SAAlB,CAA2B/P,MAAO,CAACqP,oBAAmBC,yBACpD,yBAAKxD,UAAU,gBACZ2D,IAMF,SAASO,GAAcrF,GAA0B,IAAD,EAC/CsF,EAAYC,iBAAuB,MADY,EAEHC,qBAAWjB,IAAtDG,EAF8C,EAE9CA,kBAAmBC,EAF2B,EAE3BA,qBACpBc,EAASzF,EAAMmF,QAAUT,EAE/B,OACE,yCAAS1E,EAAT,CAAgBmB,UAAWsB,KAAG,iBAAkB,CAACiD,KAAMD,MACrD,yBAAKtE,UAAU,wBAAwBG,QAAS,kBAAMqD,GAAwBA,EAAqBc,GAAU,EAAKzF,EAAMmF,OAAS,KAC/H,wBAAIhE,UAAU,wBAAwBnB,EAAM4C,OAC5C,yBAAKzB,UAAU,sBACb,kBAAC,KAAD,QAGJ,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,4BAA4BzL,MACzC+P,EACI,CAAEE,UAAS,OAAEL,QAAF,IAAEA,GAAF,UAAEA,EAAWM,eAAb,aAAE,EAAoBC,cACjC,CAAEF,UAAW,QAEjB,yBAAKxE,UAAU,yBAAyBe,IAAKoD,GAC1CtF,EAAM8E,aC3CJ,SAASgB,GAAgB9F,GAEtC,IAAM+F,EAAO9C,YAAYnF,GACnB0F,EAAmBP,YAAY1I,GAC/BvD,EAAWgM,cAEXgD,EAAaD,EAAKrP,KAAI,SAAC6M,GAC3B,IAAM0C,EAAkB1C,EAAIvI,YAAYtE,KAAI,SAAAmH,GAC1C,OACE,yBAAKsD,UAAU,+BAA+BvK,IAAKiH,EAAUpH,IAC3D,yBAAM0K,UAAU,wBACbtD,EAAUvC,gBACb,yBAAK6F,UAAU,yBAAyBG,QAAS,kBAAKtB,EAAMkG,eAAerI,EAAUpH,MACnF,yBAAK0K,UAAU,kBAAkBiD,IAAK,GAAwCvG,EAAUvC,eAAe9D,IAAK6M,IAAI,MAEhH,yBAAKlD,UAAU,iCACb,yBAAKA,UAAU,yBAAyByB,MAAO/E,EAAUzE,KAAMkI,QAAS,kBAAKtB,EAAMkG,eAAerI,EAAUpH,MAC1G,0BAAM0K,UAAU,2BbhBPgF,EagB0CtI,EAAUzE,KbhBvC+L,EagB6C,Gbf9EgB,EAAKC,OAASjB,EACRgB,EAAKE,UAAU,EAAGlB,GAAS,SAE7BgB,IaaO,0BAAMhF,UAAU,6BAA6B/L,EAAeyI,EAAUnC,KAAO,KAE9E8H,EAAiB5I,MAAK,SAAA0L,GAAK,OAAIA,IAAUzI,EAAUpH,MAClD,0BAAM0K,UAAU,oDAAqDG,QAAS,kBAAMtK,EAASiD,EAAgB4D,EAAUpH,OACrH,0BAAM0K,UAAU,gCACd,kBAAC,KAAD,OAEF,0BAAMA,UAAU,+BACd,kBAAC,KAAD,QAIJ,0BAAMA,UAAU,kDAAkDG,QAAS,kBAAMtK,EAAS8C,EAAa+D,EAAUpH,OAC/G,kBAAC,KAAD,OAGJ,0BAAM0K,UAAU,wDAAwDG,QAAS,kBAAKtB,EAAMkG,eAAerI,EAAUpH,MACnH,kBAAC,KAAD,UblCQ,IAAC0P,EAAahB,Ka0ClC,OACE,kBAACE,GAAD,CAAezO,IAAK2M,EAAI9M,GAAImM,MAAOW,EAAInK,MACpC6M,KAGJ,IAaH,OAEE,yBAAK9E,UAAWsB,KAAG,oCAIjB,+CACA,uBAAGtB,UAAU,cAAb,kDAEA,kBAAC,GAAD,KACG6E,I,MC9EM,SAASO,KAEtB,IAAMC,EAAQvD,YAAY7H,GAFgB,EAGJyJ,oBAAS,GAHL,oBAGnC4B,EAHmC,KAGtBC,EAHsB,OAIU7B,mBAAS,KAJnB,oBAInC8B,EAJmC,KAIfC,EAJe,KAY1C,OACE,yBAAKzF,UAAU,uBACb,yBAAKA,UAAU,yBACb,yBAAKiD,IAAK,WAAwCoC,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAOhP,KAAK6M,IAAI,MAEpE,yBAAKlD,UAAU,+BACb,yBAAKA,UAAWsB,KAAG,iBAAkB,CAACC,QAAS+D,KAC7C,kBAAC,GAAD,CAAiBP,eAAgB,SAACzP,GAAD,OAblBoQ,EAa+CpQ,EAZpEW,QAAQC,IAAI,qBAAuBwP,GACnCH,GAAe,QACfE,EAAsBC,GAHF,IAACA,MAgBjB,yBAAK1F,UAAWsB,KAAG,iBAAkB,CAACC,OAAQ+D,KAC5C,yBAAK/Q,MAAO,CAACoR,OAAO,WAAYxF,QAAS,kBAAMoF,GAAe,KAAQ,kBAAC,KAAD,MAAtE,SACA,kBAAC,GAAD,CAAyBjQ,GAAIkQ,O,MC3BxB,SAASI,KAAmB,IAEjCtQ,EAAOsM,eAAPtM,GACFoH,EAAYoF,YAAYrF,EAAoBnH,IAC9CkN,EAAUC,eAEd,OADAxM,QAAQC,IAAI,OAAQwG,GAElB,6BACE,mCAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAWzE,MAChB,uCAAMyE,QAAN,IAAMA,OAAN,EAAMA,EAAWnC,KACjB,kCAAImC,QAAJ,IAAIA,OAAJ,EAAIA,EAAWyG,aACf,4BACEnD,UAAU,6BAEVG,QAASqC,EAAQO,QAHnB,S,mBCRS,SAAS8C,GAAYhH,GAClC,IAAMhJ,EAAWgM,cAD+B,EAEGiE,eAA3CC,EAFwC,EAExCA,SAAUC,EAF8B,EAE9BA,UAAWC,EAFmB,EAEnBA,kBAEvBnH,EAAY,uCAAG,4BAAA9I,EAAA,6DACnBH,EAASkH,EAAsBiJ,MADZ,SAEEC,IAFF,OAEbC,EAFa,OAGnBrH,EAAMsH,QAAQD,GAHK,2CAAH,qDAMlB,OACE,kBAAC,IAAME,SAAP,KACE,0BAAMnH,SAAUH,EAAckB,UAAU,UACtC,kCACE,sDACA,2BAAOqG,QAAQ,kBACb,0BAAMrG,UAAU,cAAhB,UACA,2BACE1K,GAAG,iBACH2C,KAAK,iBACLqO,YAAY,cACZvF,IAAKgF,EAAS,CAAExF,UAAU,OAI9B,2BAAO8F,QAAQ,kBACb,0BAAMrG,UAAU,cAAhB,UACA,2BACE1K,GAAG,iBACH2C,KAAK,iBACLqO,YAAY,GACZvF,IAAKgF,KAIT,2BAAOM,QAAQ,QACb,0BAAMrG,UAAU,cAAhB,QACA,2BACE1K,GAAG,OACH2C,KAAK,OACLqO,YAAY,YACZvF,IAAKgF,EAAS,CAAExF,UAAU,OAI9B,2BAAO8F,QAAQ,WACb,0BAAMrG,UAAU,cAAhB,WACA,2BACE1K,GAAG,UACH2C,KAAK,UACLsO,aAAa,YACbD,YAAY,YACZvF,IAAKgF,EAAS,CACZxF,UAAU,OAKhB,2BAAO8F,QAAQ,SACb,0BAAMrG,UAAU,cAAhB,SACA,2BACE1K,GAAG,SACH2C,KAAK,QACLqO,YAAY,MACZvF,IAAKgF,EAAS,CAAExF,UAAU,U,mBC3DzB,SAASiG,KACtB,IAAMzM,EAAU+H,YAAYxI,GACtBU,EAAQ8H,YAAYpI,GACpBG,EAAciI,YAAYlI,GAG1B6M,EAFkB3E,YAAYjH,GAEQtF,KAAI,SAAC4F,GAAD,aAC9C,yBAAK1F,IAAK0F,EAAOlD,MACf,8BAAOkD,EAAOlD,MACd,wCAAOkD,EAAOF,sBAAd,aAAO,EAAuBD,iBAI5B0L,EAAoB7M,EAAYtE,KAAI,SAACoF,GAAD,OACxC,kBAAC,KAAD,CAAMmI,GAAI,wBAAkBnI,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAKrF,IAAIG,IAAG,OAAEkF,QAAF,IAAEA,OAAF,EAAEA,EAAKrF,GAAI0K,UAAU,aAC3D,qCAAOrF,QAAP,IAAOA,OAAP,EAAOA,EAAK1C,MACZ,8BAAOhE,GAAkB,OAAH0G,QAAG,IAAHA,OAAA,EAAAA,EAAKJ,MAAO,QAIhCoM,GAAoB,OAAL3M,QAAK,IAALA,OAAA,EAAAA,EAAO/B,MAAP,OAAe+B,QAAf,IAAeA,OAAf,EAAeA,EAAO/B,KAAtB,OAA6B8B,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAS9B,KAE3D,OACE,yBAAK+H,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,kBACb,kBAAC,KAAD,OAEF,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,mBAAmB2G,GAA8B,kBAC9DD,EAAkBzB,OAAS,GAAK,0BAAMjF,UAAU,yBAAyBnG,EAAYoL,OAArD,kBAIrC,yBAAKjF,UAAU,mBACb,8BAAO/L,EAAe6N,YAAYzH,MAEnCoM,G,MC3CQ,SAASG,KACtB,IAAMhC,EAAO9C,YAAYnF,GACnB6F,EAAUC,eACVoE,EAAc,OAAGjC,QAAH,IAAGA,OAAH,EAAGA,EAAMrP,KAAI,SAAC6M,GAAD,aAC/B,kBAAC,KAAD,CACEU,GAAI,yBAA2BV,EAAI9M,GACnC0K,UAAU,gBACVvK,IAAK2M,EAAI9M,IAET,yBAAK0K,UAAWsB,KAAG,kBACjB,yBAAK2B,IAAKtE,IAAA,UAAmCyD,EAAI0E,YAAvC,aAAmC,EAAUzQ,KAAK6M,IAAI,KAChE,8BAAOd,EAAInK,WAKjB,OACE,kBAAC,IAAMmO,SAAP,KACE,kBAAC,GAAD,CACE3E,MAAO,uBACPL,gBAAgB,EAChBC,YAAamB,EAAQO,SAEvB,yBAAK/C,UAAU,oBAAoB6G,ICrB1B,SAASE,GAAmBlI,GACzC,IAAMhJ,EAAWgM,cADsC,EAEIiE,aAEzD,CACAhP,KAAM,aAHAiP,EAF+C,EAE/CA,SAAUiB,EAFqC,EAErCA,OAAQhB,EAF6B,EAE7BA,UAAWC,EAFkB,EAElBA,kBAM/BnH,EAAY,uCAAG,4BAAA9I,EAAA,6DACnBH,EAASiH,EAAsBkJ,MADZ,SAEEC,IAFF,OAEbC,EAFa,OAGnBrH,EAAMsH,QAAQD,GAHK,2CAAH,qDAMlB,OACE,kBAAC,IAAME,SAAP,KACE,0BAAMnH,SAAUH,EAAckB,UAAU,UACtC,kCACE,8DACA,2BAAOqG,QAAQ,aACb,0BAAMrG,UAAU,cAAhB,cACA,2BACE1K,GAAG,YACH2C,KAAK,YACLqO,YAAY,OACZvF,IAAKgF,EAAS,CAAExF,UAAU,OAI9B,2BAAO8F,QAAQ,WACb,0BAAMrG,UAAU,cAAhB,WACA,2BACE1K,GAAG,UACH2C,KAAK,UACLqO,YAAY,QACZvF,IAAKgF,EAAS,CAAExF,UAAU,OAI9B,2BAAO8F,QAAQ,SACb,0BAAMrG,UAAU,cAAhB,SACA,2BACE1K,GAAG,QACH2C,KAAK,QACLqO,YAAY,eACZvF,IAAKgF,EAAS,CAAExF,UAAU,OAI9B,2BAAO8F,QAAQ,SACb,0BAAMrG,UAAU,cAAhB,SACA,2BACE1K,GAAG,QACH2C,KAAK,QACLqO,YAAY,iBACZvF,IAAKgF,EAAS,CACZxF,UAAU,EACV0G,QAAS,CACP/S,MAAO,4CACPuD,QAAS,8BAKhBuP,EAAOE,OAAS,8BAAOF,EAAOE,MAAMzP,SAErC,2BAAO4O,QAAQ,YACb,0BAAMrG,UAAU,cAAhB,YACA,2BACE1K,GAAG,YACH2C,KAAK,WACLqO,YAAY,OACZvF,IAAKgF,EAAS,CAAExF,UAAU,OAI9B,2BAAO8F,QAAQ,aAAarG,UAAU,SACpC,2BACE1K,GAAG,aACHa,KAAK,WACL8B,KAAK,aACL0H,gBAAgB,EAChBoB,IAAKgF,IANT,gDC7EK,SAASoB,GAAoBtI,GAC1C,IAAMhJ,EAAWgM,cADuC,EAELiE,aAAyB,CAC1EhP,KAAM,WACNsQ,eAAgB,aAFVrB,EAFgD,EAEhDA,SAAUE,EAFsC,EAEtCA,kBAAmBD,EAFmB,EAEnBA,UAK/BlH,EAAY,uCAAG,4BAAA9I,EAAA,6DACnBH,EAASgH,EAAsBmJ,MADZ,SAEEC,IAFF,OAEbC,EAFa,OAGnBrH,EAAMsH,QAAQD,GAHK,2CAAH,qDAMlB,OACE,kBAAC,IAAME,SAAP,KACE,0BAAMnH,SAAUH,EAAckB,UAAU,UACtC,kCACE,mDACA,2BAAOqG,QAAQ,WAAWrG,UAAU,eAClC,2BACE1K,GAAG,WACH2C,KAAK,iBACL9B,KAAK,QACLjC,MAAM,WACN6M,IAAKgF,IAEP,0BAAM/F,UAAU,cAAhB,aAGF,2BAAOqG,QAAQ,SAASrG,UAAU,eAChC,2BACE1K,GAAG,SACH2C,KAAK,iBACL9B,KAAK,QACLjC,MAAM,SACN6M,IAAKgF,EAAS,CACZsB,SAAU,WACR,MAAsC,KAA/BrB,IAAYsB,oBAIzB,0BAAMtH,UAAU,cAAhB,aAIJ,kCACE,sDACA,4BAAQ/H,KAAK,SAAS3C,GAAG,SAASyL,IAAKgF,GACrC,4BAAQ7R,MAAM,eAAd,eACA,4BAAQA,MAAM,cAAd,eACA,4BAAQA,MAAM,cAAd,mB,MCpDG,SAASqT,KAAgB,IAAD,EAC7BjS,EAAOsM,eAAPtM,GAEF0E,EAAQ8H,YlBkXe,SAACxM,GAAD,OAAgB,SAAC8C,GAC9C,GAAKA,EAAMmB,QAAQC,UAA8C,IAAlCpB,EAAMmB,QAAQC,SAASyL,OAGtD,OAAO7M,EAAMmB,QAAQC,SAASkB,QAAyB,SAACC,EAAK6B,GAAU,IAAD,EAC9DxC,EAAwB,UAAGwC,EAAK7C,cAAR,aAAG,EAAaF,MAC5C,SAACO,GAGC,OAFA/D,QAAQC,WAAW8D,EAAM1E,UAAWA,GAE5B0E,EAAM1E,KAAQ,GAAGA,KAI7B,OAAI0E,GACQW,SACXhE,IkBjYuB6Q,CAAgBC,SAASnS,KAC/CkN,EAAUC,eAEd,OACE,yBAAKzC,UAAU,yBACb,yBAAKA,UAAU,yBACZhG,GAAS,yBAAKiJ,IAAK,WAAwCjJ,QAAxC,IAAwCA,GAAxC,UAAwCA,EAAOG,sBAA/C,aAAwC,EAAuB9D,KAAK6M,IAAI,MAE9F,yBAAKlD,UAAU,iBACb,4BAAKhG,IAAK,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAO/B,OACrB,gCAAM+B,GAASA,EAAMO,KACrB,2BAAIP,GAASA,EAAMmJ,aACnB,4BAAQhD,QAASqC,EAAQO,QAAzB,U,MCPO,SAAS2E,GAAY7I,GAClC,IAcI8I,EAdE9R,EAAWgM,cAEXlI,EAASmI,YAAYvF,GACrBvC,EAAQ8H,YAAYpI,GACpBL,EAAQyI,YAAYhI,GACpBmD,EAAW6E,YAAYtE,GAqD7B,OAjDAoK,qBAAU,YACR,OAAIjO,QAAJ,IAAIA,OAAJ,EAAIA,EAAQF,MAAK,SAAC+C,GAAD,OAAUA,EAAKlH,MAAL,OAAY0E,QAAZ,IAAYA,OAAZ,EAAYA,EAAO1E,SAC5CuJ,EAAMsH,SAAQ,MAMdxM,IACFgO,EAAmBhO,EAAOpE,KAAI,SAACsS,GAAO,IAAD,IACnC,OACE,yBACE7H,UAAWsB,KAAG,UAAW,CAAEwG,UAAe,OAAL9N,QAAK,IAALA,OAAA,EAAAA,EAAO1E,MAAOuS,EAAEvS,KACrDG,IAAKoS,EAAEvS,GACP6K,QAAS,WpBwDQ,IAAC9J,EAAYxB,EoBvD5BgB,EAASgD,EAASgP,EAAEvS,KAGpBW,QAAQC,IAAI,UACZ2I,EAAMsH,SAAQ,IACd,OAAIlJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAUC,cACZrH,GpBiDcQ,EoBjDM,OAAC4G,QAAD,IAACA,OAAD,EAACA,EAAUC,YpBiDLrI,EoBjDkBwE,EpBiDK,SAACxD,GAE9D,OADAI,QAAQC,IAAI,YACLL,EACLH,EAAa,CACXW,IAAKA,EACLxB,KAAKA,UoBjDD,yBAAKmL,UAAU,0BACZ,UAAA6H,EAAE1N,sBAAF,eAAkB9D,MACjB,yBACE2J,UAAU,gBACViD,IAAKtE,IAAA,UAAmCkJ,EAAE1N,sBAArC,aAAmC,EAAkB9D,KAC1D6M,IAAK2E,EAAE5P,QAIb,yBAAK+H,UAAU,0BACb,wBAAIA,UAAU,iBAAiB6H,EAAE5P,MACjC,uBAAG+H,UAAU,6BAA6B6H,EAAElF,mBAC5C,yBAAK3C,UAAU,uBACZ6H,EAAEtN,KAAO,wBAAIyF,UAAU,iBAAd,aAAyC/L,EAAe4T,EAAEtN,MACpE,kBAAC,KAAD,CAASuI,GAAE,wBAAmB+E,EAAEvS,IAAM0K,UAAU,kBAAhD,oBAUV,6BAIE,yBAAKA,UAAU,mBACZ2H,I,mBCzEM,SAASI,KAAkB,IAAD,EAE/BzS,EAAOsM,eAAPtM,GACFyE,EAAU+H,YpBmYe,SAACxM,GAAD,OAAgB,SAAC8C,GAChD,GAAKA,EAAMmB,QAAQC,UAA8C,IAAlCpB,EAAMmB,QAAQC,SAASyL,OAStD,OAHkC7M,EAAMmB,QAAQC,SAASC,MAAK,SAAC+C,GAE7D,OADAvG,QAAQC,WAAWsG,EAAKlH,UAAWA,GAC5BkH,EAAKlH,KAAOA,KAPnBW,QAAQC,IAAI,gBAAiBkC,EAAMmB,QAAQC,WoBrYjBwO,CAAkB1S,IAC1CkN,EAAUC,eAEd,OACE,yBAAKzC,UAAU,2BACb,yBAAKA,UAAU,yBACZjG,GAAW,yBAAKkJ,IAAK,WAAwClJ,QAAxC,IAAwCA,GAAxC,UAAwCA,EAASI,sBAAjD,aAAwC,EAAyB9D,KAAK6M,IAAI,MAElG,yBAAKlD,UAAU,mBACb,4BAAKjG,IAAO,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAS9B,OACzB,gCAAM8B,GAAWA,EAAQQ,KACzB,kBAAC,KAAD,MAAuB,OAAPR,QAAO,IAAPA,OAAA,EAAAA,EAASoJ,aAAa,IACtC,4BAAQhD,QAASqC,EAAQO,QAAzB,U,MCRO,SAASkF,GAAcpJ,GACpC,IAWI8I,EAXE9R,EAAWgM,cACXrI,EAAWsI,YAAYxF,GACvBvC,EAAU+H,YAAYxI,GA2C5B,OAxCAsO,qBAAU,WACJpO,EAASC,MAAK,SAAC+C,GAAD,OAAUA,EAAKlH,MAAL,OAAYyE,QAAZ,IAAYA,OAAZ,EAAYA,EAASzE,QAC/CuJ,EAAMsH,SAAQ,MAKd3M,IACFmO,EAAmBnO,EAASjE,KAAI,SAACsS,GAAO,IAAD,IACrC,OACE,yBACE7H,UAAWsB,KAAG,UAAW,CAAEwG,UAAiB,OAAP/N,QAAO,IAAPA,OAAA,EAAAA,EAASzE,MAAOuS,EAAEvS,KACvDG,IAAKoS,EAAEvS,GACP6K,QAAS,WACPtK,EAAS+C,EAAWiP,EAAEvS,OAGxB,yBAAK0K,UAAU,0BACZ,UAAA6H,EAAE1N,sBAAF,eAAkB9D,MACjB,yBACE2J,UAAU,gBACVkD,IAAK2E,EAAE5P,KACPgL,IAAG,UAAE4E,EAAE1N,sBAAJ,aAAE,EAAkB9D,OAI7B,yBAAK2J,UAAU,0BACb,wBAAIA,UAAU,iBAAiB6H,EAAE5P,MACjC,uBAAG+H,UAAU,6BAA6B6H,EAAElF,mBAC5C,yBAAK3C,UAAU,uBACZ6H,EAAEtN,KAAO,wBAAIyF,UAAU,iBAAd,aAAyC/L,EAAe4T,EAAEtN,MACpE,kBAAC,KAAD,CAASuI,GAAE,0BAAqB+E,EAAEvS,IAAM0K,UAAU,kBAAlD,qBAUV,6BACE,yBAAKA,UAAU,mBACZ2H,I,MCnDM,SAASO,KACtB,IAAMnO,EAAU+H,YAAYxI,GACtBU,EAAQ8H,YAAYpI,GACpBG,EAAciI,YAAYlI,GAE1ByL,EAAQvD,YAAY7H,GAGpByM,EAAoB7M,EAAYtE,KAAI,SAACoF,GAAD,OACxC,kBAAC,KAAD,CAAMmI,GAAI,wBAAkBnI,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAKrF,IAAIG,IAAG,OAAEkF,QAAF,IAAEA,OAAF,EAAEA,EAAKrF,GAAI0K,UAAU,aAC3D,qCAAOrF,QAAP,IAAOA,OAAP,EAAOA,EAAK1C,MACZ,8BAAOhE,GAAkB,OAAH0G,QAAG,IAAHA,OAAA,EAAAA,EAAKJ,MAAO,QAKtC,OACE,yBAAKyF,UAAU,oBACb,wBAAIA,UAAU,MAAd,8BACA,wBAAIA,UAAU,wBAAuB,0BAAMA,UAAU,sBAAhB,OAAsCjG,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAS9B,MAApF,WAAkG+B,QAAlG,IAAkGA,OAAlG,EAAkGA,EAAO/B,MACxGyO,EAAkBzB,OAAS,GAAK,0BAAMjF,UAAU,wBAAhB,QAA6CnG,EAAYoL,OAAzD,gBACjC,yBAAKjF,UAAU,0BACb,yBAAKiD,IAAK,WAAwCoC,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAOhP,KAAK6M,IAAI,MAGpE,yBAAKlD,UAAU,sBAAf,SACQ,8BAAO/L,EAAe6N,YAAYzH,MAE1C,yBAAK2F,UAAU,oBACb,4BAAQA,UAAU,4BAA2B,kBAAC,KAAD,MAA7C,IAAwD,kDACxD,4BAAQA,UAAU,kBAAiB,kBAAC,KAAD,MAAnC,IAAoD,6CCnCrD,IAAMmI,GAAS,SAACtJ,GACrB,IAAMuJ,EAAQ/E,IAAMO,SAASyE,QAAQxJ,EAAM8E,UAE3C,OACE,kBAAC,IAAMyC,SAAP,KACE,kBAACkC,GAAD,CAAUC,KAAK,gBAAgBH,MAAOA,EAAOI,YAAa3J,EAAM2J,gBAMzDC,GAAO,SAAC5J,GAAW,IACtBsH,EAAsBtH,EAAtBsH,QAASxC,EAAa9E,EAAb8E,SAOjB,OALAiE,qBAAU,WACJvE,IAAMS,eAAeH,IACvBwC,GAAQ,MAGP9C,IAAMS,eAAeH,GAGjBA,EAFAA,EAASwC,IAMpB,SAASmC,GAAT,GAAuD,EAAnCI,YAAoC,IAAvBN,EAAsB,EAAtBA,MAAOI,EAAe,EAAfA,YAChC3S,EAAWgM,cADoC,EAE3B6B,oBAAS,GAFkB,oBAE9CiF,EAF8C,KAEvCC,EAFuC,OAGnBlF,oBAAU,GAHS,oBAG9CmF,EAH8C,KAGnCC,EAHmC,KAO/CC,EAAeP,EAEjBK,IAAcE,IAChBH,GAAS,GACTE,EAAaC,IAGf,IAAMC,EAAWD,EAAe,GAAKX,EAAMW,EAAe,GAAGlK,MACvDoK,EAAWF,EAAeX,EAAMnD,OAAS,GAAKmD,EAAMW,EAAe,GAAGlK,MAK5E,GAAIkK,EAAe,EACjB,OAAO,kBAACG,GAAD,CAASX,KAAMH,EAAM,GAAGvJ,MAAM0J,OAGvC,IAAMY,EAAaf,EAAM7S,KAAI,SAAC6T,EAAM/Q,GAAP,OAAe,kBAAC,GAAD,CAAWoJ,MAAOpJ,EAAM,EAAI,KAAO+Q,EAAKvK,MAAM4C,MAAOD,SAAUuH,IAAe1Q,EAAK5C,IAAK4C,OAEpI,OACE,6BACE,yBAAK2H,UAAU,wBACZmJ,GAUF9F,IAAMU,aAAaqE,EAAMW,GAAe,CAAE5C,QAtB3B,SAACkD,GACnBT,EAASS,MAuBP,4BAAQrJ,UAAU,iBAChB,kBAACsJ,GAAD,CAAQtJ,UAAWsB,KAAG,cAAe,mBAAoB,CAACtC,UAAWgK,IACnE7I,QAAS,kBAAMtK,EAAS+H,OACxB6D,MAAOuH,EAAS7F,aAFlB,QAIA,kBAACmG,GAAD,CACEtJ,UAAWsB,KAAG,iBAAkB,CAAEtC,UAAW2J,IAC7CxI,QAAS,kBAAMtK,EAAS8H,MACxB8D,MAAOwH,EAAS9F,aAHlB,UAUR,SAAS+F,GAAQrK,GACf,OAAO,kBAAC,KAAD,CAAUiE,GAAIjE,EAAM0J,KAAMgB,SAAO,IAG1C,SAASD,GAAT,GAAqC,IAAnBf,EAAkB,EAAlBA,KAAS1J,EAAS,yBAClC,OACE,kBAAC,KAAD,eACEiE,GAAE,aAAQyF,GACVvI,UAAWuI,EAAO,kBAAoB,aAClC1J,ICSK2K,OAtFf,WACE,IAAMvM,EAAW6E,YAAYtE,GACvBgL,EAAc1G,YAAYhE,IAChC,OACE,yBAAKkC,UAAU,OACb,kBAAC,KAAD,KACE,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qBACb,8BACE,wBAAIA,UAAU,cAAd,yBACA,kBAAC,GAAD,MACA,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOuI,KAAK,qBACV,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOA,KAAK,uBACV,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOA,KAAK,6BACV,kBAAC7G,GAAD,OAEF,kBAAC,KAAD,CAAO6G,KAAK,0BACV,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOA,KAAK,oBACV,kBAAC3C,GAAD,OAEF,kBAAC,KAAD,CAAO2C,KAAK,KACV,kBAAC,GAAD,CAAQC,YAAaA,IACV,OAARvL,QAAQ,IAARA,OAAA,EAAAA,EAAUE,uCACX,kBAAC,GAAD,CAAMoL,KAAK,oBAAoB9G,MAAM,iBAClC,SAACgI,GAAD,OACC,kBAAC5D,GAAD,CAAaM,QAASsD,OAK1B,kBAAC,GAAD,CAAMlB,KAAK,mBAAmB9G,MAAM,mBACjC,SAACgI,GAAD,OACC,kBAAC,GAAD,CAAetD,QAASsD,OAG5B,kBAAC,GAAD,CAAMlB,KAAK,iBAAiB9G,MAAM,iBAC/B,SAACgI,GAAD,OACC,kBAAC,GAAD,CAAatD,QAASsD,OAG1B,kBAAC,GAAD,CACElB,KAAK,oBACL9G,MAAM,mBAEN,kBAAC,GAAD,SAED,OAACxE,QAAD,IAACA,OAAD,EAACA,EAAUE,uCACZ,kBAAC,GAAD,CAAMoL,KAAK,oBAAoB9G,MAAM,iBAClC,SAACgI,GAAD,OACC,kBAAC1C,GAAD,CAAoBZ,QAASsD,OAIjC,kBAAC,GAAD,CAAMlB,KAAK,qBAAqB9G,MAAM,qBACnC,SAACgI,GAAD,OACC,kBAACtC,GAAD,CAAqBhB,QAASsD,OAGlC,kBAAC,GAAD,CAAMlB,KAAK,oBAAoB9G,MAAM,iBAClC,SAACgI,GAAD,OACC,kBAAC5D,GAAD,CAAaM,QAASsD,OAI1B,kBAAC,GAAD,CAAMlB,KAAK,WAAW9G,MAAM,gBAC1B,kBAAC,GAAD,gB,MCjFFiI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUjM,MAAOA,IACf,kBAAC,GAAD,QAGJkM,SAASC,eAAe,YD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1U,QAAQ0U,MAAMA,EAAMlT,c","file":"static/js/main.b91b9924.chunk.js","sourcesContent":["export const formatCurrency = ( value: number, includeCents:boolean = false ): string => {\r\n  \r\n  if(includeCents){\r\n    \r\n  \r\n    // Create our number formatter.\r\n    var formatter = new Intl.NumberFormat('en-AU', {\r\n      style: 'currency',\r\n      currency: 'AUD',\r\n    });\r\n    return formatter.format(value); /* $2,500.00 */\r\n  } else {\r\n    return \"$\" + Number(value).toLocaleString()\r\n\r\n  }\r\n\r\n}\r\nexport const truncate = (text:string, index:number) => {\r\n  if(text.length > index) {\r\n    return text.substring(0, index) + \"\\u2026\";\r\n  }\r\n  return text;\r\n}\r\n\r\n/* takes strapiv4 response data and changes the structure back to strapiv3 style */\r\n/* ie. changes\r\nproducts{\r\n  data{\r\n    id   \r\n    attributes{\r\n      name\r\n    }\r\n  }\r\n}\r\nto\r\nproducts{\r\n  id\r\n  name\r\n}*/\r\nexport const normalize = (data:any) => {\r\n  const isObject = (data:any) =>\r\n    Object.prototype.toString.call(data) === '[object Object]'\r\n  const isArray = (data:any) =>\r\n    Object.prototype.toString.call(data) === '[object Array]'\r\n\r\n  const flatten = (data:any) => {\r\n    if (!data.attributes) return data\r\n\r\n    return {\r\n      id: data.id,\r\n      ...data.attributes\r\n    }\r\n  }\r\n\r\n  if (isArray(data)) {\r\n    return data.map((item:any) => normalize(item))\r\n  }\r\n\r\n  if (isObject(data)) {\r\n    if (isArray(data.data)) {\r\n      data = [...data.data]\r\n    } else if (isObject(data.data)) {\r\n      data = flatten({ ...data.data })\r\n    } else if (data.data === null) {\r\n      data = null\r\n    } else {\r\n      data = flatten(data)\r\n    }\r\n\r\n    for (const key in data) {\r\n      data[key] = normalize(data[key])\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  return data\r\n}\r\n","import { createAction, Middleware } from \"@reduxjs/toolkit\"\r\nimport { GraphQLClient } from \"graphql-request\"\r\nimport { normalize } from \"../../utils/utils\"\r\n\r\ninterface QueryVars {\r\n  key: string\r\n  value: string\r\n}\r\n\r\ninterface QueryVarsObj {\r\n  [key: string]: QueryVars\r\n}\r\n\r\ninterface apiPayload {\r\n  url: string\r\n  graphQlQuery?: string\r\n  // method?: string\r\n  data?: string\r\n  onSuccess?: string\r\n  onStart?: string\r\n  onError?: string\r\n}\r\n\r\n\r\nexport const apiCallBegan = createAction<apiPayload>(\"api/CallBegan\")\r\nexport const apiCallSuccess = createAction<any>(\"api/CallSuccess\")\r\nexport const apiCallFailed = createAction<string>(\"api/CallFailed\")\r\n\r\nconst api: Middleware = ({ dispatch }) => (next) => async (action) => {\r\n\r\n  console.log(action.type)\r\n  if (action.type !== apiCallBegan.type) return next(action)\r\n  next(action)\r\n\r\n  const {\r\n    url,\r\n    graphQlQuery,\r\n    data,\r\n    onStart,\r\n    onSuccess,\r\n    onError,\r\n    \r\n  } = action.payload\r\n  if (onStart) dispatch({ type: onStart })\r\n  \r\n  try {\r\n    let response = undefined;\r\n    //used to call webhooks\r\n    if (!graphQlQuery) {\r\n      response = await fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'no-cors', // no-cors, *cors, same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n      });\r\n    \r\n    }\r\n\r\n    if(graphQlQuery){\r\n      const graphQLClient = new GraphQLClient(url, {\r\n        // headers: {\r\n        //   authorization: 'Bearer MY_TOKEN',\r\n        // },\r\n      })\r\n\r\n      response = await graphQLClient.request(graphQlQuery)\r\n    }\r\n\r\n    // General\r\n    // dispatch(apiCallSuccess(response))\r\n    // Specific\r\n    if (onSuccess){\r\n      if(response && graphQlQuery){\r\n        const strapi3datastyle = normalize(response as any)\r\n        dispatch({ type: onSuccess, payload: strapi3datastyle })\r\n      }\r\n\r\n    }\r\n  } catch (error) {\r\n    \r\n    console.log('exception '+error)\r\n    // General\r\n    // dispatch(apiCallFailed(error.message))\r\n    // Specific\r\n    \r\n    if (onError) dispatch({ type: onError, payload: (error as any).message })\r\n  }\r\n}\r\n\r\nexport default api\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { apiCallBegan } from './middleware/api';\r\nimport { AppThunk, RootState } from \"./store\";\r\n\r\n\r\nexport interface CustomOptionEntry {\r\n  optionId: string\r\n  optionSelectionId: string\r\n}\r\ninterface buildState {\r\n  productId: string | undefined\r\n  modelId: string | undefined\r\n  accessoryIds: string[]\r\n  customOptions: CustomOptionEntry[]\r\n}\r\n\r\nconst initialState: buildState = {\r\n  productId: undefined,\r\n  modelId: undefined,\r\n  accessoryIds: [],\r\n  customOptions: [],\r\n}\r\n\r\nexport const buildSlice = createSlice({\r\n  name: \"build\",\r\n  initialState,\r\n  reducers: {\r\n    setCustomOption: (state, action: PayloadAction<CustomOptionEntry>) => {\r\n      //find option and update it, or add it if it is new.\r\n      const idx = state.customOptions.findIndex(\r\n        (el) => el.optionId === action.payload.optionId\r\n      )\r\n\r\n      if (idx !== -1) {\r\n        state.customOptions[idx].optionSelectionId =\r\n          action.payload.optionSelectionId\r\n      } else state.customOptions.push(action.payload)\r\n    },\r\n    addAccessory: (state, action: PayloadAction<string>) => {\r\n      state.accessoryIds.push(action.payload)\r\n    },\r\n    setProduct: (state, action: PayloadAction<string>) => {\r\n      if (state.productId !== action.payload) {\r\n        state.modelId = undefined\r\n      }\r\n      state.productId = action.payload\r\n    },\r\n    setModel: (state, action: PayloadAction<string>) => {\r\n      if (state.modelId !== action.payload) {\r\n        state.accessoryIds = []\r\n      }\r\n      state.modelId = action.payload\r\n    },\r\n    removeAccessory: (state, action: PayloadAction<string>) => {\r\n      const idx = state.accessoryIds.indexOf(action.payload)\r\n      if (idx > -1) {\r\n        const newState = state.accessoryIds.splice(idx, 1)\r\n        console.log(newState)\r\n      }\r\n    },\r\n    buildPosted: () => {},\r\n  },\r\n})\r\n\r\nexport const postBuild = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery =  `{\r\n    accessoryCategories {\r\n      data{\r\n        id\r\n        attributes{\r\n          name          \r\n          accessories {\r\n            data {\r\n              attributes {\r\n                name\r\n                rrp\r\n                short_description\r\n                description\r\n              }\r\n            }\r\n          }\r\n        }\r\n    }\r\n  }\r\n}`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onSuccess: buildSlice.actions.buildPosted.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const callWebhook = (url:string, data:any): AppThunk => (dispatch) => {\r\n  console.log('webkoook')\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: url,\r\n      data:data\r\n    })\r\n  )\r\n}\r\n\r\nexport const {\r\n  setCustomOption,\r\n  addAccessory,\r\n  setProduct,\r\n  setModel,\r\n  removeAccessory,\r\n} = buildSlice.actions\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectAccessoryById = (state: RootState, id: string) =>\r\n  state.catalog.accessories.find((acc) => acc.id === \"\"+id)\r\nexport const selectBuildAccessoryIds = (state: RootState) =>\r\n  state.build.accessoryIds\r\nexport const selectBuildProduct = (state: RootState) =>\r\n  state.catalog.products?.find((el) => el.id === \"\"+state.build?.productId)\r\nexport const selectBuildModel = (state: RootState) =>\r\n  selectBuildProduct(state)?.models?.find((el) => el.id === \"\"+state.build.modelId)\r\nexport const selectBuildAccessories = (state: RootState) =>\r\n  state.build.accessoryIds.map((id) =>\r\n    state.catalog.accessories.find((el) => el.id === \"\"+id)\r\n  )\r\nexport const selectBuild = (state: RootState) => {\r\n  return {\r\n    product: selectBuildProduct(state),\r\n    model: selectBuildModel(state),\r\n    accessories: selectBuildAccessories(state),\r\n    \r\n  }\r\n}\r\nexport const selectBuildImage = (state: RootState) => {\r\n  const modelImg = selectBuildModel(state)?.featured_image\r\n  const prodImg = selectBuildProduct(state)?.featured_image\r\n  if (modelImg) {\r\n    return modelImg\r\n  } else {\r\n    return prodImg\r\n  }\r\n}\r\nexport const selectBuildCost = (state: RootState) => {\r\n  const productPrice = selectBuildProduct(state)?.rrp || 0\r\n  const modelPrice = selectBuildModel(state)?.rrp || 0\r\n  const accessoryPrice = selectBuildAccessories(state).reduce(\r\n    (acc, curr) => acc + (curr?.rrp || 0),\r\n    0\r\n  )\r\n  if (modelPrice) {\r\n    return modelPrice + accessoryPrice\r\n  } else if (productPrice) {\r\n    return productPrice\r\n  } else {\r\n    return 0\r\n  }\r\n}\r\n\r\n// give it id of an option picker and it will return\r\n// an object with the selected option from the option picker\r\nexport const selectBuildCustomOption = (id: string) => (state: RootState) => {\r\n  //for some reason the param id is a string... so careful of comparisons..\r\n  const buildOption = state.build.customOptions.find((option) => {\r\n    return option.optionId === id\r\n  })\r\n  const selectedOptionId = buildOption?.optionSelectionId\r\n\r\n  //could have an issue with this, but not with current ui design\r\n  if (state.catalog.customOptionPickersLoading) {\r\n    return undefined\r\n  }\r\n\r\n  const catalogOption = state.catalog.customOptionPickers.find(\r\n    (picker) => picker.id === id\r\n  )\r\n\r\n  return catalogOption?.options.find((option) => option.id === selectedOptionId)\r\n}\r\n\r\n//work out how to return all the options iwth their names\r\n/*[\r\n  {\r\n    name: 'Colour',\r\n    option: {\r\n      id,\r\n      name\r\n    }\r\n  }\r\n]*/\r\n//only returns the selected options\r\nexport const selectBuildCustomOptions = (state: RootState) => {\r\n  const buildOptions = state.catalog.customOptionPickers.map((optionPicker) => {\r\n    return {\r\n      name: optionPicker.option_name,\r\n      selectedOption: selectBuildCustomOption(optionPicker.id)(state),\r\n    }\r\n  })\r\n\r\n  return buildOptions\r\n}\r\nexport default buildSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { apiCallBegan } from \"./middleware/api\"\r\nimport { AppThunk, RootState } from \"./store\"\r\n\r\ntype ModelOrUndefined = Model | undefined\r\n\r\n//for custom selections eg. pick colours\r\n\r\nexport interface CustomOption {\r\n  id: string\r\n  option_name: string\r\n  option_description?: string\r\n  rrp?: number\r\n  option_image?: Image[]\r\n}\r\nexport interface CustomOptionPicker {\r\n  id: string\r\n  screen_name: string\r\n  option_name: string\r\n  options: CustomOption[]\r\n}\r\n\r\nexport interface Category {\r\n  id: string\r\n  name: string\r\n  icon: {\r\n    url: string\r\n  }\r\n  accessories: Accessory[]\r\n}\r\ninterface Image {\r\n  url: string\r\n  id: string\r\n  width: number\r\n  height: number\r\n  alternativeText: string\r\n}\r\nexport interface buildItem {\r\n  id: string\r\n  name: string\r\n  short_description: string\r\n  description?: string\r\n  rrp?: number\r\n  featured_image?: Image\r\n}\r\n\r\nexport interface Product extends buildItem {\r\n  models: Model[]\r\n}\r\n\r\ninterface Accessory extends buildItem {\r\n  option_for: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n  included_in: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n  accessory_categories: [\r\n    {\r\n      id: string \r\n      icon: {\r\n        url: string\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\ninterface Model extends buildItem {\r\n  included_accessories: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n  optional_accessories: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n}\r\ninterface catalog {\r\n  products: Product[]\r\n  // models: Model[];\r\n  accessories: Accessory[]\r\n  accessoriesLoading: boolean\r\n  customOptionPickersLoading: boolean\r\n  accessoryCategories: Category[]\r\n  loading: boolean\r\n  customOptionPickers: CustomOptionPicker[]\r\n}\r\n\r\nconst initialState: catalog = {\r\n  loading: false,\r\n  accessoriesLoading: false,\r\n  customOptionPickersLoading: false,\r\n  products: [],\r\n  // models: [],\r\n  accessories: [],\r\n  accessoryCategories: [],\r\n  customOptionPickers: [],\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n  name: \"catalog\",\r\n  initialState,\r\n  reducers: {\r\n    customOptionPickersRequested: (state, action: PayloadAction<string>) => {\r\n      state.customOptionPickersLoading = true\r\n    },\r\n    customOptionPickersReceived: (state, action: PayloadAction<any>) => {\r\n      if (action.payload.model) {\r\n        state.customOptionPickers = action.payload.model.other_options\r\n      }\r\n      state.customOptionPickersLoading = false\r\n    },\r\n    accessoriesRequested: (state, action: PayloadAction<string>) => {\r\n      state.accessoriesLoading = true\r\n    },\r\n    accessoriesReceived: (state, action: PayloadAction<any>) => {\r\n      state.accessoriesLoading = false\r\n      state.accessories = action.payload.accessories\r\n    },\r\n    catalogRequested: (state, action: PayloadAction<string>) => {\r\n      state.loading = true\r\n    },\r\n    catalogReceived: (state, action: PayloadAction<any>) => {\r\n      console.log(action.payload.products)\r\n      state.products = action.payload.products\r\n      state.loading = false\r\n    },\r\n    categoriesRequested: (state, action: PayloadAction<string>) => {\r\n      // state.loading = true;\r\n    },\r\n    categoriesReceived: (state, action: PayloadAction<any>) => {\r\n      state.accessoryCategories = action.payload.accessoryCategories\r\n    },\r\n  },\r\n})\r\n\r\nexport const loadCategories = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    accessoryCategories {\r\n      data {\r\n      id \r\n      attributes {\r\n         name\r\n         accessories {\r\n          data {\r\n          \tid\r\n            attributes {\r\n              name\r\n              description\r\n              short_description\r\n              rrp\r\n              featured_image {\r\n                data{\r\n                  id\r\n                  attributes{\r\n                  \turl\r\n                    alternativeText\r\n                  }\r\n                }\r\n                \r\n              }\r\n              option_for {\r\n                data{\r\n                \tid\r\n                }\r\n                \r\n              }\r\n            }\r\n          }\r\n      }\r\n      }\r\n    }\r\n  }\r\n  }`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.categoriesRequested.type,\r\n      onSuccess: catalogSlice.actions.categoriesReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const loadCustomOptionPickers = (): AppThunk => (dispatch, getState) => {\r\n  const modelId = getState().build.modelId || 0\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n  model(id: \"${modelId}\") {\r\n    other_options{\r\n      id\r\n      screen_name\r\n      option_name\r\n      options {\t\r\n        id\r\n        option_name\r\n        option_description\r\n        rrp\r\n        option_image {\r\n          url\r\n        }\r\n      }\r\n    }  \r\n  }\r\n}`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.customOptionPickersRequested.type,\r\n      onSuccess: catalogSlice.actions.customOptionPickersReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\n\r\n// console.log('transformed')\r\n// console.log(transformResponse(example.data.accessoryCategories as collection));\r\n\r\nexport const loadCatalog = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    products(sort: \"rrp\") {\r\n      data {\r\n        id\r\n        attributes {\r\n          name\r\n          short_description\r\n          description\r\n          rrp\r\n          featured_image {\r\n            data{\r\n              id\r\n              attributes{\r\n                url\r\n                width\r\n                height\r\n              }\r\n            }\r\n          }\r\n          models(sort: \"rrp\") {\r\n            data{\r\n              id\r\n              attributes {\r\n                name\r\n                short_description\r\n                description\r\n                rrp\r\n                featured_image{\r\n                  data {\r\n                    id \r\n                    attributes{\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }    \r\n          }\r\n        }     \r\n      }\r\n    }\r\n  }`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.catalogRequested.type,\r\n      onSuccess: catalogSlice.actions.catalogReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const loadAccessories = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    accessories {\r\n      data {\r\n        id\r\n        attributes{\r\n          name\r\n          short_description\r\n          description\r\n          rrp\r\n          featured_image {\r\n            data{\r\n              attributes{\r\n            \t\turl    \r\n              }\r\n            }\r\n          }\r\n          accessory_categories{\r\n            data{\r\n              id\r\n              attributes{\r\n                name      \r\n              }\r\n            }\r\n          }\r\n          option_for {\r\n            data{\r\n            \tid  \r\n            }\r\n          }\r\n          included_in {\r\n            data {\r\n            \tid  \r\n            }\r\n          }        \r\n      }\r\n    }   \r\n  }\r\n}`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.accessoriesRequested.type,\r\n      onSuccess: catalogSlice.actions.accessoriesReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\n// SELECTORS\r\nexport const selectProducts = (state: RootState) => state.catalog.products\r\nexport const selectCompatibleModels = (state: RootState) =>\r\n  state.catalog.products.find((prod) => \"\"+state.build.productId === prod.id)\r\n    ?.models\r\nexport const selectAccessoryCatById = (catId: string) => (state: RootState) => {\r\n  return state.catalog.accessoryCategories.find((cat) => cat.id === catId)\r\n}\r\nexport const selectIncludedAccessories = (state: RootState) => {\r\n  return state.catalog.accessories.filter((acc) => {\r\n    if (state.build.modelId) {\r\n      const accessory = acc.included_in.find(\r\n        (item) => item.id === state.build.modelId\r\n      )\r\n      return accessory\r\n    } else {\r\n      return false\r\n    }\r\n  })\r\n}\r\n\r\nexport const selectOptionalAccessories = (state: RootState) => {\r\n  return state.catalog.accessories.filter((acc) => {\r\n    if (state.build.modelId) {\r\n      const accessory = acc.option_for.find(\r\n        (item) => item.id === state.build.modelId\r\n      )\r\n      return accessory\r\n    } else {\r\n      return false\r\n    }\r\n  })\r\n}\r\n\r\nexport const selectOptionalAccessoriesInCat = (catId: string) => (\r\n  state: RootState\r\n) => {\r\n  return state.catalog.accessories.filter((acc) => {\r\n    if (state.build.modelId) {\r\n      const isOption = acc.option_for.find(\r\n        (item) => item.id === state.build.modelId\r\n      )\r\n      const isInCat = acc.accessory_categories.find((cat) => cat.id === catId)\r\n\r\n      return isOption && isInCat\r\n    } else {\r\n      return false\r\n    }\r\n  })\r\n}\r\nexport const selectModelById = (id: number) => (state: RootState) => {\r\n  if (!state.catalog.products || state.catalog.products.length === 0) {\r\n    return undefined\r\n  }\r\n  return state.catalog.products.reduce<ModelOrUndefined>((acc, prod) => {\r\n    const model: Model | undefined = prod.models?.find(\r\n      (model) => {\r\n        console.log(typeof model.id, typeof id)\r\n\r\n        return (model.id) === \"\"+id\r\n      }\r\n    )\r\n\r\n    if (model) return model\r\n    else return acc\r\n  }, undefined)\r\n}\r\nexport const selectProductById = (id: string) => (state: RootState) => {\r\n  if (!state.catalog.products || state.catalog.products.length === 0) {\r\n    console.log('no prod found', state.catalog.products)\r\n    return undefined\r\n  }\r\n  // console.log(state.catalog.products)\r\n  // console.log(state.catalog.accessories)\r\n  const product:Product|undefined = state.catalog.products.find((prod) => {\r\n    console.log(typeof prod.id, typeof id)\r\n    return prod.id === id})\r\n  return product\r\n}\r\n\r\nexport const selectAccessoryById = (id: string) => (state: RootState) =>\r\n  state.catalog.accessories.find((accessory) => accessory.id === \"\"+id)\r\nexport const selectCategories = (state: RootState) =>\r\n  state.catalog.accessoryCategories\r\n  \r\n\r\nexport const selectCustomOptionPicker = (id: string) => (state: RootState) =>\r\n  state.catalog.customOptionPickers.find((el) => el.id === id)\r\nexport const selectCustomOptionPickers = (state: RootState) =>\r\n  state.catalog.customOptionPickers\r\nexport const selectCustomOptionPickersLoading = (state: RootState) =>\r\n  state.catalog.customOptionPickersLoading\r\n\r\n\r\nexport default catalogSlice.reducer","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\n\r\nexport type deliveryDetails = {\r\n  deliverymethod: string\r\n  dealer: string\r\n}\r\n\r\nexport interface address {\r\n  line1: string\r\n  line2?: string\r\n  city: string\r\n  country: string\r\n  state: string\r\n  postcode: string\r\n}\r\n\r\nexport interface customerDetails {\r\n  firstName?: string\r\n  surname?: string\r\n  phone?: string\r\n  email?: string\r\n  address?: address\r\n  newsletter?: boolean\r\n  deliveryMethod?: string\r\n  preferredDealer?: string\r\n}\r\n\r\nconst initialState: customerDetails = {}\r\n\r\nexport const customerSlice = createSlice({\r\n  name: \"customer\",\r\n  initialState,\r\n  reducers: {\r\n    updateDeliveryDetails: (state, action: PayloadAction<deliveryDetails>) => {\r\n      return { ...state, ...action.payload }\r\n    },\r\n    updateCustomerDetails: (state, action: PayloadAction<customerDetails>) => {\r\n      return { ...state, ...action.payload }\r\n    },\r\n    updateCustomerAddress: (state, action: PayloadAction<address>) => {\r\n      state.address = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  updateDeliveryDetails,\r\n  updateCustomerDetails,\r\n  updateCustomerAddress,\r\n} = customerSlice.actions\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\n// export const selectBuilderStep = (state: RootState) => state.ui.builderStep\r\n\r\nexport default customerSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { apiCallBegan } from \"./middleware/api\"\r\nimport { AppThunk, RootState } from \"./store\"\r\n\r\ninterface settings {\r\n  // settings:\r\n  loading: boolean\r\n  settings: {\r\n    webhook_url: string | undefined\r\n    require_user_contact_details_upfront: string | undefined\r\n    logo_light: {\r\n      url: string | undefined\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState: settings = {\r\n  loading: false,\r\n  settings: {\r\n    webhook_url: undefined,\r\n    require_user_contact_details_upfront: undefined,\r\n    logo_light: {\r\n      url: undefined,\r\n    },\r\n  },\r\n}\r\n\r\nexport const settingsSlice = createSlice({\r\n  name: \"settings\",\r\n  initialState,\r\n  reducers: {\r\n    settingsRequested: (state, action: PayloadAction<string>) => {\r\n      state.loading = true\r\n    },\r\n    settingsReceived: (state, action: PayloadAction<any>) => {\r\n      state.settings = action.payload.settings\r\n      state.loading = false\r\n    },\r\n  },\r\n})\r\n\r\nexport const loadSettings = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    settings: config {\r\n      data{\r\n        attributes{\r\n          webhook_url\r\n      \t\trequire_user_contact_details_upfront\r\n          logo_light {\r\n            data{\r\n              attributes{\r\n                url\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: settingsSlice.actions.settingsRequested.type,\r\n      onSuccess: settingsSlice.actions.settingsReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const selectSettings = (state: RootState) => state.settings.settings\r\n\r\nexport default settingsSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { RootState } from \"./store\"\r\ninterface uiState {\r\n  builderStep: number\r\n}\r\n\r\nconst initialState: uiState = {\r\n  builderStep: 0,\r\n}\r\n\r\nexport const uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState,\r\n  reducers: {\r\n    nextBuilderStep: (state, action: PayloadAction) => {\r\n      state.builderStep++\r\n    },\r\n    prevBuilderStep: (state, action: PayloadAction) => {\r\n      if (state.builderStep > 0) {\r\n        state.builderStep--\r\n      }\r\n    },\r\n    setBuilderStep: (state, action: PayloadAction<number>) => {\r\n      state.builderStep = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  nextBuilderStep,\r\n  prevBuilderStep,\r\n  setBuilderStep,\r\n} = uiSlice.actions\r\nexport const selectCurrentStep = (state: RootState) => state.ui.builderStep\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\n// export const selectBuilderStep = (state: RootState) => state.ui.builderStep;\r\n\r\nexport default uiSlice.reducer\r\n","import {\r\n  Action,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  ThunkAction\r\n} from \"@reduxjs/toolkit\"\r\nimport buildReducer from \"./build\"\r\nimport catalogReducer, {\r\n  loadAccessories,\r\n  loadCatalog,\r\n  loadCategories\r\n} from \"./catalog\"\r\nimport customerReducer from \"./customer\"\r\nimport api from \"./middleware/api\"\r\nimport settingsReducer, { loadSettings } from \"./settings\"\r\nimport uiReducer from \"./ui\"\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    catalog: catalogReducer,\r\n    build: buildReducer,\r\n    ui: uiReducer,\r\n    settings: settingsReducer,\r\n    customer: customerReducer,\r\n  },\r\n  middleware: [...getDefaultMiddleware(), api],\r\n})\r\n\r\n//cast to allow for dispatching thunkactions\r\nstore.dispatch<any>(loadCatalog())\r\nstore.dispatch<any>(loadAccessories())\r\nstore.dispatch<any>(loadCategories())\r\nstore.dispatch<any>(loadSettings())\r\n// store.dispatch<any>(loadCustomOptionPickers(1))\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nclass Checkbox extends Component {\r\n  static defaultProps = {\r\n    prefixCls: 'rc-checkbox',\r\n    className: '',\r\n    style: {},\r\n    type: 'checkbox',\r\n    defaultChecked: false,\r\n    onFocus() {},\r\n    onBlur() {},\r\n    onChange() {},\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const checked = 'checked' in props ? props.checked : props.defaultChecked;\r\n\r\n    this.state = {\r\n      checked,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if ('checked' in props) {\r\n      return {\r\n        ...state,\r\n        checked: props.checked,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  focus() {\r\n    this.input.focus();\r\n  }\r\n\r\n  blur() {\r\n    this.input.blur();\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { disabled, onChange } = this.props;\r\n    if (disabled) {\r\n      return;\r\n    }\r\n    if (!('checked' in this.props)) {\r\n      this.setState({\r\n        checked: e.target.checked,\r\n      });\r\n    }\r\n    if (onChange) {\r\n      onChange({\r\n        target: {\r\n          ...this.props,\r\n          checked: e.target.checked,\r\n        },\r\n        stopPropagation() {\r\n          e.stopPropagation();\r\n        },\r\n        preventDefault() {\r\n          e.preventDefault();\r\n        },\r\n        nativeEvent: e.nativeEvent,\r\n      });\r\n    }\r\n  };\r\n\r\n  saveInput = (node) => {\r\n    this.input = node;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      prefixCls,\r\n      className,\r\n      style,\r\n      name,\r\n      id,\r\n      type,\r\n      disabled,\r\n      readOnly,\r\n      tabIndex,\r\n      onClick,\r\n      onFocus,\r\n      onBlur,\r\n      autoFocus,\r\n      value,\r\n      required,\r\n      ...others\r\n    } = this.props;\r\n\r\n    const globalProps = Object.keys(others).reduce((prev, key) => {\r\n      if (key.substr(0, 5) === 'aria-' || key.substr(0, 5) === 'data-' || key === 'role') {\r\n        prev[key] = others[key];\r\n      }\r\n      return prev;\r\n    }, {});\r\n\r\n    const { checked } = this.state;\r\n    const classString = classNames(prefixCls, className, {\r\n      [`${prefixCls}-checked`]: checked,\r\n      [`${prefixCls}-disabled`]: disabled,\r\n    });\r\n\r\n    return (\r\n      <span className={classString} style={style}>\r\n        <input\r\n          name={name}\r\n          id={id}\r\n          type={type}\r\n          required={required}\r\n          readOnly={readOnly}\r\n          disabled={disabled}\r\n          tabIndex={tabIndex}\r\n          className={`${prefixCls}-input`}\r\n          checked={!!checked}\r\n          onClick={onClick}\r\n          onFocus={onFocus}\r\n          onBlur={onBlur}\r\n          onChange={this.handleChange}\r\n          autoFocus={autoFocus}\r\n          ref={this.saveInput}\r\n          value={value}\r\n          {...globalProps}\r\n        />\r\n        <span className={`${prefixCls}-inner`} />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;","import React from \"react\"\r\nimport \"./StepTitle.css\"\r\nimport cx from \"classnames\"\r\n\r\ntype StepTitleProps = {\r\n  title: string\r\n  isActive?: boolean\r\n  showBackButton?: boolean\r\n  onBackClick?: Function\r\n}\r\n\r\nexport default function StepTitle(props: StepTitleProps) {\r\n  let backLink\r\n\r\n  if (props.showBackButton) {\r\n    backLink = (\r\n      <span\r\n        className=\"step-back\"\r\n        onClick={() => props.onBackClick && props.onBackClick()}\r\n      >\r\n        {\"< \"}{\" \"}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={cx(\"step-title\", { active: props.isActive })}>\r\n      {backLink} <h2>{props.title}</h2>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Link, useHistory, useParams } from \"react-router-dom\"\r\nimport {\r\n  addAccessory,\r\n  removeAccessory,\r\n  selectBuildAccessoryIds\r\n} from \"../store/build\"\r\nimport {\r\n  selectAccessoryCatById,\r\n  selectOptionalAccessoriesInCat\r\n} from \"../store/catalog\"\r\nimport Checkbox from \"./Checkbox\"\r\nimport StepTitle from \"./StepTitle\"\r\n\r\nexport default function AccessoriesInCategory() {\r\n  const { id } = useParams<{id:string}>()\r\n  const dispatch = useDispatch()\r\n  const accessories = useSelector(selectOptionalAccessoriesInCat(id))\r\n  const buildAccessories = useSelector(selectBuildAccessoryIds)\r\n  const category = useSelector(selectAccessoryCatById(id))\r\n  let history = useHistory()\r\n  const markup = accessories?.map((acc) => (\r\n    <div className=\"accessory-short_description\" key={acc.id}>\r\n      <h3>{acc.name}</h3>\r\n      <p>{acc.short_description}</p>\r\n      <Checkbox\r\n        onChange={(val: React.ChangeEvent<HTMLInputElement>) => {\r\n          console.log(val)\r\n          val.target.checked\r\n            ? dispatch(addAccessory(acc.id))\r\n            : dispatch(removeAccessory(acc.id))\r\n        }}\r\n        checked={buildAccessories.includes(acc.id)}\r\n      />\r\n\r\n      <Link to={\"/accessories/\" + acc.id}>Read More &gt;</Link>\r\n    </div>\r\n  ))\r\n\r\n  return (\r\n    <div>\r\n      <StepTitle\r\n        title={\"Category: \" + category?.name || \"\"}\r\n        showBackButton={true}\r\n        onBackClick={history.goBack}\r\n      />\r\n\r\n      {markup}\r\n\r\n      <Link className=\"primary-button\" to=\"/3-select-accessories\">\r\n        Done\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectAccessoryById } from \"../store/catalog\"\r\nimport \"./AccessoryDetailsSidebar.css\"\r\n\r\ninterface AccessoryDetailsSidebarProps {\r\n  id: string\r\n}\r\nexport default function AccessoryDetailsSidebar(props: AccessoryDetailsSidebarProps) {\r\n  // const dispatch = useDispatch();  \r\n  const accessory = useSelector(selectAccessoryById(props.id))\r\n  return (\r\n    <div className=\"accessory-details-sidebar\">\r\n      {accessory?.featured_image?.url && <img className=\"accessory-detail-image\" src={\"\" + process.env.REACT_APP_ASSETS_URL + accessory?.featured_image?.url} alt=\"\"/>}\r\n      <h3>{accessory?.name}</h3>\r\n      {accessory?.rrp && <h5>${accessory?.rrp}</h5>}\r\n      <p>{accessory?.description}</p>\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\";\r\nimport React, { useContext, useRef } from \"react\";\r\nimport { VscChevronDown } from \"react-icons/vsc\";\r\nimport \"./Accordion.css\";\r\n\r\ninterface AccordionProps  {\r\n    children:React.ReactNode\r\n}\r\ninterface AccordionItemProps extends React.HTMLAttributes<HTMLElement> {\r\n    title:string\r\n    children:React.ReactNode\r\n    index?: number\r\n}\r\ninterface AccordionContext {\r\n    openAccordionItem: number,\r\n    setOpenAccordionItem: React.Dispatch<React.SetStateAction<number>> | undefined\r\n}\r\n\r\nconst AccordionContext = React.createContext<AccordionContext>({\r\n  openAccordionItem: 0,\r\n  setOpenAccordionItem: undefined\r\n})\r\n\r\nexport default function Accordion(props:AccordionProps) {\r\n  const [openAccordionItem, setOpenAccordionItem] = React.useState(0)\r\n  const children = React.Children.map(props.children, (child,idx) => {\r\n    if (React.isValidElement(child)) {\r\n      return React.cloneElement(child, { index: idx });\r\n    }\r\n  })\r\n  return (\r\n    <AccordionContext.Provider value={{openAccordionItem, setOpenAccordionItem}}>\r\n      <div className=\"sz-accordion\">\r\n        {children}\r\n      </div>\r\n    </AccordionContext.Provider>\r\n  )\r\n}\r\n\r\nexport function AccordionItem(props:AccordionItemProps){\r\n  const contentEl = useRef<HTMLDivElement>(null);\r\n  const {openAccordionItem, setOpenAccordionItem} = useContext(AccordionContext)\r\n  const isOpen = props.index === openAccordionItem\r\n\r\n  return (\r\n    <div {...props} className={cx(\"accordion-item\", {open: isOpen})}>\r\n      <div className=\"accordion-item-header\" onClick={() => setOpenAccordionItem && setOpenAccordionItem(isOpen ? -1 : (props.index || 0))}>\r\n        <h3 className=\"accordion-item-title\">{props.title}</h3>\r\n        <div className=\"svg-icon-container\">\r\n          <VscChevronDown />\r\n        </div>\r\n      </div>\r\n      <div className=\"accordion-content-scroll-container\">\r\n        <div className=\"accordion-content-wrapper\" style={\r\n          isOpen\r\n            ? { maxHeight: contentEl?.current?.scrollHeight }\r\n            : { maxHeight: \"0px\" }\r\n        }>\r\n          <div className=\"accordion-item-content\" ref={contentEl}>\r\n            {props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import cx from \"classnames\";\r\nimport React from \"react\";\r\nimport { VscAdd, VscCheck, VscChevronRight, VscRemove } from \"react-icons/vsc\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addAccessory, removeAccessory, selectBuildAccessoryIds } from \"../store/build\";\r\nimport { selectCategories } from \"../store/catalog\";\r\nimport { formatCurrency, truncate } from \"../utils/utils\";\r\nimport \"./AccessoriesList.css\";\r\nimport Accordion, { AccordionItem } from \"./Accordion\";\r\n\r\n\r\ninterface AccessoriesListProps {\r\n  // onDetailsClick: (id: string) => void,\r\n  onDetailsClick: (id: string) => void\r\n}\r\n\r\nexport default function AccessoriesList(props:AccessoriesListProps) {\r\n\r\n  const cats = useSelector(selectCategories)\r\n  const buildAccessories = useSelector(selectBuildAccessoryIds)\r\n  const dispatch = useDispatch()\r\n\r\n  const catsMarkup = cats.map((cat) => {\r\n    const accessoryMarkup = cat.accessories.map(accessory=>{\r\n      return (\r\n        <div className=\"accessory-add-button-wrapper\" key={accessory.id}>\r\n          <div  className=\"accessory-add-button\" >\r\n            {accessory.featured_image &&\r\n          <div className=\"accessory-button-thumb\" onClick={()=> props.onDetailsClick(accessory.id)}>\r\n            <img className=\"accessory-thumb\" src={\"\" + process.env.REACT_APP_ASSETS_URL + accessory.featured_image.url} alt=\"\" />\r\n          </div>}\r\n            <div className=\"accessory-button-info-wrapper\">\r\n              <div className=\"accessory-button-label\" title={accessory.name} onClick={()=> props.onDetailsClick(accessory.id)}>\r\n                <span className=\"accessory-button-title\">{truncate(accessory.name, 44)}</span>\r\n                <span className=\"accessory-button-subtitle\">{formatCurrency(accessory.rrp || 0)}</span>\r\n              </div>\r\n              {buildAccessories.find(accId => accId === accessory.id) ?\r\n                <span className=\"accessory-button-icon accessory-button-icon-added\"  onClick={() => dispatch(removeAccessory(accessory.id))}>\r\n                  <span className=\"accessory-button-icon-remove\">\r\n                    <VscRemove />\r\n                  </span>\r\n                  <span className=\"accessory-button-icon-check\">\r\n                    <VscCheck />\r\n                  </span>\r\n                </span> \r\n                :\r\n                <span className=\"accessory-button-icon accessory-button-icon-add\" onClick={() => dispatch(addAccessory(accessory.id))}>\r\n                  <VscAdd />\r\n                </span> \r\n              }\r\n              <span className=\"accessory-button-icon accessory-button-icon-more-info\" onClick={()=> props.onDetailsClick(accessory.id)}>\r\n                <VscChevronRight />\r\n              </span> \r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n    \r\n    return (\r\n      <AccordionItem key={cat.id} title={cat.name}>\r\n        {accessoryMarkup}\r\n      </AccordionItem>\r\n    )\r\n  }, {})\r\n\r\n  // const accessoriesMarkup = accessories.map((acc) => (\r\n  //   <div key={acc?.id} className=\"accessory\">\r\n  //     {/* <Link to={\"/accessory-categories/\" + acc?.id} className=\"category-name\"> */}\r\n  //     <span className=\"accessory-name\">{acc?.name}</span>\r\n  //     <span className=\"accessory-cost\">\r\n  //       {acc?.rrp ? formatCurrency(acc?.rrp) : \"N/A\"}\r\n  //     </span>\r\n  //     {/* </Link> */}\r\n  //   </div>\r\n  // ))\r\n\r\n  return (\r\n    \r\n    <div className={cx(\"accessories-accordion-container\")} >\r\n      {/* <div className=\"model-image\">\r\n        <img src={process.env.REACT_APP_ASSETS_URL + image?.url} alt=\"\" />\r\n      </div> */}\r\n      <h3>Add Accessories</h3>\r\n      <p className=\"weak-label\">Add accessories to create your perfect product</p>\r\n    \r\n      <Accordion>\r\n        {catsMarkup}\r\n      </Accordion>\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useState } from \"react\"\r\nimport { VscChevronLeft } from \"react-icons/vsc\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectBuildImage } from \"../store/build\"\r\nimport AccessoryDetailsSidebar from \"./AcccessoryDetailsSidebar\"\r\nimport AccessoriesList from \"./AccessoriesList\"\r\nimport \"./AccessoriesPicker.css\"\r\n\r\nexport default function AccessoriesPicker() {\r\n\r\n  const image = useSelector(selectBuildImage)\r\n  const [showDetails, setShowDetails] = useState(false)\r\n  const [showingAccessoryId, setshowingAccessoryId] = useState(\"1\")\r\n\r\n  const showAccessory = (accessoryId:string) => {\r\n    console.log('showing accessory ' + accessoryId)\r\n    setShowDetails(true)\r\n    setshowingAccessoryId(accessoryId)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"accessories-section\">\r\n      <div className=\"model-image-container\">\r\n        <img src={\"\" + process.env.REACT_APP_ASSETS_URL + image?.url} alt=\"\" />\r\n      </div>\r\n      <div className=\"sidebar accessories-sidebar\">\r\n        <div className={cx(\"sidebar-menu-1\", {active: !showDetails})} >\r\n          <AccessoriesList onDetailsClick={(id:string) => showAccessory(id) } />\r\n        </div>\r\n        {/* {accessoriesMarkup} */}\r\n        <div className={cx(\"sidebar-menu-2\", {active: showDetails})}>\r\n          <div style={{cursor:\"pointer\"}} onClick={() => setShowDetails(false)}><VscChevronLeft /> Back</div>\r\n          <AccessoryDetailsSidebar id={showingAccessoryId}></AccessoryDetailsSidebar>\r\n        </div>\r\n      </div>\r\n\r\n    </div>  )\r\n}\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { selectAccessoryById } from \"../store/catalog\"\r\nimport \"./App.css\"\r\n\r\nexport default function AccessoryDetails() {\r\n  // const dispatch = useDispatch();\r\n  const { id } = useParams<{id: string}>()\r\n  const accessory = useSelector(selectAccessoryById(id))\r\n  let history = useHistory()\r\n  console.log(\"acc \", accessory)\r\n  return (\r\n    <div>\r\n      <h3>{accessory?.name}</h3>\r\n      <h5>${accessory?.rrp}</h5>\r\n      <p>{accessory?.description}</p>\r\n      <button\r\n        className=\"primary-button back-button\"\r\n        // to={\"/accessory-categories/\"}\r\n        onClick={history.goBack}\r\n      >\r\n        Back\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { address, updateCustomerAddress } from \"../store/customer\"\r\nimport \"./form.css\"\r\ninterface props {\r\n  onValid: (isValid: boolean) => void\r\n}\r\n\r\nexport default function AddressForm(props: props) {\r\n  const dispatch = useDispatch()\r\n  const { register, getValues, triggerValidation } = useForm<address>()\r\n\r\n  const handleChange = async () => {\r\n    dispatch(updateCustomerAddress(getValues()))\r\n    const result = await triggerValidation()\r\n    props.onValid(result)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onChange={handleChange} className=\"szForm\">\r\n        <fieldset>\r\n          <legend>Enter your address</legend>\r\n          <label htmlFor=\"address-line-1\">\r\n            <span className=\"label-text\">Line 1</span>\r\n            <input\r\n              id=\"address-line-1\"\r\n              name=\"address-line-1\"\r\n              placeholder=\"11 Smith St\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"address-line-2\">\r\n            <span className=\"label-text\">Line 2</span>\r\n            <input\r\n              id=\"address-line-2\"\r\n              name=\"address-line-2\"\r\n              placeholder=\"\"\r\n              ref={register}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"city\">\r\n            <span className=\"label-text\">City</span>\r\n            <input\r\n              id=\"city\"\r\n              name=\"city\"\r\n              placeholder=\"Melbourne\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"country\">\r\n            <span className=\"label-text\">Country</span>\r\n            <input\r\n              id=\"country\"\r\n              name=\"country\"\r\n              defaultValue=\"Australia\"\r\n              placeholder=\"Australia\"\r\n              ref={register({\r\n                required: true,\r\n              })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"state\">\r\n            <span className=\"label-text\">State</span>\r\n            <input\r\n              id=\"state \"\r\n              name=\"state\"\r\n              placeholder=\"VIC\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n        </fieldset>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { FiShoppingBag } from \"react-icons/fi\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport {\r\n  selectBuildAccessories,\r\n  selectBuildCost,\r\n  selectBuildCustomOptions, selectBuildModel,\r\n  selectBuildProduct\r\n} from \"../store/build\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./BuildStatusBox.css\"\r\n\r\n\r\nexport default function BuildStatusBox() {\r\n  const product = useSelector(selectBuildProduct)\r\n  const model = useSelector(selectBuildModel)\r\n  const accessories = useSelector(selectBuildAccessories)\r\n  const selectedOptions = useSelector(selectBuildCustomOptions)\r\n\r\n  const customOptionsMarkup = selectedOptions.map((option) => (\r\n    <div key={option.name}>\r\n      <span>{option.name}</span>\r\n      <span>{option.selectedOption?.option_name}</span>\r\n    </div>\r\n  ))\r\n\r\n  const accessoriesMarkup = accessories.map((acc) => (\r\n    <Link to={\"/accessories/\" + acc?.id} key={acc?.id} className=\"accessory\">\r\n      <span>{acc?.name}</span>\r\n      <span>{formatCurrency(acc?.rrp || 0)}</span>\r\n    </Link>\r\n  ))\r\n\r\n  const productTitle = model?.name ?  model?.name : product?.name\r\n\r\n  return (\r\n    <div className=\"build-box\">\r\n      <div className=\"build-box-left\">\r\n        <div className=\"build-box-icon\">\r\n          <FiShoppingBag />\r\n        </div>\r\n        <div className=\"build-box-text\">\r\n          <h3 className=\"build-box-title\">{productTitle ? productTitle : \"Select Product\"}</h3>\r\n          {accessoriesMarkup.length > 0 && <span className=\"build-box-accessories\">{accessories.length} Accessories</span>}\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"build-box-price\">\r\n        <span>{formatCurrency(useSelector(selectBuildCost))}</span>\r\n      </div>\r\n      {customOptionsMarkup}\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { selectCategories } from \"../store/catalog\"\r\nimport \"./CategoryDisplay.css\"\r\nimport StepTitle from \"./StepTitle\"\r\n\r\nexport default function CategoryDisplay() {\r\n  const cats = useSelector(selectCategories)\r\n  const history = useHistory()\r\n  const categoryMarkup = cats?.map((cat) => (\r\n    <Link\r\n      to={\"/accessory-categories/\" + cat.id}\r\n      className=\"category-link\"\r\n      key={cat.id}\r\n    >\r\n      <div className={cx(\"category-icon\")}>\r\n        <img src={process.env.REACT_APP_ASSETS_URL + cat.icon?.url} alt=\"\" />\r\n        <span>{cat.name}</span>\r\n      </div>\r\n    </Link>\r\n  ))\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <StepTitle\r\n        title={\"Accessory Categories\"}\r\n        showBackButton={true}\r\n        onBackClick={history.goBack}\r\n      />\r\n      <div className=\"category-listing\">{categoryMarkup}</div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { customerDetails, updateCustomerDetails } from \"../store/customer\"\r\nimport \"./form.css\"\r\n\r\ninterface props {\r\n  onValid: (isValid: boolean) => void\r\n}\r\n\r\nexport default function ContactDetailsForm(props: props) {\r\n  const dispatch = useDispatch()\r\n  const { register, errors, getValues, triggerValidation } = useForm<\r\n    customerDetails\r\n  >({\r\n    mode: \"onChange\",\r\n  })\r\n\r\n  const handleChange = async () => {\r\n    dispatch(updateCustomerDetails(getValues()))\r\n    const result = await triggerValidation()\r\n    props.onValid(result)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onChange={handleChange} className=\"szForm\">\r\n        <fieldset>\r\n          <legend>Enter your contact details</legend>\r\n          <label htmlFor=\"firstName\">\r\n            <span className=\"label-text\">First Name</span>\r\n            <input\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              placeholder=\"John\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"surname\">\r\n            <span className=\"label-text\">Surname</span>\r\n            <input\r\n              id=\"surname\"\r\n              name=\"surname\"\r\n              placeholder=\"Smith\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"phone\">\r\n            <span className=\"label-text\">Phone</span>\r\n            <input\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              placeholder=\"0400 000 000\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"email\">\r\n            <span className=\"label-text\">Email</span>\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"your@email.com\"\r\n              ref={register({\r\n                required: true,\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n            />\r\n          </label>\r\n          {errors.email && <span>{errors.email.message}</span>}\r\n\r\n          <label htmlFor=\"postcode\">\r\n            <span className=\"label-text\">Postcode</span>\r\n            <input\r\n              id=\"postcode \"\r\n              name=\"postcode\"\r\n              placeholder=\"3000\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"newsletter\" className=\"no-bg\">\r\n            <input\r\n              id=\"newsletter\"\r\n              type=\"checkbox\"\r\n              name=\"newsletter\"\r\n              defaultChecked={true}\r\n              ref={register}\r\n            />\r\n            Sign up for special offers and promotions\r\n          </label>\r\n        </fieldset>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { deliveryDetails, updateDeliveryDetails } from \"../store/customer\"\r\nimport \"./form.css\"\r\ninterface props {\r\n  onValid: (isValid: boolean) => void\r\n}\r\n\r\nexport default function DeliveryDetailsForm(props: props) {\r\n  const dispatch = useDispatch()\r\n  const { register, triggerValidation, getValues } = useForm<deliveryDetails>({\r\n    mode: \"onChange\",\r\n    reValidateMode: \"onChange\",\r\n  })\r\n\r\n  const handleChange = async () => {\r\n    dispatch(updateDeliveryDetails(getValues()))\r\n    const result = await triggerValidation()\r\n    props.onValid(result)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onChange={handleChange} className=\"szForm\">\r\n        <fieldset>\r\n          <legend>Delivery Method</legend>\r\n          <label htmlFor=\"delivery\" className=\"no-bg radio\">\r\n            <input\r\n              id=\"delivery\"\r\n              name=\"deliverymethod\"\r\n              type=\"radio\"\r\n              value=\"delivery\"\r\n              ref={register}\r\n            />\r\n            <span className=\"label-text\">Delivery</span>\r\n          </label>\r\n\r\n          <label htmlFor=\"pickup\" className=\"no-bg radio\">\r\n            <input\r\n              id=\"pickup\"\r\n              name=\"deliverymethod\"\r\n              type=\"radio\"\r\n              value=\"pickup\"\r\n              ref={register({\r\n                validate: () => {\r\n                  return getValues().deliverymethod !== \"\"\r\n                },\r\n              })}\r\n            />\r\n            <span className=\"label-text\">Pick Up</span>\r\n          </label>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>Choose your dealer</legend>\r\n          <select name=\"dealer\" id=\"dealer\" ref={register}>\r\n            <option value=\"Head Office\">Head Office</option>\r\n            <option value=\"QLD Dealer\"> QLD Dealer</option>\r\n            <option value=\"NSW Dealer\"> NSW Dealer</option>\r\n          </select>\r\n        </fieldset>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { selectModelById } from \"../store/catalog\"\r\nimport \"./App.css\"\r\nimport \"./ModelDetails.css\"\r\n\r\nexport default function ModelDetails() {\r\n  const { id } = useParams<{id:string}>()\r\n\r\n  const model = useSelector(selectModelById(parseInt(id)))\r\n  let history = useHistory()\r\n\r\n  return (\r\n    <div className=\"model-details-section\">\r\n      <div className=\"model-image-container\">\r\n        {model && <img src={\"\" + process.env.REACT_APP_ASSETS_URL + model?.featured_image?.url} alt=\"\" />}\r\n      </div> \r\n      <div className=\"model-details\">\r\n        <h3>{model && model?.name}</h3>\r\n        <h5>${model && model.rrp}</h5>\r\n        <p>{model && model.description}</p>\r\n        <button onClick={history.goBack}>Back</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { callWebhook, selectBuild, selectBuildModel, setModel } from \"../store/build\"\r\nimport { selectCompatibleModels } from \"../store/catalog\"\r\nimport { selectSettings } from \"../store/settings\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./ModelPicker.css\"\r\n\r\n\r\ninterface props {\r\n  onValid: (isValid: boolean) => void\r\n}\r\n\r\nexport default function ModelPicker(props: props) {\r\n  const dispatch = useDispatch()\r\n\r\n  const models = useSelector(selectCompatibleModels)\r\n  const model = useSelector(selectBuildModel)\r\n  const build = useSelector(selectBuild)\r\n  const settings = useSelector(selectSettings)\r\n\r\n\r\n  //if one of these models is selected, all progress\r\n  useEffect(() => {\r\n    if (models?.find((prod) => prod.id === model?.id)) {\r\n      props.onValid(true)\r\n    }\r\n  })\r\n  let buildItemsMarkup\r\n  \r\n  \r\n  if (models) {\r\n    buildItemsMarkup = models.map((x) => {\r\n      return (\r\n        <div\r\n          className={cx(\"product\", { selected: model?.id === x.id })}\r\n          key={x.id}\r\n          onClick={() => {\r\n            dispatch(setModel(x.id))\r\n            // any click make this valid. if validation is more complex,\r\n            // you can add some state if nececssary\r\n            console.log('called')\r\n            props.onValid(true)\r\n            if( settings?.webhook_url){\r\n              dispatch(callWebhook(settings?.webhook_url, build))\r\n            }\r\n          }}\r\n        >\r\n\r\n          <div className=\"product-thumb-wrapper\">\r\n            {x.featured_image?.url && (\r\n              <img\r\n                className=\"product-thumb\"\r\n                src={process.env.REACT_APP_ASSETS_URL + x.featured_image?.url}\r\n                alt={x.name}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"select-product-details\">\r\n            <h3 className=\"product-title\">{x.name}</h3>\r\n            <p className=\"product-short_description\">{x.short_description}</p>\r\n            <div className=\"product-bottom-line\">\r\n              {x.rrp && <h4 className=\"product-price\">Starts at {formatCurrency(x.rrp)}</h4>}\r\n              <NavLink to={`/select-model/${x.id}`} className=\"secondary-link\">See Specs</NavLink>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <div className=\"preview-image\">\r\n        <img src={process.env.REACT_APP_ASSETS_URL + image?.url} alt=\"\" />\r\n      </div> */}\r\n      <div className=\"product-listing\">\r\n        {buildItemsMarkup}\r\n        {/* <Link className=\"primary-button\" to=\"/select-accessories/\">Select Model ></Link> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { selectProductById } from \"../store/catalog\"\r\nimport \"./ProductDetails.css\"\r\n\r\nexport default function ProductDetails() {\r\n\r\n  const { id } = useParams<{id:string}>()\r\n  const product = useSelector(selectProductById(id))\r\n  let history = useHistory()\r\n  \r\n  return (\r\n    <div className=\"product-details-section\">\r\n      <div className=\"model-image-container\">\r\n        {product && <img src={\"\" + process.env.REACT_APP_ASSETS_URL + product?.featured_image?.url} alt=\"\" />}\r\n      </div>  \r\n      <div className=\"product-details\">\r\n        <h3>{product && product?.name}</h3>\r\n        <h5>${product && product.rrp}</h5>\r\n        <ReactMarkdown>{product?.description +\"\"}</ReactMarkdown>\r\n        <button onClick={history.goBack}>Back</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { selectBuildProduct, setProduct } from \"../store/build\"\r\nimport { selectProducts } from \"../store/catalog\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./ProductPicker.css\"\r\n\r\n\r\ninterface props {\r\n  onValid: (isValid: boolean) => void\r\n}\r\n\r\nexport default function ProductPicker(props: props) {\r\n  const dispatch = useDispatch()\r\n  const products = useSelector(selectProducts)\r\n  const product = useSelector(selectBuildProduct)\r\n\r\n  //if one of these products is selected, allow progress\r\n  useEffect(() => {\r\n    if (products.find((prod) => prod.id === product?.id)) {\r\n      props.onValid(true)\r\n    }\r\n  })\r\n\r\n  let buildItemsMarkup\r\n  if (products) {\r\n    buildItemsMarkup = products.map((x) => {\r\n      return (\r\n        <div\r\n          className={cx(\"product\", { selected: product?.id === x.id })}\r\n          key={x.id}\r\n          onClick={() => {\r\n            dispatch(setProduct(x.id))\r\n          }}\r\n        >\r\n          <div className=\"product-thumb-wrapper\">\r\n            {x.featured_image?.url && (\r\n              <img\r\n                className=\"product-thumb\"\r\n                alt={x.name}\r\n                src={x.featured_image?.url}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"select-product-details\">\r\n            <h3 className=\"product-title\">{x.name}</h3>\r\n            <p className=\"product-short_description\">{x.short_description}</p>\r\n            <div className=\"product-bottom-line\">\r\n              {x.rrp && <h4 className=\"product-price\">Starts at {formatCurrency(x.rrp)}</h4>}\r\n              <NavLink to={`/select-product/${x.id}`} className=\"secondary-link\">View Specs</NavLink>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"product-listing\">\r\n        {buildItemsMarkup}\r\n        {/* <Link className=\"primary-button\" to=\"/select-accessories/\">Select Model ></Link> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { VscCreditCard, VscMail } from \"react-icons/vsc\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport {\r\n  selectBuildAccessories,\r\n  selectBuildCost, selectBuildImage, selectBuildModel,\r\n  selectBuildProduct\r\n} from \"../store/build\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./ThankYouScreen.css\"\r\n\r\nexport default function ThankYouScreen() {\r\n  const product = useSelector(selectBuildProduct)\r\n  const model = useSelector(selectBuildModel)\r\n  const accessories = useSelector(selectBuildAccessories)\r\n  \r\n  const image = useSelector(selectBuildImage)\r\n\r\n\r\n  const accessoriesMarkup = accessories.map((acc) => (\r\n    <Link to={\"/accessories/\" + acc?.id} key={acc?.id} className=\"accessory\">\r\n      <span>{acc?.name}</span>\r\n      <span>{formatCurrency(acc?.rrp || 0)}</span>\r\n    </Link>\r\n  ))\r\n  \r\n\r\n  return (\r\n    <div className=\"thankyou-wrapper\">\r\n      <h1 className=\"h1\">Thank you for your enquiry</h1>\r\n      <h3 className=\"thankyou-productname\"><span className=\"thankyou-prod-name\">{product?.name}</span> {model?.name}</h3>\r\n      {accessoriesMarkup.length > 0 && <span className=\"thankyou-accessories\">With {accessories.length} Accessories</span>}\r\n      <div className=\"thankyou-product-image\">\r\n        <img src={\"\" + process.env.REACT_APP_ASSETS_URL + image?.url} alt=\"\" />\r\n      </div>\r\n\r\n      <div className=\"thankyou-box-price\">\r\n        Total <span>{formatCurrency(useSelector(selectBuildCost))}</span>\r\n      </div>\r\n      <div className=\"thankyou-buttons\">\r\n        <button className=\"outline-button secondary\"><VscMail/> <span>Email Me a Copy</span></button>\r\n        <button className=\"primary-button\"><VscCreditCard/> <span>Checkout</span></button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { nextBuilderStep, prevBuilderStep } from \"../store/ui\"\r\nimport StepTitle from \"./StepTitle\"\r\n\r\nexport const Wizard = (props) => {\r\n  const steps = React.Children.toArray(props.children)\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Template path=\"/:currentPath\" steps={steps} currentStep={props.currentStep}/>\r\n      {/* <Redirect exact from=\"/\" to={steps[0].props.path} noThrow /> */}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport const Step = (props) => {\r\n  const { onValid, children } = props\r\n  //children can be elements, or functions which return a child element\r\n  useEffect(() => {\r\n    if (React.isValidElement(children)) {\r\n      onValid(true)\r\n    }\r\n  })\r\n  if (!React.isValidElement(children)) {\r\n    return children(onValid)\r\n  } else {\r\n    return children\r\n  }\r\n}\r\n\r\nfunction Template({ currentPath, steps, currentStep }) {\r\n  const dispatch = useDispatch()\r\n  const [valid, setValid] = useState(false)\r\n  const [lastIndex, setLastIndex] = useState(-2)\r\n\r\n\r\n  // const currentIndex = steps.findIndex((step) => \"/\" + step.props.path === path)\r\n  const currentIndex = currentStep\r\n\r\n  if (lastIndex !== currentIndex) {\r\n    setValid(false)\r\n    setLastIndex(currentIndex)\r\n  }\r\n\r\n  const prevStep = currentIndex > 0 && steps[currentIndex - 1].props\r\n  const nextStep = currentIndex < steps.length - 1 && steps[currentIndex + 1].props\r\n\r\n  const handleValid = (isValid) => {\r\n    setValid(isValid)\r\n  }\r\n  if (currentIndex < 0) {\r\n    return <NoMatch path={steps[0].props.path} />\r\n  }\r\n\r\n  const StepTitles = steps.map((step, idx) => <StepTitle title={idx + 1 + \". \" + step.props.title} isActive={currentIndex===idx} key={idx} />);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"step-title-container\">\r\n        {StepTitles}\r\n      </div>\r\n      \r\n      {/* <StepTitle\r\n        title={currentIndex + 1 + \". \" + steps[currentIndex].props.title}\r\n        showBackButton={currentIndex > 0}\r\n        onBackClick={() => history.push(prevStep.path)}\r\n      /> */}\r\n\r\n      {/* clone the step element, adding the onvalid prop*/}\r\n      {React.cloneElement(steps[currentIndex], { onValid: handleValid })}\r\n\r\n      <footer className=\"wizard-footer\">\r\n        <Button className={cx(\"back-button\", \"secondary-button\", {disabled: !prevStep})}\r\n          onClick={() => dispatch(prevBuilderStep())}\r\n          title={prevStep.description}\r\n        >Back</Button>\r\n        <Button\r\n          className={cx(\"primary-button\", { disabled: !valid })}\r\n          onClick={() => dispatch(nextBuilderStep())}\r\n          title={nextStep.description}\r\n        >Next</Button>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction NoMatch(props) {\r\n  return <Redirect to={props.path} noThrow />\r\n}\r\n\r\nfunction Button({ path, ...props }) {\r\n  return (\r\n    <Link\r\n      to={`../${path}`}\r\n      className={path ? \"btn btn-primary\" : \"invisible\"}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\r\nimport { selectSettings } from \"../store/settings\"\r\nimport { selectCurrentStep } from \"../store/ui\"\r\nimport AccessoriesInCategory from \"./AccessoriesInCategory\"\r\nimport AccessoriesPicker from \"./AccessoriesPicker\"\r\nimport AccessoryDetails from \"./AccessoryDetails\"\r\nimport AddressForm from \"./AddressForm\"\r\nimport \"./App.css\"\r\nimport BuildStatusBox from \"./BuildStatusBox\"\r\nimport CategoryDisplay from \"./CategoryDisplay\"\r\nimport ContactDetailsForm from \"./ContactDetailsForm\"\r\nimport DeliveryDetailsForm from \"./DeliveryDetailsForm\"\r\nimport ModelDetails from \"./ModelDetails\"\r\nimport ModelPicker from \"./ModelPicker\"\r\nimport ProductDetails from \"./ProductDetails\"\r\nimport ProductPicker from \"./ProductPicker\"\r\nimport ThankYouScreen from \"./ThankYouScreen\"\r\nimport { Step, Wizard } from \"./Wizard\"\r\n\r\nfunction App() {\r\n  const settings = useSelector(selectSettings)\r\n  const currentStep = useSelector(selectCurrentStep)\r\n  return (\r\n    <div className=\"app\">\r\n      <BrowserRouter>\r\n        <div className=\"app-container\">\r\n          <div className=\"primary-container\">\r\n            <main>\r\n              <h1 className=\"small-caps\">Configure Your Camper</h1>\r\n              <BuildStatusBox />\r\n              <Switch>\r\n                <Route path=\"/select-model/:id\">\r\n                  <ModelDetails />\r\n                </Route>\r\n                <Route path=\"/select-product/:id\">\r\n                  <ProductDetails />\r\n                </Route>\r\n                <Route path=\"/accessory-categories/:id\">\r\n                  <AccessoriesInCategory />\r\n                </Route>\r\n                <Route path=\"/accessory-categories/\">\r\n                  <CategoryDisplay />\r\n                </Route>\r\n                <Route path=\"/accessories/:id\">\r\n                  <AccessoryDetails />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Wizard currentStep={currentStep}>\r\n                    {settings?.require_user_contact_details_upfront &&\r\n                    <Step path=\"6-address-details\" title=\"Your Details\">\r\n                      {(handleValid: ((valid: boolean) => void)) => (\r\n                        <AddressForm onValid={handleValid} />\r\n                      )}\r\n                    </Step>\r\n                    }\r\n      \r\n                    <Step path=\"1-select-product\" title=\"Select Product\">\r\n                      {(handleValid: ((valid: boolean) => void)) => (\r\n                        <ProductPicker onValid={handleValid} />\r\n                      )}\r\n                    </Step>\r\n                    <Step path=\"2-select-model\" title=\"Select Model\">\r\n                      {(handleValid: ((valid: boolean) => void)) => (\r\n                        <ModelPicker onValid={handleValid} />\r\n                      )}\r\n                    </Step>\r\n                    <Step\r\n                      path=\"3-add-accessories\"\r\n                      title=\"Add Accessories\"\r\n                    >\r\n                      <AccessoriesPicker />\r\n                    </Step>\r\n                    {!settings?.require_user_contact_details_upfront &&\r\n                    <Step path=\"5-contact-details\" title=\"Your Details\">\r\n                      {(handleValid: ((valid: boolean) => void)) => (\r\n                        <ContactDetailsForm onValid={handleValid} />\r\n                      )}\r\n                    </Step>\r\n                    }\r\n                    <Step path=\"4-delivery-details\" title=\"Delivery Details\">\r\n                      {(handleValid: (valid: boolean) => void) => (\r\n                        <DeliveryDetailsForm onValid={handleValid} />\r\n                      )}\r\n                    </Step>\r\n                    <Step path=\"6-address-details\" title=\"Your Address\">\r\n                      {(handleValid: (valid: boolean) => void) => (\r\n                        <AddressForm onValid={handleValid} />\r\n                      )}\r\n                    </Step>\r\n\r\n                    <Step path=\"thankyou\" title=\"Confirmation\">\r\n                      <ThankYouScreen/>\r\n                    </Step>\r\n                  </Wizard>\r\n                  {/* <BuildSummarySidebar/> */}\r\n                </Route>\r\n              </Switch>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n          \r\nexport default App\r\n          ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './app/store/store';\r\nimport App from './app/ui/App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('sz-root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}