{"version":3,"sources":["app/utils/utils.ts","app/store/middleware/api.ts","app/store/build.ts","app/store/catalog.ts","app/store/companies.ts","app/store/customer.ts","app/store/settings.ts","app/store/ui.ts","app/store/store.ts","app/ui/AcccessoryDetailsSidebar.tsx","app/ui/Accordion.tsx","app/ui/MiniCard.tsx","app/ui/BuildAccessoriesList.tsx","app/ui/AccessoriesPicker.tsx","app/ui/FooterNav.tsx","app/ui/AccessoryDetails.tsx","app/ui/AddressForm.tsx","app/ui/BuildStatusBox.tsx","app/ui/ContactDetailsForm.tsx","app/ui/DeliveryDetailsForm.tsx","app/ui/ModelDetails.tsx","app/ui/ModelPicker.tsx","app/ui/ProductDetails.tsx","app/ui/ProductPicker.tsx","app/ui/SelectAccessories.tsx","app/ui/StepTitle.tsx","app/ui/StepTitles.tsx","app/ui/ThankYouScreen.tsx","app/ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["formatCurrency","value","includeCents","formatter","Intl","NumberFormat","style","currency","format","Number","toLocaleString","normalize","data","isObject","Object","prototype","toString","call","isArray","flatten","attributes","id","map","item","key","apiCallBegan","createAction","api","dispatch","next","action","a","console","log","type","payload","url","graphQlQuery","onStart","onSuccess","onError","response","undefined","fetch","method","mode","cache","headers","redirect","body","JSON","stringify","graphQLClient","GraphQLClient","request","strapi3datastyle","message","initialState","productId","modelId","accessoryIds","customOptions","buildSlice","createSlice","name","reducers","setCustomOption","state","idx","findIndex","el","optionId","optionSelectionId","push","addAccessory","includes","setProduct","setModel","removeAccessory","indexOf","newState","splice","buildPosted","callWebhook","actions","selectBuildAccessoryIds","build","selectBuildProduct","catalog","products","find","selectBuildModel","models","selectBuildAccessories","accessories","selectBuildIncludedAccessories","included_accessories","acc_id","acc","selectAccessoryById","selectBuild","product","model","selectBuildImage","modelImg","featured_image","prodImg","selectBuildCost","productPrice","rrp","modelPrice","accessoryPrice","reduce","curr","selectBuildCustomOptions","customOptionPickers","optionPicker","option_name","selectedOption","buildOption","option","selectedOptionId","customOptionPickersLoading","catalogOption","picker","options","selectFullBuild","image","catalogSlice","loading","accessoriesLoading","accessoryCategories","customOptionPickersRequested","customOptionPickersReceived","other_options","accessoriesRequested","accessoriesReceived","catalogRequested","catalogReceived","categoriesRequested","categoriesReceived","selectProducts","selectCompatibleModels","prod","selectModelById","length","accessory","selectCategories","companySlice","companies","companiesReceived","dealersAndManufacturers","companiesRequested","selectCompanyDetails","customerSlice","updateDeliveryDetails","updateCustomerDetails","updateCustomerAddress","address","selectCustomerDetails","customer","settings","webhook_url","require_user_contact_details_upfront","logo_light","settingsSlice","settingsRequested","settingsReceived","selectSettings","UIScreenTitles","builderStep","uiCurrentScreen","uiScreenOrder","uiDisplayingDetailsForId","uiSlice","nextBuilderStep","prevBuilderStep","setBuilderStep","showModelDetailsScreen","showProductDetailsScreen","closeProductDetailsScreen","closeModelDetailsScreen","openSelectAccessoriesScreen","closeSelectAccessoriesScreen","showAccessoryDetailsScreen","closeAccessoryDetailsScreen","selectCurrentStep","ui","selectCurrentUiScreen","selectDisplayedId","selectScreenOrder","store","configureStore","reducer","catalogReducer","buildReducer","uiReducer","settingsReducer","customerReducer","companiesReducer","middleware","getDefaultMiddleware","process","AccessoryDetailsSidebar","props","useSelector","className","src","alt","description","AccordionContext","React","createContext","openAccordionItem","setOpenAccordionItem","Accordion","useState","children","Children","child","isValidElement","cloneElement","index","Provider","AccordionItem","contentEl","useRef","useContext","isOpen","cx","open","onClick","title","showCount","count","maxHeight","current","scrollHeight","ref","MiniCard","compact","text","AddIcon","isAdded","onRemoveClick","onAddClick","onDetailsClick","substring","showAdd","showChevron","BuildAccessoriesList","buildAccessories","includedAccessories","useDispatch","optionalAccessoriesList","includedAccessoriesList","AccessoriesPicker","showDetails","setShowDetails","showingAccessoryId","setshowingAccessoryId","active","accessoryId","cursor","FooterNav","showPrev","disabled","prevEnabled","onPrevClick","prevLabel","showNext","nextEnabled","onNextClick","nextLabel","AccessoryDetails","AddressForm","useForm","register","getValues","triggerValidation","useEffect","onValidChange","handleChange","result","Fragment","onChange","htmlFor","placeholder","required","defaultValue","BuildStatusBox","customOptionsMarkup","productTitle","ContactDetailsForm","errors","pattern","email","defaultChecked","DeliveryDetailsForm","reValidateMode","selectedCompanyId","setselectedCompanyId","selectedCompany","company","dealer","validate","deliveryMethod","city","address_line_1","address_line_2","country","phone","href","website_url","target","rel","ModelDetails","ModelPicker","buildItemsMarkup","x","selected","short_description","ProductDetails","selectProductById","ProductPicker","SelectAccessories","cats","catsMarkup","cat","accessoryMarkup","accId","StepTitle","backLink","showBackButton","onBackClick","isActive","StepTitles","stepTitles","titles","activeStep","ThankYouScreen","emailSent","setEmailSent","allDetails","window","szReactPlugin","email_endpoint","then","json","catch","error","document","documentElement","setProperty","accent_color","App","currentScreen","currentScreenIdx","screenNames","fullBuild","transition","useTransition","from","transform","opacity","enter","leave","config","slow","canAdvance","setCanAdvance","handleValidChange","isValid","theCurrentScreen","t","div","screen","getScreen","isWizardScreen","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wmBAAaA,EAAiB,SAAEC,GAA0D,IAA3CC,EAA0C,wDAEvF,GAAGA,EAAa,CAId,IAAIC,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CC,MAAO,WACPC,SAAU,QAEZ,OAAOJ,EAAUK,OAAOP,GAExB,MAAO,IAAMQ,OAAOR,GAAOS,kBA2BlBC,EAAY,SAAZA,EAAaC,GACxB,IAAMC,EAAW,SAACD,GAAD,MAC0B,oBAAzCE,OAAOC,UAAUC,SAASC,KAAKL,IAC3BM,EAAU,SAACN,GAAD,MAC2B,mBAAzCE,OAAOC,UAAUC,SAASC,KAAKL,IAE3BO,EAAU,SAACP,GACf,OAAKA,EAAKQ,WAEH,aACLC,GAAIT,EAAKS,IACNT,EAAKQ,YAJmBR,GAQ/B,GAAIM,EAAQN,GACV,OAAOA,EAAKU,KAAI,SAACC,GAAD,OAAcZ,EAAUY,MAG1C,GAAIV,EAASD,GAAO,CAWlB,IAAK,IAAMY,KATTZ,EADEM,EAAQN,EAAKA,MACX,YAAOA,EAAKA,MACPC,EAASD,EAAKA,MAChBO,EAAQ,eAAKP,EAAKA,OACF,OAAdA,EAAKA,KACP,KAEAO,EAAQP,GAIfA,EAAKY,GAAOb,EAAUC,EAAKY,IAG7B,OAAOZ,EAGT,OAAOA,GCpDIa,EAAeC,YAAyB,iBAsEtCC,GArEeD,YAAkB,mBACnBA,YAAqB,kBAE1B,SAAC,GAAD,IAAGE,EAAH,EAAGA,SAAH,OAAkB,SAACC,GAAD,8CAAU,WAAOC,GAAP,iCAAAC,EAAA,yDAElDC,QAAQC,IAAIH,EAAOI,MACfJ,EAAOI,OAAST,EAAaS,KAHiB,yCAGJL,EAAKC,IAHD,UAIlDD,EAAKC,GAJ6C,EAc9CA,EAAOK,QAPTC,EAPgD,EAOhDA,IACAC,EARgD,EAQhDA,aACAzB,EATgD,EAShDA,KACA0B,EAVgD,EAUhDA,QACAC,EAXgD,EAWhDA,UACAC,EAZgD,EAYhDA,QAGEF,GAASV,EAAS,CAAEM,KAAMI,IAfoB,SAkB5CG,OAAWC,EAEVL,EApB2C,kCAqB7BM,MAAMP,EAAK,CAC1BQ,OAAQ,OACRC,KAAM,UACNC,MAAO,WACPC,QAAS,CACP,eAAgB,oBAGlBC,SAAU,SACVC,KAAMC,KAAKC,UAAUvC,KA9BuB,QAqB9C6B,EArB8C,mBAmC7CJ,EAnC6C,wBAoCxCe,EAAgB,IAAIC,gBAAcjB,EAAK,IApCC,UA0C7BgB,EAAcE,QAAQjB,GA1CO,QA0C9CI,EA1C8C,eAgD5CF,GACCE,GAAYJ,IACPkB,EAAmB5C,EAAU8B,GACnCb,EAAS,CAAEM,KAAMK,EAAWJ,QAASoB,KAnDO,kDAyDhDvB,QAAQC,IAAI,aAAa,EAAb,IAKRO,GAASZ,EAAS,CAAEM,KAAMM,EAASL,QAAS,KAAeqB,UA9Df,0DAAV,yDCZpCC,EAA2B,CAC/BC,eAAWhB,EACXiB,aAASjB,EACTkB,aAAc,GACdC,cAAe,IAGJC,EAAaC,YAAY,CACpCC,KAAM,QACNP,eACAQ,SAAU,CACRC,gBAAiB,SAACC,EAAOrC,GAEvB,IAAMsC,EAAMD,EAAMN,cAAcQ,WAC9B,SAACC,GAAD,OAAQA,EAAGC,WAAazC,EAAOK,QAAQoC,aAG5B,IAATH,EACFD,EAAMN,cAAcO,GAAKI,kBACvB1C,EAAOK,QAAQqC,kBACZL,EAAMN,cAAcY,KAAK3C,EAAOK,UAEzCuC,aAAc,SAACP,EAAOrC,GACjBqC,EAAMP,aAAae,SAAS7C,EAAOK,SACpCH,QAAQC,IAAI,uCAGdkC,EAAMP,aAAaa,KAAK3C,EAAOK,UAEjCyC,WAAY,SAACT,EAAOrC,GACdqC,EAAMT,YAAc5B,EAAOK,UAC7BgC,EAAMR,aAAUjB,GAElByB,EAAMT,UAAY5B,EAAOK,SAE3B0C,SAAU,SAACV,EAAOrC,GACZqC,EAAMR,UAAY7B,EAAOK,UAC3BgC,EAAMP,aAAe,IAEvBO,EAAMR,QAAU7B,EAAOK,SAEzB2C,gBAAiB,SAACX,EAAOrC,GACvB,IAAMsC,EAAMD,EAAMP,aAAamB,QAAQjD,EAAOK,SAC9C,GAAIiC,GAAO,EAAG,CACZ,IAAMY,EAAWb,EAAMP,aAAaqB,OAAOb,EAAK,GAChDpC,QAAQC,IAAI+C,KAGhBE,YAAa,gBAmCJC,EAAc,SAAC/C,EAAYxB,GAAb,OAAoC,SAACgB,GAE9D,OADAI,QAAQC,IAAI,sBACLL,EACLH,EAAa,CACXW,IAAKA,EACLxB,KAAKA,O,EAWPkD,EAAWsB,QAJbV,G,EADAR,gB,EACAQ,cACAE,E,EAAAA,WACAC,E,EAAAA,SACAC,E,EAAAA,gBAQWO,EAA0B,SAAClB,GAAD,OACrCA,EAAMmB,MAAM1B,cACD2B,EAAqB,SAACpB,GAAD,uBAChCA,EAAMqB,QAAQC,gBADkB,aAChC,EAAwBC,MAAK,SAACpB,GAAD,aAAQA,EAAGjD,KAAO,cAAG8C,EAAMmB,aAAT,aAAG,EAAa5B,eACpDiC,EAAmB,SAACxB,GAAD,yBAC9BoB,EAAmBpB,UADW,iBAC9B,EAA2ByB,cADG,aAC9B,EAAmCF,MAAK,SAACpB,GAAD,OAAQA,EAAGjD,KAAO,GAAG8C,EAAMmB,MAAM3B,YAC9DkC,EAAyB,SAAC1B,GAAD,OACpCA,EAAMmB,MAAM1B,aAAatC,KAAI,SAACD,GAAD,OAC3B8C,EAAMqB,QAAQM,YAAYJ,MAAK,SAACpB,GAAD,OAAQA,EAAGjD,KAAO,GAAGA,SAE3C0E,EAAiC,SAAC5B,GAAqB,IAAD,IAEjE,OADAnC,QAAQC,IAAI0D,EAAiBxB,IAC7B,UAAOwB,EAAiBxB,UAAxB,iBAAO,EAAyB6B,4BAAhC,aAAO,EAA+C1E,KAAK,SAAC2E,EAAQ7B,GAAT,OAd1B,SAACD,EAAkB9C,GAAnB,OACjC8C,EAAMqB,QAAQM,YAAYJ,MAAK,SAACQ,GAAD,OAASA,EAAI7E,KAAO,GAAGA,KAcpD8E,CAAoBhC,EAAO8B,EAAO5E,QAMzB+E,EAAc,SAACjC,GAC1B,MAAO,CACLkC,QAASd,EAAmBpB,GAC5BmC,MAAOX,EAAiBxB,GACxB2B,YAAaD,EAAuB1B,KAI3BoC,EAAmB,SAACpC,GAAsB,IAAD,IAC9CqC,EAAQ,UAAGb,EAAiBxB,UAApB,aAAG,EAAyBsC,eACpCC,EAAO,UAAGnB,EAAmBpB,UAAtB,aAAG,EAA2BsC,eAC3C,OAAID,GAGKE,GAGEC,EAAkB,SAACxC,GAAsB,IAAD,IAC7CyC,GAAe,UAAArB,EAAmBpB,UAAnB,eAA2B0C,MAAO,EACjDC,GAAa,UAAAnB,EAAiBxB,UAAjB,eAAyB0C,MAAO,EAC7CE,EAAiBlB,EAAuB1B,GAAO6C,QACnD,SAACd,EAAKe,GAAN,OAAef,IAAW,OAAJe,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,MAAO,KACnC,GAEF,OAAIC,EACKA,EAAaC,EACXH,GAGF,GAoCEM,EAA2B,SAAC/C,GAQvC,OAPqBA,EAAMqB,QAAQ2B,oBAAoB7F,KAAI,SAAC8F,GAC1D,MAAO,CACLpD,KAAMoD,EAAaC,YACnBC,gBAlCkCjG,EAkCM+F,EAAa/F,GAlCJ,SAAC8C,GAEtD,IAAMoD,EAAcpD,EAAMmB,MAAMzB,cAAc6B,MAAK,SAAC8B,GAClD,OAAOA,EAAOjD,WAAalD,KAEvBoG,EAAgB,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAa/C,kBAGtC,IAAIL,EAAMqB,QAAQkC,2BAAlB,CAIA,IAAMC,EAAgBxD,EAAMqB,QAAQ2B,oBAAoBzB,MACtD,SAACkC,GAAD,OAAYA,EAAOvG,KAAOA,KAG5B,cAAOsG,QAAP,IAAOA,OAAP,EAAOA,EAAeE,QAAQnC,MAAK,SAAC8B,GAAD,OAAYA,EAAOnG,KAAOoG,QAkBAtD,IAlCxB,IAAC9C,MAyC3ByG,EAAkB,SAAC3D,GAO9B,MAAO,CACLkC,QANmBd,EAAmBpB,GAOtCmC,MANiBX,EAAiBxB,GAOlC2B,YANuBD,EAAuB1B,GAO9C4D,MANiBxB,EAAiBpC,KASvBL,IAAf,QC5HakE,EAAejE,YAAY,CACtCC,KAAM,UACNP,aAb4B,CAC5BwE,SAAS,EACTC,oBAAoB,EACpBR,4BAA4B,EAC5BjC,SAAU,GAEVK,YAAa,GACbqC,oBAAqB,GACrBhB,oBAAqB,IAMrBlD,SAAU,CACRmE,6BAA8B,SAACjE,EAAOrC,GACpCqC,EAAMuD,4BAA6B,GAErCW,4BAA6B,SAAClE,EAAOrC,GAC/BA,EAAOK,QAAQmE,QACjBnC,EAAMgD,oBAAsBrF,EAAOK,QAAQmE,MAAMgC,eAEnDnE,EAAMuD,4BAA6B,GAErCa,qBAAsB,SAACpE,EAAOrC,GAC5BqC,EAAM+D,oBAAqB,GAE7BM,oBAAqB,SAACrE,EAAOrC,GAC3BqC,EAAM+D,oBAAqB,EAC3B/D,EAAM2B,YAAchE,EAAOK,QAAQ2D,aAErC2C,iBAAkB,SAACtE,EAAOrC,GACxBqC,EAAM8D,SAAU,GAElBS,gBAAiB,SAACvE,EAAOrC,GACvBE,QAAQC,IAAIH,EAAOK,QAAQsD,UAC3BtB,EAAMsB,SAAW3D,EAAOK,QAAQsD,SAChCtB,EAAM8D,SAAU,GAElBU,oBAAqB,SAACxE,EAAOrC,KAG7B8G,mBAAoB,SAACzE,EAAOrC,GAC1BqC,EAAMgE,oBAAsBrG,EAAOK,QAAQgG,wBA+MpCU,EAAiB,SAAC1E,GAAD,OAAsBA,EAAMqB,QAAQC,UACrDqD,EAAyB,SAAC3E,GAAD,uBACpCA,EAAMqB,QAAQC,SAASC,MAAK,SAACqD,GAAD,MAAU,GAAG5E,EAAMmB,MAAM5B,YAAcqF,EAAK1H,aADpC,aACpC,EACIuE,QA8COoD,EAAkB,SAAC3H,GAAD,OAAgB,SAAC8C,GAC9C,GAAKA,EAAMqB,QAAQC,UAA8C,IAAlCtB,EAAMqB,QAAQC,SAASwD,OAGtD,OAAO9E,EAAMqB,QAAQC,SAASuB,QAAyB,SAACd,EAAK6C,GAAU,IAAD,EAC9DzC,EAAwB,UAAGyC,EAAKnD,cAAR,aAAG,EAAaF,MAC5C,SAACY,GAGC,OAFAtE,QAAQC,WAAWqE,EAAMjF,UAAWA,GAE5BiF,EAAMjF,KAAQ,GAAGA,KAI7B,OAAIiF,GACQJ,SACXxD,KAeQyD,EAAsB,SAAC9E,GAAD,OAAgB,SAAC8C,GAAD,OACjDA,EAAMqB,QAAQM,YAAYJ,MAAK,SAACwD,GAAD,OAAeA,EAAU7H,KAAO,GAAGA,OACvD8H,EAAmB,SAAChF,GAAD,OAC9BA,EAAMqB,QAAQ2C,qBA0BDH,IAAf,QCnaaoB,EAAerF,YAAY,CACtCC,KAAM,UACNP,aAPiC,CACjC4F,UAAW,GACXpB,SAAQ,GAMRhE,SAAU,CACRqF,kBAAmB,SAACnF,EAAOrC,GACzBqC,EAAMkF,UAAYvH,EAAOK,QAAQoH,wBACjCpF,EAAM8D,SAAU,GAElBuB,mBAAoB,SAACrF,GACnBA,EAAM8D,SAAU,M,EA2ClBmB,EAAahE,QAMJqE,G,EARXH,kB,EACAE,mBAOkC,SAACrF,GACnC,OAAOA,EAAMkF,UAAUA,YAKVD,IAAf,QCtEaM,EAAgB3F,YAAY,CACvCC,KAAM,WACNP,aAJoC,GAKpCQ,SAAU,CACR0F,sBAAuB,SAACxF,EAAOrC,GAC7B,OAAO,2BAAKqC,GAAUrC,EAAOK,UAE/ByH,sBAAuB,SAACzF,EAAOrC,GAC7B,OAAO,2BAAKqC,GAAUrC,EAAOK,UAE/B0H,sBAAuB,SAAC1F,EAAOrC,GAC7BqC,EAAM2F,QAAUhI,EAAOK,Y,EASzBuH,EAActE,QAHhBuE,E,EAAAA,sBACAC,E,EAAAA,sBACAC,E,EAAAA,sBAOWE,GAAuB,SAAC5F,GACnC,OAAOA,EAAM6F,UAGAN,KAAf,QC3CMjG,GAAyB,CAC7BwE,SAAS,EACTgC,SAAU,CACRC,iBAAaxH,EACbyH,0CAAsCzH,EACtC0H,WAAY,CACVhI,SAAKM,KAKE2H,GAAgBtG,YAAY,CACvCC,KAAM,WACNP,gBACAQ,SAAU,CACRqG,kBAAmB,SAACnG,EAAOrC,GACzBqC,EAAM8D,SAAU,GAElBsC,iBAAkB,SAACpG,EAAOrC,GACxBqC,EAAM8F,SAAWnI,EAAOK,QAAQ8H,SAChC9F,EAAM8D,SAAU,MAkCTuC,GAAiB,SAACrG,GAAD,OAAsBA,EAAM8F,SAASA,UAEpDI,MAAf,QCpEaI,GACK,iBADLA,GAEG,eAFHA,GAGG,eAHHA,GAIM,kBAJNA,GAKO,mBALPA,GAMG,eANHA,GAOG,eAPHA,GAQM,kBARNA,GASI,gBATJA,GAUW,uBAVXA,GAWQ,oBAUfhH,GAAwB,CAC5BiH,YAAa,EACbC,gBAAiBF,GACjBG,cAAe,CACbH,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,IAEFI,yBAA0B,KAGfC,GAAU/G,YAAY,CACjCC,KAAM,KACNP,gBACAQ,SAAU,CACR8G,gBAAiB,SAAC5G,GAIbA,EAAMuG,YAAcvG,EAAMyG,cAAc3B,OAAO,IAChD9E,EAAMuG,cACNvG,EAAMwG,gBAAkBxG,EAAMyG,cAAczG,EAAMuG,eAGtDM,gBAAiB,SAAC7G,GACZA,EAAMuG,YAAc,IACtBvG,EAAMuG,cACNvG,EAAMwG,gBAAkBxG,EAAMyG,cAAczG,EAAMuG,eAGtDO,eAAgB,SAAC9G,EAAOrC,GACtBqC,EAAMuG,YAAc5I,EAAOK,QAC3BgC,EAAMwG,gBAAkBxG,EAAMyG,cAAczG,EAAMuG,cAEpDQ,uBAAwB,SAAC/G,EAAOrC,GAC9BqC,EAAMwG,gBAAkBF,GACxBtG,EAAM0G,yBAA2B/I,EAAOK,SAE1CgJ,yBAA0B,SAAChH,EAAOrC,GAChCqC,EAAMwG,gBAAkBF,GACxBtG,EAAM0G,yBAA2B/I,EAAOK,SAE1CiJ,0BAA2B,SAACjH,GAC1BA,EAAMwG,gBAAkBxG,EAAMyG,cAAczG,EAAMuG,cAEpDW,wBAAyB,SAAClH,GACxBA,EAAMwG,gBAAkBxG,EAAMyG,cAAczG,EAAMuG,cAEpDY,4BAA6B,SAACnH,GAC5BA,EAAMwG,gBAAkBF,IAE1Bc,6BAA8B,SAACpH,GAC7BA,EAAMwG,gBAAkBxG,EAAMyG,cAAczG,EAAMuG,cAEpDc,2BAA4B,SAACrH,EAAOrC,GAClCqC,EAAMwG,gBAAkBF,GACxBtG,EAAM0G,yBAA2B/I,EAAOK,SAE1CsJ,4BAA6B,SAACtH,GAC5BA,EAAMwG,gBAAkBxG,EAAMyG,cAAczG,EAAMuG,iB,GAkBpDI,GAAQ1F,QAXV2F,G,GAAAA,gBACAC,G,GAAAA,gBAEAE,I,GADAD,e,GACAC,wBACAC,G,GAAAA,yBACAE,G,GAAAA,wBACAD,G,GAAAA,0BACAE,G,GAAAA,4BACAC,G,GAAAA,6BACAC,G,GAAAA,2BAIWE,I,GAHXD,4BAG+B,SAACtH,GAAD,OAAsBA,EAAMwH,GAAGjB,cACnDkB,GAAwB,SAACzH,GAAD,OAAsBA,EAAMwH,GAAGhB,iBACvDkB,GAAoB,SAAC1H,GAAD,OAAqBA,EAAMwH,GAAGd,0BAClDiB,GAAoB,SAAC3H,GAAD,OAAqBA,EAAMwH,GAAGf,eAMhDE,MAAf,QCnGaiB,GAAQC,YAAe,CAClCC,QAAS,CACPzG,QAAS0G,EACT5G,MAAO6G,EACPR,GAAIS,GACJnC,SAAUoC,GACVrC,SAAUsC,GACVjD,UAAWkD,GAEbC,WAAW,GAAD,mBAAMC,eAAN,CAA8B9K,MAI1CoK,GAAMnK,ULqMqC,SAACA,GAyD1C,OAAOA,EACLH,EAAa,CACXW,IAAKsK,+DACLrK,aA3Dc,mrCA4DdC,QAAS0F,EAAa5C,QAAQqD,iBAAiBvG,KAC/CK,UAAWyF,EAAa5C,QAAQsD,gBAAgBxG,WKlQtD6J,GAAMnK,ULuQyC,SAACA,GAwC9C,OAAOA,EACLH,EAAa,CACXW,IAAKsK,+DACLrK,aA1Cc,8qBA2CdC,QAAS0F,EAAa5C,QAAQmD,qBAAqBrG,KACnDK,UAAWyF,EAAa5C,QAAQoD,oBAAoBtG,WKnT1D6J,GAAMnK,UJkBuC,SAACA,GAuB5C,OAAOA,EACLH,EAAa,CACXW,IAAKsK,+DACLrK,aAzBc,oXA0BdC,QAAS8G,EAAahE,QAAQoE,mBAAmBtH,KACjDK,UAAW6G,EAAahE,QAAQkE,kBAAkBpH,WI7CxD6J,GAAMnK,UL8GwC,SAACA,GAuC7C,OAAOA,EACLH,EAAa,CACXW,IAAKsK,+DACLrK,aAzCc,qsBA0CdC,QAAS0F,EAAa5C,QAAQuD,oBAAoBzG,KAClDK,UAAWyF,EAAa5C,QAAQwD,mBAAmB1G,W,oEMpL1C,SAASyK,GAAwBC,GAAsC,IAAD,IAE7E1D,EAAY2D,YAAY1G,EAAoByG,EAAMvL,KACxD,OACE,yBAAKyL,UAAU,8BACH,OAAT5D,QAAS,IAATA,GAAA,UAAAA,EAAWzC,sBAAX,eAA2BrE,MAAO,yBAAK0K,UAAU,yBAAyBC,IAAK,WAAwC7D,QAAxC,IAAwCA,GAAxC,UAAwCA,EAAWzC,sBAAnD,aAAwC,EAA2BrE,KAAK4K,IAAI,KAC5J,mCAAK9D,QAAL,IAAKA,OAAL,EAAKA,EAAWlF,OACN,OAATkF,QAAS,IAATA,OAAA,EAAAA,EAAWrC,MAAO,uCAAMqC,QAAN,IAAMA,OAAN,EAAMA,EAAWrC,KACpC,kCAAIqC,QAAJ,IAAIA,OAAJ,EAAIA,EAAW+D,c,sBCGfC,GAAmBC,IAAMC,cAAgC,CAC7DC,kBAAmB,EACnBC,0BAAsB5K,IAGT,SAAS6K,GAAUX,GAAuB,IAAD,EACJO,IAAMK,SAAS,GADX,oBAC/CH,EAD+C,KAC5BC,EAD4B,KAEhDG,EAAWN,IAAMO,SAASpM,IAAIsL,EAAMa,UAAU,SAACE,EAAMvJ,GACzD,GAAI+I,IAAMS,eAAeD,GACvB,OAAOR,IAAMU,aAAaF,EAAO,CAAEG,MAAO1J,OAG9C,OACE,kBAAC8I,GAAiBa,SAAlB,CAA2B9N,MAAO,CAACoN,oBAAmBC,yBACpD,yBAAKR,UAAU,gBACZW,IAMF,SAASO,GAAcpB,GAA0B,IAAD,EAC/CqB,EAAYC,iBAAuB,MADY,EAEHC,qBAAWjB,IAAtDG,EAF8C,EAE9CA,kBAAmBC,EAF2B,EAE3BA,qBACpBc,EAASxB,EAAMkB,QAAUT,EAE/B,OACE,yCAAST,EAAT,CAAgBE,UAAWuB,KAAG,iBAAkB,CAACC,KAAMF,MACrD,yBAAKtB,UAAU,wBAAwByB,QAAS,kBAAMjB,GAAwBA,EAAqBc,GAAU,EAAKxB,EAAMkB,OAAS,KAC/H,wBAAIhB,UAAU,wBAAwBF,EAAM4B,MAAO5B,EAAM6B,UAAW,KAAOtB,IAAMO,SAASgB,MAAM9B,EAAMa,UAAY,IAAK,IACvH,yBAAKX,UAAU,sBACb,kBAAC,KAAD,QAGJ,yBAAKA,UAAU,4BAA4BxM,MACzC8N,EACI,CAAEO,UAAS,OAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAWW,eAAb,aAAE,EAAoBC,cACjC,CAAEF,UAAW,QAEjB,yBAAK7B,UAAU,yBAAyBgC,IAAKb,GAC1CrB,EAAMa,Y,MCzCF,SAASsB,GAAUnC,GAChC5K,QAAQC,IAAI2K,EAAMoC,SAClB,IXHuBC,EAAanB,EWG9BoB,EAAUtC,EAAMuC,QACpB,0BAAMrC,UAAWuB,KAAG,mDAAqDE,QAAS3B,EAAMwC,eACtF,0BAAMtC,UAAU,+BACd,kBAAC,KAAD,OAEF,0BAAMA,UAAU,8BACd,kBAAC,KAAD,QAIJ,0BAAMA,UAAU,gDAAgDyB,QAAS3B,EAAMyC,YAC7E,kBAAC,KAAD,OAGJ,OACE,yBAAKvC,UAAWuB,KAAG,uCAAwC,CAACW,QAASpC,EAAMoC,WACzE,yBAAKlC,UAAU,uBACZF,EAAM7E,OACP,yBAAK+E,UAAU,wBAAwByB,QAAS3B,EAAM0C,gBACpD,yBAAKxC,UAAU,iBAAiBC,IAAK,GAAwCH,EAAM7E,MAAOiF,IAAI,MAEhG,yBAAKF,UAAU,gCACb,yBAAKA,UAAU,wBAAwB0B,MAAO5B,EAAM4B,MAAOD,QAAS3B,EAAM0C,gBACxE,0BAAMxC,UAAU,0BX1BHmC,EW0BqCrC,EAAM4B,MX1B9BV,EW0BqC,GXzBtEmB,EAAKhG,OAAS6E,EACRmB,EAAKM,UAAU,EAAGzB,GAAS,SAE7BmB,IWuBIrC,EAAMK,aAAe,0BAAMH,UAAU,4BAA4BF,EAAMK,cAEzEL,EAAM4C,SAAWN,EACjBtC,EAAM6C,aAAe,0BAAM3C,UAAU,sDAAsDyB,QAAS3B,EAAM0C,gBACzG,kBAAC,KAAD,UCjCG,SAASI,GAAqB9C,GAG3C,IAAM+C,EAAmB9C,YAAYhH,GAC/B+J,EAAsB/C,YAAY9G,GAClCnE,EAAWiO,cAEXC,EAA0BH,EAAiBrO,KAAK,SAAA4H,GACpD,OACEA,GACA,kBAAC,GAAD,CACE1H,IAAK0H,EAAU7H,GACf0G,MAAOmB,EAAUzC,gBAAkBiG,GAAmCxD,EAAUzC,eAAerE,IAC/FkN,eAAgB,kBAAM1C,EAAM0C,eAAepG,EAAU7H,KACrDgO,WAAY,kBAAMzN,EAAS8C,EAAawE,EAAU7H,MAClD+N,cAAe,kBAAMxN,EAASkD,EAAgBoE,EAAU7H,MACxDmN,MAAOtF,EAAUlF,KACjBiJ,YAAajN,EAAekJ,EAAUrC,KAAO,GAC7CsI,SAAS,EACTK,SAAS,OAITO,EAAuB,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAqBtO,KAAK,SAAA4H,GACxD,OACEA,GACA,kBAAC,GAAD,CACE1H,IAAK0H,EAAU7H,GACf0G,MAAOmB,EAAUzC,gBAAkBiG,GAAmCxD,EAAUzC,eAAerE,IAC/FkN,eAAgB,kBAAM1C,EAAM0C,eAAepG,EAAU7H,KACrDgO,WAAY,kBAAMzN,EAAS8C,EAAawE,EAAU7H,MAClD+N,cAAe,kBAAMxN,EAASkD,EAAgBoE,EAAU7H,MACxDmN,MAAOtF,EAAUlF,KACjBiJ,YAAc/D,EAAUrC,KAAyB,IAAlBqC,EAAUrC,IAAa7G,EAAekJ,EAAUrC,UAAMnE,EACrFyM,SAAS,EACTH,SAAS,OAKf,OAEE,yBAAKlC,UAAWuB,KAAG,oCACjB,yBAAKvB,UAAU,8BACb,gDACA,0BAAMA,UAAU,cAAhB,mDAEF,kBAAC,GAAD,KACE,kBAACkB,GAAD,CAAeQ,MAAO,iCAA2BsB,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAyB7G,QAAS,KACjF,4BAAQ6D,UAAW,oCAAqCyB,QAAS,kBAAI3M,EAAS0J,QAC5E,kBAAC,KAAD,MADF,oBAICwE,GAEH,kBAAC9B,GAAD,CAAeQ,MAAO,iCAA2BuB,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAyB9G,QAAS,KAChF8G,KC5DI,SAASC,KAEtB,IAAMjI,EAAQ8E,YAAYtG,GAFgB,EAGJiH,oBAAS,GAHL,oBAGnCyC,EAHmC,KAGtBC,EAHsB,OAIU1C,mBAAS,KAJnB,oBAInC2C,EAJmC,KAIfC,EAJe,KAa1C,OACE,yBAAKtD,UAAU,uBACb,yBAAKA,UAAU,6BAEb,yBAAKA,UAAU,yBAWb,yBAAKC,IAAK,WAAwChF,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAO3F,KAAK4K,IAAI,MAEpE,yBAAKF,UAAU,+BACb,yBAAKA,UAAWuB,KAAG,iBAAkB,CAACgC,QAASJ,KAC7C,kBAACP,GAAD,CAAsBJ,eAAgB,SAACjO,GAAD,OAzBzBiP,EAyBsDjP,EAxB3EW,QAAQC,IAAI,qBAAuBqO,GACnCJ,GAAe,QACfE,EAAsBE,GAHF,IAACA,MA4Bf,yBAAKxD,UAAWuB,KAAG,iBAAkB,CAACgC,OAAQJ,KAC5C,yBAAK3P,MAAO,CAACiQ,OAAO,WAAYhC,QAAS,kBAAM2B,GAAe,KAAQ,kBAAC,KAAD,MAAtE,SACA,kBAAC,GAAD,CAAyB7O,GAAI8O,Q,YClC1B,SAASK,GAAU5D,GAEhC,OACE,4BAAQE,UAAU,iBACfF,EAAM6D,UACP,4BAAQ3D,UAAWuB,KAAG,gCAAiC,CAAEqC,UAAW9D,EAAM+D,cACxEpC,QAAS3B,EAAMgE,aACfhE,EAAMiE,WAEPjE,EAAMkE,UACT,4BACEhE,UAAWuB,KAAG,kBAAmB,CAAEqC,UAAW9D,EAAMmE,cACpDxC,QAAS3B,EAAMoE,aAAcpE,EAAMqE,UAFrC,IAEgD,kBAAC,KAAD,QCjBrC,SAASC,KACtB,IAAMtP,EAAWiO,cAEXxO,EAAKwL,YAAYhB,IAEjB3C,EAAY2D,YAAY1G,EAAoB9E,IAElD,OADAW,QAAQC,IAAI,OAAQiH,GAElB,oCACE,yBAAK4D,UAAU,4CACb,yBAAKA,UAAU,YACZ5D,GAAa,yBAAK6D,IAAK7D,EAAUzC,gBAAkBiG,GAAmCxD,EAAUzC,eAAerE,IAAK4K,IAAI,MAE3H,yBAAKF,UAAU,aACb,mCAAK5D,QAAL,IAAKA,OAAL,EAAKA,EAAWlF,OACN,OAATkF,QAAS,IAATA,OAAA,EAAAA,EAAWrC,MAAO,uCAAMqC,QAAN,IAAMA,OAAN,EAAMA,EAAWrC,KACpC,kCAAIqC,QAAJ,IAAIA,OAAJ,EAAIA,EAAW+D,eAInB,kBAACuD,GAAD,CACEQ,YAAa,WACR9H,GACDtH,EAAS8C,EAAawE,EAAU7H,KAElCO,EAAS0J,OAEXsF,YAAa,WAAOhP,EAAS0J,OAC7BwF,UAAU,EACVL,UAAU,EACVE,aAAa,EACbI,aAAa,EACbE,UAAW,gBACXJ,UAAU,U,mBCjCH,SAASM,GAAYvE,GAClC,IAAMhL,EAAWiO,cAD+B,EAEGuB,eAA3CC,EAFwC,EAExCA,SAAUC,EAF8B,EAE9BA,UAAWC,EAFmB,EAEnBA,kBAG7BC,qBAAU,WACR5E,EAAM6E,eAAc,KAEnB,IAEH,IAAMC,EAAY,uCAAG,4BAAA3P,EAAA,6DACnBH,EAASiI,EAAsByH,MADZ,SAEEC,IAFF,OAEbI,EAFa,OAGnB/E,EAAM6E,cAAcE,GAHD,2CAAH,qDAMlB,OACE,kBAAC,IAAMC,SAAP,KACE,0BAAMC,SAAUH,EAAc5E,UAAU,UACtC,kCACE,sDACA,2BAAOgF,QAAQ,kBACb,0BAAMhF,UAAU,cAAhB,UACA,2BACEzL,GAAG,iBACH2C,KAAK,iBACL+N,YAAY,cACZjD,IAAKuC,EAAS,CAAEW,UAAU,OAI9B,2BAAOF,QAAQ,kBACb,0BAAMhF,UAAU,cAAhB,UACA,2BACEzL,GAAG,iBACH2C,KAAK,iBACL+N,YAAY,GACZjD,IAAKuC,KAIT,2BAAOS,QAAQ,QACb,0BAAMhF,UAAU,cAAhB,QACA,2BACEzL,GAAG,OACH2C,KAAK,OACL+N,YAAY,YACZjD,IAAKuC,EAAS,CAAEW,UAAU,OAI9B,2BAAOF,QAAQ,WACb,0BAAMhF,UAAU,cAAhB,WACA,2BACEzL,GAAG,UACH2C,KAAK,UACLiO,aAAa,YACbF,YAAY,YACZjD,IAAKuC,EAAS,CACZW,UAAU,OAKhB,2BAAOF,QAAQ,SACb,0BAAMhF,UAAU,cAAhB,SACA,2BACEzL,GAAG,SACH2C,KAAK,QACL+N,YAAY,MACZjD,IAAKuC,EAAS,CAAEW,UAAU,U,mBClEzB,SAASE,KACtB,IAAM7L,EAAUwG,YAAYtH,GACtBe,EAAQuG,YAAYlH,GACpBG,EAAc+G,YAAYhH,GAG1BsM,EAFkBtF,YAAY3F,GAEQ5F,KAAI,SAACkG,GAAD,aAC9C,yBAAKhG,IAAKgG,EAAOxD,MACf,8BAAOwD,EAAOxD,MACd,wCAAOwD,EAAOF,sBAAd,aAAO,EAAuBD,iBAI5B+K,GAAoB,OAAL9L,QAAK,IAALA,OAAA,EAAAA,EAAOtC,MAAP,OAAesC,QAAf,IAAeA,OAAf,EAAeA,EAAOtC,KAAtB,OAA6BqC,QAA7B,IAA6BA,OAA7B,EAA6BA,EAASrC,KAE3D,OACE,yBAAK8I,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,kBACb,kBAAC,KAAD,OAEF,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,mBAAmBsF,GAA8B,kBAC/D,0BAAMtF,UAAU,yBAAyBhH,EAAYmD,OAArD,kBAIJ,yBAAK6D,UAAU,mBACb,8BAAO9M,EAAe6M,YAAYlG,MAEnCwL,GChCQ,SAASE,GAAmBzF,GACzC,IAAMhL,EAAWiO,cADsC,EAEIuB,aAEzD,CACAvO,KAAM,aAHAwO,EAF+C,EAE/CA,SAAUiB,EAFqC,EAErCA,OAAQhB,EAF6B,EAE7BA,UAAWC,EAFkB,EAElBA,kBAMrCC,qBAAU,WACR5E,EAAM6E,eAAc,KAEnB,IAGH,IAAMC,EAAY,uCAAG,4BAAA3P,EAAA,6DACnBH,EAASgI,EAAsB0H,MADZ,SAEEC,IAFF,OAEbI,EAFa,OAGnB/E,EAAM6E,cAAcE,GAHD,2CAAH,qDAMlB,OACE,kBAAC,IAAMC,SAAP,KACE,0BAAMC,SAAUH,EAAc5E,UAAU,UACtC,kCACE,8DACA,2BAAOgF,QAAQ,aACb,0BAAMhF,UAAU,cAAhB,cACA,2BACEzL,GAAG,YACH2C,KAAK,YACL+N,YAAY,OACZjD,IAAKuC,EAAS,CAAEW,UAAU,OAI9B,2BAAOF,QAAQ,WACb,0BAAMhF,UAAU,cAAhB,WACA,2BACEzL,GAAG,UACH2C,KAAK,UACL+N,YAAY,QACZjD,IAAKuC,EAAS,CAAEW,UAAU,OAI9B,2BAAOF,QAAQ,SACb,0BAAMhF,UAAU,cAAhB,SACA,2BACEzL,GAAG,QACH2C,KAAK,QACL+N,YAAY,eACZjD,IAAKuC,EAAS,CAAEW,UAAU,OAI9B,2BAAOF,QAAQ,SACb,0BAAMhF,UAAU,cAAhB,SACA,2BACEzL,GAAG,QACH2C,KAAK,QACL+N,YAAY,iBACZjD,IAAKuC,EAAS,CACZW,UAAU,EACVO,QAAS,CACPtS,MAAO,4CACPuD,QAAS,8BAKhB8O,EAAOE,OAAS,8BAAOF,EAAOE,MAAMhP,SAErC,2BAAOsO,QAAQ,YACb,0BAAMhF,UAAU,cAAhB,YACA,2BACEzL,GAAG,YACH2C,KAAK,WACL+N,YAAY,OACZjD,IAAKuC,EAAS,CAAEW,UAAU,OAI9B,2BAAOF,QAAQ,aAAahF,UAAU,SACpC,2BACEzL,GAAG,aACHa,KAAK,WACL8B,KAAK,aACLyO,gBAAgB,EAChB3D,IAAKuC,IANT,gDCnFK,SAASqB,GAAoB9F,GAC1C,IAAMhL,EAAWiO,cACXxG,EAAYwD,YAAYpD,GAE9BzH,QAAQC,IAAIoH,GAJ4C,IfsFxBhI,EetFwB,EAKL+P,aAAyB,CAC1EvO,KAAM,WACN8P,eAAgB,aAFVtB,EALgD,EAKhDA,SAAUE,EALsC,EAKtCA,kBAAmBD,EALmB,EAKnBA,UALmB,EASN9D,mBAASnE,EAAU,GAAGhI,IAThB,oBASjDuR,EATiD,KAS9BC,EAT8B,KAUlDC,EAAkBjG,af4EQxL,Ee5EsBuR,Ef4EP,SAACzO,GAChD,OAAOA,EAAMkF,UAAUA,UAAU3D,MAAK,SAAAqN,GAAO,OAAIA,EAAQ1R,KAAOA,Qe3EhEmQ,qBAAU,WACR5E,EAAM6E,eAAc,KAEnB,IAGH,IAAMC,EAAY,uCAAG,4BAAA3P,EAAA,6DACnBH,EAAS+H,EAAsB2H,MAC/BuB,EAAqBvB,IAAY0B,QAFd,SAGEzB,IAHF,OAGbI,EAHa,OAInB/E,EAAM6E,cAAcE,GAJD,2CAAH,qDAOlB,OACE,kBAAC,IAAMC,SAAP,KACE,0BAAMC,SAAUH,EAAc5E,UAAU,UACtC,kCACE,mDACA,2BAAOgF,QAAQ,WAAWhF,UAAU,eAClC,2BACEzL,GAAG,WACH2C,KAAK,iBACL9B,KAAK,QACLjC,MAAM,WACN6O,IAAKuC,IAEP,0BAAMvE,UAAU,cAAhB,aAGF,2BAAOgF,QAAQ,SAAShF,UAAU,eAChC,2BACEzL,GAAG,SACH2C,KAAK,iBACL9B,KAAK,QACLjC,MAAM,SACN6O,IAAKuC,EAAS,CACZ4B,SAAU,WACR,MAAsC,KAA/B3B,IAAY4B,oBAIzB,0BAAMpG,UAAU,cAAhB,aAIJ,kCACE,sDACA,4BAAQ9I,KAAK,SAAS3C,GAAG,SAAS4Q,aAAc5I,EAAU,GAAGhI,GAAIyN,IAAKuC,GACnEhI,EAAU/H,KAAI,SAACyR,EAAS3O,GAAV,OAAkB,4BAAQnE,MAAK,OAAE8S,QAAF,IAAEA,OAAF,EAAEA,EAAS1R,GAAIG,IAAK4C,GAAjC,OAAuC2O,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAS5O,MAAhD,aAA0D4O,QAA1D,IAA0DA,OAA1D,EAA0DA,EAAS/O,KAAnE,aAA4E+O,QAA5E,IAA4EA,OAA5E,EAA4EA,EAASI,YAI3HL,GAAmB,yBAAKhG,UAAU,0BACjC,wBAAIA,UAAU,eAAd,OAA6BgG,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAiB9O,MAC9C,0BAAM8I,UAAU,gBAAhB,OAAgCgG,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAiBM,eAAjD,OACgB,OAAfN,QAAe,IAAfA,OAAA,EAAAA,EAAiBO,iBAAkB,0BAAMvG,UAAU,mBAAhB,OAAmCgG,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAiBO,gBACxF,0BAAMvG,UAAU,eAAhB,OAA+BgG,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAiBK,MAAY,6BAC5D,0BAAMrG,UAAU,gBAAhB,OAAgCgG,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAiB3O,OAAa,6BAC9D,0BAAM2I,UAAU,kBAAhB,OAAkCgG,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAiBQ,SAAe,8BAClD,OAAfR,QAAe,IAAfA,OAAA,EAAAA,EAAiBS,QAAS,0BAAMzG,UAAU,gBAAhB,iBAAuCgG,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAiBS,MAAM,8BACzF,0BAAMzG,UAAU,kBAAiB,uBAAG0G,KAAI,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAiBW,YAAaC,OAAO,SAASC,IAAI,uBAA3D,oB,MCzE1B,SAASC,KAAgB,IAAD,EAE/BvS,EAAKwL,YAAYhB,IACjBvF,EAAQuG,YAAY7D,EAAgB3H,IACpCO,EAAWiO,cAEjB,OADA7N,QAAQC,IAAIZ,GAEV,oCACE,yBAAKyL,UAAU,yBACb,yBAAKA,UAAU,yBACZxG,GAAS,yBAAKyG,IAAK,WAAwCzG,QAAxC,IAAwCA,GAAxC,UAAwCA,EAAOG,sBAA/C,aAAwC,EAAuBrE,KAAK4K,IAAI,MAE9F,yBAAKF,UAAU,iBACb,4BAAKxG,IAAK,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOtC,OACrB,wBAAI8I,UAAU,gBAAoB,OAALxG,QAAK,IAALA,OAAA,EAAAA,EAAOO,MAAO7G,EAAesG,EAAMO,MAChE,2BAAIP,GAASA,EAAM2G,eAGvB,kBAACuD,GAAD,CACEQ,YAAa,WAAOpP,EAASmJ,OAC7B6F,YAAa,WAAOhP,EAASyJ,OAC7ByF,UAAU,EACVL,UAAU,EACVE,aAAa,EACbI,aAAa,EACbE,UAAW,kBAAY3K,QAAZ,IAAYA,OAAZ,EAAYA,EAAOtC,MAAO,SACrC6M,UAAU,U,MCpBH,SAASgD,GAAYjH,GAClC,IAgBIkH,EAhBElS,EAAWiO,cAEXjK,EAASiH,YAAY/D,GACrBxC,EAAQuG,YAAYlH,GACpBL,EAAQuH,YAAYzG,GACpB6D,EAAW4C,YAAYrC,IAsD7B,OAlDAgH,qBAAU,YACR,OAAI5L,QAAJ,IAAIA,OAAJ,EAAIA,EAAQF,MAAK,SAACqD,GAAD,OAAUA,EAAK1H,MAAL,OAAYiF,QAAZ,IAAYA,OAAZ,EAAYA,EAAOjF,QAC5CuL,EAAM6E,eAAc,GAEpB7E,EAAM6E,eAAc,MAMpB7L,IACFkO,EAAmBlO,EAAOtE,KAAI,SAACyS,GAAO,IAAD,IACnC,OACE,yBACEjH,UAAWuB,KAAG,UAAW,CAAE2F,UAAe,OAAL1N,QAAK,IAALA,OAAA,EAAAA,EAAOjF,MAAO0S,EAAE1S,KACrDG,IAAKuS,EAAE1S,GACPkN,QAAS,WACP3M,EAASiD,EAASkP,EAAE1S,KAGpBW,QAAQC,IAAI,UACZ2K,EAAM6E,eAAc,IACpB,OAAIxH,QAAJ,IAAIA,OAAJ,EAAIA,EAAUC,cACZtI,EAASuD,EAAW,OAAC8E,QAAD,IAACA,OAAD,EAACA,EAAUC,YAAa5E,MAIhD,yBAAKwH,UAAU,0BACZ,UAAAiH,EAAEtN,sBAAF,eAAkBrE,MACjB,yBACE0K,UAAU,gBACVC,IAAKL,IAAA,UAAmCqH,EAAEtN,sBAArC,aAAmC,EAAkBrE,KAC1D4K,IAAK+G,EAAE/P,QAIb,yBAAK8I,UAAU,0BACb,wBAAIA,UAAU,iBAAiBiH,EAAE/P,MACjC,uBAAG8I,UAAU,6BAA6BiH,EAAEE,mBAC5C,yBAAKnH,UAAU,uBACZiH,EAAElN,KAAO,wBAAIiG,UAAU,iBAAd,aAAyC9M,EAAe+T,EAAElN,MACpE,4BAAQiG,UAAU,6BAA6ByB,QAAS,kBAAI3M,EAASsJ,GAAuB6I,EAAE1S,OAA9F,qBAUV,yBAAKyL,UAAU,mBACZgH,G,mBCpEQ,SAASI,KAAkB,IAAD,EAEjC7S,EAAKwL,YAAYhB,IACjBxF,EAAUwG,YnBgZe,SAACxL,GAAD,OAAgB,SAAC8C,GAChD,GAAKA,EAAMqB,QAAQC,UAA8C,IAAlCtB,EAAMqB,QAAQC,SAASwD,OAStD,OAHkC9E,EAAMqB,QAAQC,SAASC,MAAK,SAACqD,GAE7D,OADA/G,QAAQC,WAAW8G,EAAK1H,UAAWA,GAC5B0H,EAAK1H,KAAOA,KAPnBW,QAAQC,IAAI,gBAAiBkC,EAAMqB,QAAQC,WmBlZjB0O,CAAkB9S,IACxCO,EAAWiO,cAGjB,OACE,oCACE,yBAAK/C,UAAU,2BACb,yBAAKA,UAAU,yBACZzG,GAAW,yBAAK0G,IAAK,WAAwC1G,QAAxC,IAAwCA,GAAxC,UAAwCA,EAASI,sBAAjD,aAAwC,EAAyBrE,KAAK4K,IAAI,MAElG,yBAAKF,UAAU,mBACb,4BAAKzG,IAAO,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAASrC,OACzB,wBAAI8I,UAAU,kBAAwB,OAAPzG,QAAO,IAAPA,OAAA,EAAAA,EAASQ,MAAO7G,EAAeqG,EAAQQ,MACtE,kBAAC,KAAD,MAAuB,OAAPR,QAAO,IAAPA,OAAA,EAAAA,EAAS4G,aAAa,MAG1C,kBAACuD,GAAD,CACEQ,YAAa,WAAOpP,EAASmJ,OAC7B6F,YAAa,WAAOhP,EAASwJ,OAC7B0F,UAAU,EACVL,UAAU,EACVE,aAAa,EACbI,aAAa,EACbE,UAAW,kBAAY5K,QAAZ,IAAYA,OAAZ,EAAYA,EAASrC,MAAO,SACvC6M,UAAU,U,MCtBH,SAASuD,GAAcxH,GACpC,IAkBIkH,EAlBElS,EAAWiO,cACXpK,EAAWoH,YAAYhE,GACvBxC,EAAUwG,YAAYtH,GAkD5B,OA/CAiM,qBAAU,WACJ/L,EAASC,MAAK,SAACqD,GAAD,OAAUA,EAAK1H,MAAL,OAAYgF,QAAZ,IAAYA,OAAZ,EAAYA,EAAShF,OAC/CuL,EAAM6E,eAAc,GAEpB7E,EAAM6E,eAAc,MAUpBhM,IACFqO,EAAmBrO,EAASnE,KAAI,SAACyS,GAAO,IAAD,IACrC,OACE,yBACEjH,UAAWuB,KAAG,UAAW,CAAE2F,UAAiB,OAAP3N,QAAO,IAAPA,OAAA,EAAAA,EAAShF,MAAO0S,EAAE1S,KACvDG,IAAKuS,EAAE1S,GAEPkN,QAAS,WACP3M,EAASgD,EAAWmP,EAAE1S,OAGxB,yBAAKyL,UAAU,0BACZ,UAAAiH,EAAEtN,sBAAF,eAAkBrE,MACjB,yBACE0K,UAAU,gBACVE,IAAK+G,EAAE/P,KACP+I,IAAG,UAAEgH,EAAEtN,sBAAJ,aAAE,EAAkBrE,OAI7B,yBAAK0K,UAAU,0BACb,wBAAIA,UAAU,iBAAiBiH,EAAE/P,MACjC,uBAAG8I,UAAU,6BAA6BiH,EAAEE,mBAC5C,yBAAKnH,UAAU,uBACZiH,EAAElN,KAAO,wBAAIiG,UAAU,iBAAd,aAAyC9M,EAAe+T,EAAElN,MACpE,4BAAQiG,UAAU,2BAA2ByB,QAAS,kBAAI3M,EAASuJ,GAAyB4I,EAAE1S,OAA9F,qBAUV,yBAAKyL,UAAU,mBACZgH,G,MC1DQ,SAASO,KACtB,IAAMC,EAAOzH,YAAY1D,GAEnBwG,EAAmB9C,YAAYxH,GAC/BzD,EAAWiO,cACjB7N,QAAQC,IAAIqS,GACZ,IAAMC,EAAaD,EAAKhT,KAAI,SAACkT,GAC3BxS,QAAQC,IAAI,OACZ,IAAMwS,EAAkBD,EAAI1O,YAAYxE,KAAI,SAAA4H,GAE1C,OADAlH,QAAQC,IAAI,YAEV,kBAAC,GAAD,CACET,IAAK0H,EAAU7H,GACf0G,MAAOmB,EAAUzC,gBAAkBiG,GAAmCxD,EAAUzC,eAAerE,IAC/FkN,eAAgB,WAAO1N,EAAS4J,GAA2BtC,EAAU7H,MACrEgO,WAAY,kBAAMzN,EAAS8C,EAAawE,EAAU7H,MAClD+N,cAAe,kBAAMxN,EAASkD,EAAgBoE,EAAU7H,MACxDmN,MAAOtF,EAAUlF,KACjBiJ,YAAajN,EAAekJ,EAAUrC,KAAO,GAC7C4I,aAAa,EACbN,aAAoEzM,IAA3DiN,EAAiBjK,MAAK,SAAAgP,GAAK,OAAIA,IAAUxL,EAAU7H,MAC5DmO,SAAS,OAIf,OACE,yBAAK1C,UAAU,qBAAqBtL,IAAKgT,EAAInT,IAC3C,wBAAIyL,UAAU,4BAA4B0H,EAAIxQ,MAC9C,yBAAK8I,UAAU,8BACZ2H,MAIN,IAEH,OACE,oCACE,yBAAK3H,UAAWuB,KAAG,8DACjB,wBAAIvB,UAAU,gBAAd,mBACCyH,GAGH,kBAAC/D,GAAD,CACEQ,YAAa,WAAOpP,EAAS2J,OAC7BqF,YAAa,WAAOhP,EAAS2J,OAC7BuF,UAAU,EACVL,UAAU,EACVE,aAAa,EACbI,aAAa,EACbE,UAAW,OACXJ,UAAU,U,MCnDH,SAAS8D,GAAU/H,GAChC,IAAIgI,EAaJ,OAXIhI,EAAMiI,iBACRD,EACE,0BACE9H,UAAU,YACVyB,QAAS,kBAAM3B,EAAMkI,aAAelI,EAAMkI,gBAEzC,KAAM,MAMX,yBAAKhI,UAAWuB,KAAG,aAAc,CAAEgC,OAAQzD,EAAMmI,YAC9CH,EADH,IACa,4BAAKhI,EAAM4B,QCpBb,SAASwG,GAAYpI,GAElC,IAAMqI,EAAarI,EAAMsI,OAAO5T,KAAK,SAACkN,EAAOpK,GAAR,OACnC,kBAAC,GAAD,CAAWoK,MAAOpK,EAAI,EAAI,KAAOoK,EAAOuG,SAAUvG,IAAQ5B,EAAMuI,WAAY3T,IAAK4C,OAEnF,OAAO,oCAAG6Q,G,MCEG,SAASG,KACtB,IAAM/O,EAAUwG,YAAYtH,GACtBe,EAAQuG,YAAYlH,GACpBG,EAAc+G,YAAYhH,GAC1BkC,EAAQ8E,YAAYtG,GAJa,EAMLiH,oBAAS,GANJ,oBAMhC6H,EANgC,KAMrBC,EANqB,KAOjCC,EAAU,2BACX1I,YAAY/E,IADD,IAEdkC,SAAU6C,YAAY9C,MA4BxB,OACE,yBAAK+C,UAAU,oBACb,wBAAIA,UAAU,MAAd,8BACA,wBAAIA,UAAU,wBAAuB,0BAAMA,UAAU,sBAAhB,OAAsCzG,QAAtC,IAAsCA,OAAtC,EAAsCA,EAASrC,MAApF,WAAkGsC,QAAlG,IAAkGA,OAAlG,EAAkGA,EAAOtC,MACxG8B,EAAYmD,OAAS,GAAK,0BAAM6D,UAAU,wBAAhB,QAA6ChH,EAAYmD,OAAzD,gBAC3B,yBAAK6D,UAAU,0BACb,yBAAKC,IAAK,WAAwChF,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAO3F,KAAK4K,IAAI,MAEpE,yBAAKF,UAAU,sBAAf,SACQ,8BAAO9M,EAAe6M,YAAYlG,MAE1C,yBAAKmG,UAAU,oBACb,4BAAQA,UAAWuB,KAAG,2BAA4B,CAACqC,UAAsB,IAAZ2E,IAAoB9G,QAtCtE,WAG+B,IAAD,GAD7C+G,GAAa,GACVE,OAAOC,gBAA6B,IAAZJ,IACzB1S,MAAK,UAAC6S,OAAOC,qBAAR,aAAC,EAAsBC,eAAgB,CAE1C9S,OAAQ,OAERG,QAAS,CACP,OAAU,oCACV,eAAgB,oBAElBE,KAAMC,KAAKC,UAAUoS,KAEpBI,MAAK,SAAClT,GAAD,OAAcA,EAASmT,UAC5BD,MAAK,SAAC/U,GACDA,GACFoB,QAAQC,IAAIrB,MAGfiV,OAAM,SAACC,GACN9T,QAAQ8T,MAAMA,QAiBoF,kBAAC,KAAD,MAApG,IAA+G,kDAC/G,4BAAQhJ,UAAU,kBAAiB,kBAAC,KAAD,MAAnC,IAAoD,6CClCxD0I,OAAOC,eACTM,SAASC,gBAAgB1V,MAAM2V,YAAY,gBAAiBT,OAAOC,cAAcS,cAkHpEC,OA/Gf,WACE,IAAMC,EAAoBvJ,YAAYjB,IAChCyK,EAAoBxJ,YAAYnB,IAChC4K,EAAoBzJ,YAAYf,IAChCyK,EAAoB1J,YAAY/E,GAChClG,EAAoBiO,cACpB2G,EAAoBC,yBAAcL,EAAe,CACrDM,KAAM,CAAEC,UAAW,kBAAmBC,QAAQ,GAC9CC,MAAO,CAAED,QAAS,EAAGD,UAAW,kBAChCG,MAAO,CAAEF,QAAS,EAAGD,UAAW,oBAChCI,OAAQA,UAAOC,OAVJ,EAcuBxJ,oBAAS,GAdhC,oBAcNyJ,EAdM,KAcMC,EAdN,KAgBPC,EAAoB,SAACC,GACzBF,EAAcE,IAyDhB,OACE,yBAAKtK,UAAU,OACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qBACb,8BACE,gCACE,wBAAIA,UAAU,cAAd,yBACA,kBAAC,GAAD,OAEF,yBAAKA,UAAU,wBACb,kBAACkI,GAAD,CAAYE,OAAQoB,EAAanB,WAAYiB,KAE/C,yBAAMtJ,UAAU,4BACb0J,GAAW,SAAClW,EAAO+W,EAAkBC,GAA1B,OACV,kBAAC,YAASC,IAAV,CAAcjX,MAAOA,EAAOwM,UAAWuB,KAAG,OAAQ,CAACgC,OAAQgH,IAAqBjB,KA1C5E,SAACoB,GACjB,OAAOA,GACP,KAAK/M,GACH,OAAO,kBAAC,GAAD,CAAegH,cAAe0F,IACvC,KAAK1M,GACH,OAAO,kBAAC,GAAD,CAAagH,cAAe0F,IACrC,KAAK1M,GACH,OAAO,kBAAC,GAAD,MACT,KAAKA,GACH,OAAO,kBAAC4H,GAAD,CAAoBZ,cAAe0F,IAC5C,KAAK1M,GACH,OAAO,kBAACiI,GAAD,CAAqBjB,cAAe0F,IAC7C,KAAK1M,GACH,OAAO,kBAAC0G,GAAD,CAAaM,cAAe0F,IACrC,KAAK1M,GACH,OAAO,kBAAC,GAAD,MACT,KAAKA,GACH,OAAO,kBAAC,GAAD,MACT,KAAKA,GACH,OAAO,kBAAC,GAAD,MACT,KAAKA,GACH,OAAO,kBAAC,GAAD,MACT,KAAKA,GACH,OAAO,kBAAC,GAAD,OAoBMgN,CAAUJ,QA1DJ,SAACG,GACtB,OAAOA,GACP,KAAK/M,GACL,KAAKA,GACL,KAAKA,GACL,KAAKA,GACL,KAAKA,GACL,KAAKA,GACL,KAAKA,GACH,OAAO,EACT,QACE,OAAO,GAmDAiN,CAAetB,IAChB,kBAAC5F,GAAD,CACEQ,YA3EY,WAAO,IAAD,EAGa,EAFrCoF,IAAkB3L,IAClB2L,IAAkB3L,MADnB,UAEI+K,OAAOC,qBAFX,aAEI,EAAsBvL,cAC3BtI,EAASuD,EAAW,UAACqQ,OAAOC,qBAAR,aAAC,EAAsBvL,YAAaqM,IAE1D3U,EAASmJ,MACTmM,GAAc,IAqEJtG,YAAa,WAAQhP,EAASoJ,MAAoBkM,GAAc,IAChEpG,SAAUuF,EAAmBC,EAAYrN,OAAO,EAChDwH,UAAU,EACVE,YAAkC,IAArB0F,EACbtF,YAAakG,EACbhG,UAAWqF,EAAYD,EAAiB,GACxCxF,UAAU,c,MC5HJ8G,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUlM,MAAOA,IACf,kBAAC,GAAD,QAGJgK,SAASmC,eAAe,YD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1C,MAAK,SAAA2C,GACJA,EAAaC,gBAEd1C,OAAM,SAAAC,GACL9T,QAAQ8T,MAAMA,EAAMtS,c","file":"static/js/main.8aba0492.chunk.js","sourcesContent":["export const formatCurrency = ( value: number, includeCents:boolean = false ): string => {\r\n  \r\n  if(includeCents){\r\n    \r\n  \r\n    // Create our number formatter.\r\n    var formatter = new Intl.NumberFormat('en-AU', {\r\n      style: 'currency',\r\n      currency: 'AUD',\r\n    });\r\n    return formatter.format(value); /* $2,500.00 */\r\n  } else {\r\n    return \"$\" + Number(value).toLocaleString()\r\n\r\n  }\r\n\r\n}\r\nexport const truncate = (text:string, index:number) => {\r\n  if(text.length > index) {\r\n    return text.substring(0, index) + \"\\u2026\";\r\n  }\r\n  return text;\r\n}\r\n\r\n/* takes strapiv4 response data and changes the structure back to strapiv3 style */\r\n/* ie. changes\r\nproducts{\r\n  data{\r\n    id   \r\n    attributes{\r\n      name\r\n    }\r\n  }\r\n}\r\nto\r\nproducts{\r\n  id\r\n  name\r\n}*/\r\nexport const normalize = (data:any) => {\r\n  const isObject = (data:any) =>\r\n    Object.prototype.toString.call(data) === '[object Object]'\r\n  const isArray = (data:any) =>\r\n    Object.prototype.toString.call(data) === '[object Array]'\r\n\r\n  const flatten = (data:any) => {\r\n    if (!data.attributes) return data\r\n\r\n    return {\r\n      id: data.id,\r\n      ...data.attributes\r\n    }\r\n  }\r\n\r\n  if (isArray(data)) {\r\n    return data.map((item:any) => normalize(item))\r\n  }\r\n\r\n  if (isObject(data)) {\r\n    if (isArray(data.data)) {\r\n      data = [...data.data]\r\n    } else if (isObject(data.data)) {\r\n      data = flatten({ ...data.data })\r\n    } else if (data.data === null) {\r\n      data = null\r\n    } else {\r\n      data = flatten(data)\r\n    }\r\n\r\n    for (const key in data) {\r\n      data[key] = normalize(data[key])\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  return data\r\n}\r\n","import { createAction, Middleware } from \"@reduxjs/toolkit\"\r\nimport { GraphQLClient } from \"graphql-request\"\r\nimport { normalize } from \"../../utils/utils\"\r\n\r\ninterface QueryVars {\r\n  key: string\r\n  value: string\r\n}\r\n\r\ninterface QueryVarsObj {\r\n  [key: string]: QueryVars\r\n}\r\n\r\ninterface apiPayload {\r\n  url: string\r\n  graphQlQuery?: string\r\n  // method?: string\r\n  data?: string\r\n  onSuccess?: string\r\n  onStart?: string\r\n  onError?: string\r\n}\r\n\r\n\r\nexport const apiCallBegan = createAction<apiPayload>(\"api/CallBegan\")\r\nexport const apiCallSuccess = createAction<any>(\"api/CallSuccess\")\r\nexport const apiCallFailed = createAction<string>(\"api/CallFailed\")\r\n\r\nconst api: Middleware = ({ dispatch }) => (next) => async (action) => {\r\n\r\n  console.log(action.type)\r\n  if (action.type !== apiCallBegan.type) return next(action)\r\n  next(action)\r\n\r\n  const {\r\n    url,\r\n    graphQlQuery,\r\n    data,\r\n    onStart,\r\n    onSuccess,\r\n    onError,\r\n    \r\n  } = action.payload\r\n  if (onStart) dispatch({ type: onStart })\r\n  \r\n  try {\r\n    let response = undefined;\r\n    //used to call webhooks\r\n    if (!graphQlQuery) {\r\n      response = await fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'no-cors', // no-cors, *cors, same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n      });\r\n    \r\n    }\r\n\r\n    if(graphQlQuery){\r\n      const graphQLClient = new GraphQLClient(url, {\r\n        // headers: {\r\n        //   authorization: 'Bearer MY_TOKEN',\r\n        // },\r\n      })\r\n\r\n      response = await graphQLClient.request(graphQlQuery)\r\n    }\r\n\r\n    // General\r\n    // dispatch(apiCallSuccess(response))\r\n    // Specific\r\n    if (onSuccess){\r\n      if(response && graphQlQuery){\r\n        const strapi3datastyle = normalize(response as any)\r\n        dispatch({ type: onSuccess, payload: strapi3datastyle })\r\n      }\r\n\r\n    }\r\n  } catch (error) {\r\n    \r\n    console.log('exception '+error)\r\n    // General\r\n    // dispatch(apiCallFailed(error.message))\r\n    // Specific\r\n    \r\n    if (onError) dispatch({ type: onError, payload: (error as any).message })\r\n  }\r\n}\r\n\r\nexport default api\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { apiCallBegan } from './middleware/api';\r\nimport { AppThunk, RootState } from \"./store\";\r\n\r\n\r\nexport interface CustomOptionEntry {\r\n  optionId: string\r\n  optionSelectionId: string\r\n}\r\ninterface buildState {\r\n  productId: string | undefined\r\n  modelId: string | undefined\r\n  accessoryIds: string[]\r\n  customOptions: CustomOptionEntry[]\r\n}\r\n\r\nconst initialState: buildState = {\r\n  productId: undefined,\r\n  modelId: undefined,\r\n  accessoryIds: [],\r\n  customOptions: [],\r\n}\r\n\r\nexport const buildSlice = createSlice({\r\n  name: \"build\",\r\n  initialState,\r\n  reducers: {\r\n    setCustomOption: (state, action: PayloadAction<CustomOptionEntry>) => {\r\n      //find option and update it, or add it if it is new.\r\n      const idx = state.customOptions.findIndex(\r\n        (el) => el.optionId === action.payload.optionId\r\n      )\r\n\r\n      if (idx !== -1) {\r\n        state.customOptions[idx].optionSelectionId =\r\n          action.payload.optionSelectionId\r\n      } else state.customOptions.push(action.payload)\r\n    },\r\n    addAccessory: (state, action: PayloadAction<string>) => {\r\n      if(state.accessoryIds.includes(action.payload)){\r\n        console.log('Warning: Accessory already in build')\r\n        return\r\n      }\r\n      state.accessoryIds.push(action.payload)\r\n    },\r\n    setProduct: (state, action: PayloadAction<string>) => {\r\n      if (state.productId !== action.payload) {\r\n        state.modelId = undefined\r\n      }\r\n      state.productId = action.payload\r\n    },\r\n    setModel: (state, action: PayloadAction<string>) => {\r\n      if (state.modelId !== action.payload) {\r\n        state.accessoryIds = []\r\n      }\r\n      state.modelId = action.payload\r\n    },\r\n    removeAccessory: (state, action: PayloadAction<string>) => {\r\n      const idx = state.accessoryIds.indexOf(action.payload)\r\n      if (idx > -1) {\r\n        const newState = state.accessoryIds.splice(idx, 1)\r\n        console.log(newState)\r\n      }\r\n    },\r\n    buildPosted: () => {},\r\n  },\r\n})\r\n\r\nexport const postBuild = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery =  `{\r\n    accessoryCategories {\r\n      data{\r\n        id\r\n        attributes{\r\n          name          \r\n          accessories {\r\n            data {\r\n              attributes {\r\n                name\r\n                rrp\r\n                short_description\r\n                description\r\n              }\r\n            }\r\n          }\r\n        }\r\n    }\r\n  }\r\n}`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onSuccess: buildSlice.actions.buildPosted.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const callWebhook = (url:string, data:any): AppThunk => (dispatch) => {\r\n  console.log('Webhook Call Start')\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: url,\r\n      data:data\r\n    })\r\n  )\r\n}\r\n\r\nexport const {\r\n  setCustomOption,\r\n  addAccessory,\r\n  setProduct,\r\n  setModel,\r\n  removeAccessory,\r\n} = buildSlice.actions\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectAccessoryById = (state: RootState, id: string) =>\r\n  state.catalog.accessories.find((acc) => acc.id === \"\"+id)\r\nexport const selectBuildAccessoryIds = (state: RootState) =>\r\n  state.build.accessoryIds\r\nexport const selectBuildProduct = (state: RootState) =>\r\n  state.catalog.products?.find((el) => el.id === \"\"+state.build?.productId)\r\nexport const selectBuildModel = (state: RootState) =>\r\n  selectBuildProduct(state)?.models?.find((el) => el.id === \"\"+state.build.modelId)\r\nexport const selectBuildAccessories = (state: RootState) =>\r\n  state.build.accessoryIds.map((id) =>\r\n    state.catalog.accessories.find((el) => el.id === \"\"+id)\r\n  )\r\nexport const selectBuildIncludedAccessories = (state: RootState) =>{\r\n  console.log(selectBuildModel(state))\r\n  return selectBuildModel(state)?.included_accessories?.map( (acc_id, idx) => \r\n    selectAccessoryById(state, acc_id.id)\r\n  )\r\n}\r\n  \r\nexport const selectBuildSlides = (state: RootState) => \r\n  selectBuildModel(state)?.slideshow_images;\r\nexport const selectBuild = (state: RootState) => {\r\n  return {\r\n    product: selectBuildProduct(state),\r\n    model: selectBuildModel(state),\r\n    accessories: selectBuildAccessories(state),\r\n    \r\n  }\r\n}\r\nexport const selectBuildImage = (state: RootState) => {\r\n  const modelImg = selectBuildModel(state)?.featured_image\r\n  const prodImg = selectBuildProduct(state)?.featured_image\r\n  if (modelImg) {\r\n    return modelImg\r\n  } else {\r\n    return prodImg\r\n  }\r\n}\r\nexport const selectBuildCost = (state: RootState) => {\r\n  const productPrice = selectBuildProduct(state)?.rrp || 0\r\n  const modelPrice = selectBuildModel(state)?.rrp || 0\r\n  const accessoryPrice = selectBuildAccessories(state).reduce(\r\n    (acc, curr) => acc + (curr?.rrp || 0),\r\n    0\r\n  )\r\n  if (modelPrice) {\r\n    return modelPrice + accessoryPrice\r\n  } else if (productPrice) {\r\n    return productPrice\r\n  } else {\r\n    return 0\r\n  }\r\n}\r\n\r\n// give it id of an option picker and it will return\r\n// an object with the selected option from the option picker\r\nexport const selectBuildCustomOption = (id: string) => (state: RootState) => {\r\n  //for some reason the param id is a string... so careful of comparisons..\r\n  const buildOption = state.build.customOptions.find((option) => {\r\n    return option.optionId === id\r\n  })\r\n  const selectedOptionId = buildOption?.optionSelectionId\r\n\r\n  //could have an issue with this, but not with current ui design\r\n  if (state.catalog.customOptionPickersLoading) {\r\n    return undefined\r\n  }\r\n\r\n  const catalogOption = state.catalog.customOptionPickers.find(\r\n    (picker) => picker.id === id\r\n  )\r\n\r\n  return catalogOption?.options.find((option) => option.id === selectedOptionId)\r\n}\r\n\r\n//work out how to return all the options iwth their names\r\n/*[\r\n  {\r\n    name: 'Colour',\r\n    option: {\r\n      id,\r\n      name\r\n    }\r\n  }\r\n]*/\r\n//only returns the selected options\r\nexport const selectBuildCustomOptions = (state: RootState) => {\r\n  const buildOptions = state.catalog.customOptionPickers.map((optionPicker) => {\r\n    return {\r\n      name: optionPicker.option_name,\r\n      selectedOption: selectBuildCustomOption(optionPicker.id)(state),\r\n    }\r\n  })\r\n\r\n  return buildOptions\r\n}\r\n\r\nexport const selectFullBuild = (state: RootState) => {\r\n  \r\n  const buildproduct = selectBuildProduct(state)\r\n  const buildmodel = selectBuildModel(state)\r\n  const buildaccessories = selectBuildAccessories(state)\r\n  const buildimage = selectBuildImage(state)\r\n\r\n  return {\r\n    product: buildproduct,\r\n    model: buildmodel,\r\n    accessories: buildaccessories,\r\n    image: buildimage\r\n  }\r\n}\r\nexport default buildSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { apiCallBegan } from \"./middleware/api\"\r\nimport { AppThunk, RootState } from \"./store\"\r\n\r\ntype ModelOrUndefined = Model | undefined\r\n\r\n//for custom selections eg. pick colours\r\n\r\nexport interface CustomOption {\r\n  id: string\r\n  option_name: string\r\n  option_description?: string\r\n  rrp?: number\r\n  option_image?: Image[]\r\n}\r\nexport interface CustomOptionPicker {\r\n  id: string\r\n  screen_name: string\r\n  option_name: string\r\n  options: CustomOption[]\r\n}\r\n\r\nexport interface Category {\r\n  id: string\r\n  name: string\r\n  icon: {\r\n    url: string\r\n  }\r\n  accessories: Accessory[]\r\n}\r\nexport interface Image {\r\n  url: string\r\n  id: string\r\n  width: number\r\n  height: number\r\n  alternativeText: string\r\n}\r\nexport interface buildItem {\r\n  id: string\r\n  name: string\r\n  short_description: string\r\n  description?: string\r\n  rrp?: number\r\n  featured_image?: Image\r\n  slideshow_images?: Image[]\r\n}\r\n\r\nexport interface Product extends buildItem {\r\n  models: Model[]\r\n}\r\n\r\ninterface Accessory extends buildItem {\r\n  option_for: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n  included_in: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n  accessory_categories: [\r\n    {\r\n      id: string \r\n      icon: {\r\n        url: string\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\ninterface Model extends buildItem {\r\n  included_accessories: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n  optional_accessories: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n}\r\n\r\ninterface catalog {\r\n  products: Product[]\r\n  // models: Model[];\r\n  accessories: Accessory[]\r\n  accessoriesLoading: boolean\r\n  customOptionPickersLoading: boolean\r\n  accessoryCategories: Category[]\r\n  loading: boolean\r\n  customOptionPickers: CustomOptionPicker[]\r\n}\r\n\r\nconst initialState: catalog = {\r\n  loading: false,\r\n  accessoriesLoading: false,\r\n  customOptionPickersLoading: false,\r\n  products: [],\r\n  // models: [],\r\n  accessories: [],\r\n  accessoryCategories: [],\r\n  customOptionPickers: [],\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n  name: \"catalog\",\r\n  initialState,\r\n  reducers: {\r\n    customOptionPickersRequested: (state, action: PayloadAction<string>) => {\r\n      state.customOptionPickersLoading = true\r\n    },\r\n    customOptionPickersReceived: (state, action: PayloadAction<any>) => {\r\n      if (action.payload.model) {\r\n        state.customOptionPickers = action.payload.model.other_options\r\n      }\r\n      state.customOptionPickersLoading = false\r\n    },\r\n    accessoriesRequested: (state, action: PayloadAction<string>) => {\r\n      state.accessoriesLoading = true\r\n    },\r\n    accessoriesReceived: (state, action: PayloadAction<any>) => {\r\n      state.accessoriesLoading = false\r\n      state.accessories = action.payload.accessories\r\n    },\r\n    catalogRequested: (state, action: PayloadAction<string>) => {\r\n      state.loading = true\r\n    },\r\n    catalogReceived: (state, action: PayloadAction<any>) => {\r\n      console.log(action.payload.products)\r\n      state.products = action.payload.products\r\n      state.loading = false\r\n    },\r\n    categoriesRequested: (state, action: PayloadAction<string>) => {\r\n      // state.loading = true;\r\n    },\r\n    categoriesReceived: (state, action: PayloadAction<any>) => {\r\n      state.accessoryCategories = action.payload.accessoryCategories\r\n    },\r\n  },\r\n})\r\n\r\nexport const loadCategories = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    accessoryCategories {\r\n      data {\r\n      id \r\n      attributes {\r\n         name\r\n         accessories {\r\n          data {\r\n          \tid\r\n            attributes {\r\n              name\r\n              description\r\n              short_description\r\n              rrp\r\n              featured_image {\r\n                data{\r\n                  id\r\n                  attributes{\r\n                  \turl\r\n                    alternativeText\r\n                  }\r\n                }\r\n                \r\n              }\r\n              option_for {\r\n                data{\r\n                \tid\r\n                }\r\n                \r\n              }\r\n            }\r\n          }\r\n      }\r\n      }\r\n    }\r\n  }\r\n  }`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.categoriesRequested.type,\r\n      onSuccess: catalogSlice.actions.categoriesReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const loadCustomOptionPickers = (): AppThunk => (dispatch, getState) => {\r\n  const modelId = getState().build.modelId || 0\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n  model(id: \"${modelId}\") {\r\n    other_options{\r\n      id\r\n      screen_name\r\n      option_name\r\n      options {\t\r\n        id\r\n        option_name\r\n        option_description\r\n        rrp\r\n        option_image {\r\n          url\r\n        }\r\n      }\r\n    }  \r\n  }\r\n}`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.customOptionPickersRequested.type,\r\n      onSuccess: catalogSlice.actions.customOptionPickersReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\n\r\n// console.log('transformed')\r\n// console.log(transformResponse(example.data.accessoryCategories as collection));\r\n\r\nexport const loadCatalog = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    products(sort: \"rrp\") {\r\n      data {\r\n        id\r\n        attributes {\r\n          name\r\n          short_description\r\n          description\r\n          rrp\r\n          featured_image {\r\n            data{\r\n              id\r\n              attributes{\r\n                url\r\n                width\r\n                height\r\n              }\r\n            }\r\n          }\r\n          models(sort: \"rrp\") {\r\n            data{\r\n              id\r\n              attributes {\r\n                name\r\n                short_description\r\n                description\r\n                rrp\r\n                included_accessories{\r\n                  data {\r\n                    id\r\n                  }\r\n                }\r\n                slideshow_images{\r\n                  data{\r\n                    id\r\n                    attributes{\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n                featured_image{\r\n                  data {\r\n                    id \r\n                    attributes{\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }    \r\n          }\r\n        }     \r\n      }\r\n    }\r\n  }`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.catalogRequested.type,\r\n      onSuccess: catalogSlice.actions.catalogReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const loadAccessories = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    accessories {\r\n      data {\r\n        id\r\n        attributes{\r\n          name\r\n          short_description\r\n          description\r\n          rrp\r\n          featured_image {\r\n            data{\r\n              attributes{\r\n            \t\turl    \r\n              }\r\n            }\r\n          }\r\n          accessory_categories{\r\n            data{\r\n              id\r\n              attributes{\r\n                name      \r\n              }\r\n            }\r\n          }\r\n          option_for {\r\n            data{\r\n            \tid  \r\n            }\r\n          }\r\n          included_in {\r\n            data {\r\n            \tid  \r\n            }\r\n          }        \r\n      }\r\n    }   \r\n  }\r\n}`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.accessoriesRequested.type,\r\n      onSuccess: catalogSlice.actions.accessoriesReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\n// SELECTORS\r\nexport const selectProducts = (state: RootState) => state.catalog.products\r\nexport const selectCompatibleModels = (state: RootState) =>\r\n  state.catalog.products.find((prod) => \"\"+state.build.productId === prod.id)\r\n    ?.models\r\nexport const selectAccessoryCatById = (catId: string) => (state: RootState) => {\r\n  return state.catalog.accessoryCategories.find((cat) => cat.id === catId)\r\n}\r\nexport const selectIncludedAccessories = (state: RootState) => {\r\n  return state.catalog.accessories.filter((acc) => {\r\n    if (state.build.modelId) {\r\n      const accessory = acc.included_in.find(\r\n        (item) => item.id === state.build.modelId\r\n      )\r\n      return accessory\r\n    } else {\r\n      return false\r\n    }\r\n  })\r\n}\r\n\r\nexport const selectOptionalAccessories = (state: RootState) => {\r\n  return state.catalog.accessories.filter((acc) => {\r\n    if (state.build.modelId) {\r\n      const accessory = acc.option_for.find(\r\n        (item) => item.id === state.build.modelId\r\n      )\r\n      return accessory\r\n    } else {\r\n      return false\r\n    }\r\n  })\r\n}\r\n\r\nexport const selectOptionalAccessoriesInCat = (catId: string) => (\r\n  state: RootState\r\n) => {\r\n  return state.catalog.accessories.filter((acc) => {\r\n    if (state.build.modelId) {\r\n      const isOption = acc.option_for.find(\r\n        (item) => item.id === state.build.modelId\r\n      )\r\n      const isInCat = acc.accessory_categories.find((cat) => cat.id === catId)\r\n\r\n      return isOption && isInCat\r\n    } else {\r\n      return false\r\n    }\r\n  })\r\n}\r\nexport const selectModelById = (id: string) => (state: RootState) => {\r\n  if (!state.catalog.products || state.catalog.products.length === 0) {\r\n    return undefined\r\n  }\r\n  return state.catalog.products.reduce<ModelOrUndefined>((acc, prod) => {\r\n    const model: Model | undefined = prod.models?.find(\r\n      (model) => {\r\n        console.log(typeof model.id, typeof id)\r\n\r\n        return (model.id) === \"\"+id\r\n      }\r\n    )\r\n\r\n    if (model) return model\r\n    else return acc\r\n  }, undefined)\r\n}\r\nexport const selectProductById = (id: string) => (state: RootState) => {\r\n  if (!state.catalog.products || state.catalog.products.length === 0) {\r\n    console.log('no prod found', state.catalog.products)\r\n    return undefined\r\n  }\r\n  // console.log(state.catalog.products)\r\n  // console.log(state.catalog.accessories)\r\n  const product:Product|undefined = state.catalog.products.find((prod) => {\r\n    console.log(typeof prod.id, typeof id)\r\n    return prod.id === id})\r\n  return product\r\n}\r\n\r\nexport const selectAccessoryById = (id: string) => (state: RootState) =>\r\n  state.catalog.accessories.find((accessory) => accessory.id === \"\"+id)\r\nexport const selectCategories = (state: RootState) =>\r\n  state.catalog.accessoryCategories \r\n\r\n//untested\r\n// export const selectCategoriesIncludedAccessoriesOnly = (model_id:string) => (state: RootState) =>{\r\n//   const retArray: Category[] = []\r\n//   state.catalog.accessoryCategories.reduce( (result, cat, idx) => {\r\n//     const accessories = cat.accessories.filter( accessory => {\r\n//       return accessory.included_in.find((e) => e.id===model_id)\r\n//     })\r\n//     cat.accessories=accessories\r\n//     if(accessories.length > 0){\r\n//       result.push(cat);\r\n//     }\r\n//     return result\r\n//   }, retArray)\r\n// }\r\nexport const selectCustomOptionPicker = (id: string) => (state: RootState) =>\r\n  state.catalog.customOptionPickers.find((el) => el.id === id)\r\nexport const selectCustomOptionPickers = (state: RootState) =>\r\n  state.catalog.customOptionPickers\r\nexport const selectCustomOptionPickersLoading = (state: RootState) =>\r\n  state.catalog.customOptionPickersLoading\r\nexport const selectModelSlides = (id:string) => (state: RootState) =>\r\n  selectModelById(id)(state)?.slideshow_images\r\n\r\n\r\nexport default catalogSlice.reducer","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Image } from \"./catalog\";\r\nimport { address } from \"./customer\";\r\nimport { apiCallBegan } from \"./middleware/api\";\r\nimport { AppThunk, RootState } from \"./store\";\r\n\r\nexport interface Company {\r\n  id: string\r\n  name: string\r\n  address?: address\r\n  phone?: string\r\n  email?: string\r\n  company_type: string\r\n  logo_light?: Image\r\n  logo_dark?: Image\r\n  public_email?: string\r\n  website_url?: string\r\n  build_notifications_email?: string\r\n  address_line_1?: string\r\n  address_line_2?: string\r\n  city: string\r\n  country: string\r\n  state: string\r\n  postcode: string\r\n}\r\n\r\ninterface CompanyStore {\r\n    companies: Company[]\r\n    loading: boolean\r\n}\r\nconst initialState: CompanyStore = {\r\n  companies: [],\r\n  loading:false\r\n}\r\n\r\nexport const companySlice = createSlice({\r\n  name: \"company\",\r\n  initialState,\r\n  reducers: {\r\n    companiesReceived: (state, action: PayloadAction<any>) => {\r\n      state.companies = action.payload.dealersAndManufacturers;        \r\n      state.loading = false;   \r\n    },\r\n    companiesRequested: (state) => {\r\n      state.loading = true;        \r\n        \r\n    },\r\n  },\r\n})\r\n\r\n\r\nexport const loadCompanies = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    dealersAndManufacturers {\r\n      data {\r\n        id\r\n        attributes{\r\n          name\r\n          address_line_1\r\n          address_line_2\r\n          phone\r\n          city\r\n          state\r\n          country\r\n          postcode\r\n          email\r\n          website_url\r\n          company_type\r\n          build_notifications_email\r\n        }\r\n      }\r\n    }\r\n  }`\r\n  \r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: companySlice.actions.companiesRequested.type,\r\n      onSuccess: companySlice.actions.companiesReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const {\r\n  companiesReceived,\r\n  companiesRequested\r\n} = companySlice.actions\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\n// export const selectBuilderStep = (state: RootState) => state.ui.builderStep\r\nexport const selectCompanyDetails = (state: RootState) =>{\r\n  return state.companies.companies\r\n}\r\nexport const selectCompanyById = (id: string) => (state: RootState) =>{\r\n  return state.companies.companies.find(company => company.id === id)\r\n}\r\nexport default companySlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\nexport type deliveryDetails = {\r\n  deliveryMethod: string\r\n  dealer: string\r\n}\r\n\r\nexport interface address {\r\n  line1: string\r\n  line2?: string\r\n  city: string\r\n  country: string\r\n  state: string\r\n  postcode: string\r\n}\r\n\r\nexport interface customerDetails {\r\n  firstName?: string\r\n  surname?: string\r\n  phone?: string\r\n  email?: string\r\n  address?: address\r\n  newsletter?: boolean\r\n  deliveryMethod?: string\r\n  preferredDealer?: string\r\n}\r\n\r\nconst initialState: customerDetails = {}\r\n\r\nexport const customerSlice = createSlice({\r\n  name: \"customer\",\r\n  initialState,\r\n  reducers: {\r\n    updateDeliveryDetails: (state, action: PayloadAction<deliveryDetails>) => {\r\n      return { ...state, ...action.payload }\r\n    },\r\n    updateCustomerDetails: (state, action: PayloadAction<customerDetails>) => {\r\n      return { ...state, ...action.payload }\r\n    },\r\n    updateCustomerAddress: (state, action: PayloadAction<address>) => {\r\n      state.address = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  updateDeliveryDetails,\r\n  updateCustomerDetails,\r\n  updateCustomerAddress,\r\n} = customerSlice.actions\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\n// export const selectBuilderStep = (state: RootState) => state.ui.builderStep\r\nexport const selectCustomerDetails= (state: RootState) =>{\r\n  return state.customer\r\n}\r\n\r\nexport default customerSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { apiCallBegan } from \"./middleware/api\"\r\nimport { AppThunk, RootState } from \"./store\"\r\n\r\ninterface settings {\r\n  // settings:\r\n  loading: boolean\r\n  settings: {\r\n    webhook_url: string | undefined\r\n    require_user_contact_details_upfront: string | undefined\r\n    logo_light: {\r\n      url: string | undefined\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState: settings = {\r\n  loading: false,\r\n  settings: {\r\n    webhook_url: undefined,\r\n    require_user_contact_details_upfront: undefined,\r\n    logo_light: {\r\n      url: undefined,\r\n    },\r\n  },\r\n}\r\n\r\nexport const settingsSlice = createSlice({\r\n  name: \"settings\",\r\n  initialState,\r\n  reducers: {\r\n    settingsRequested: (state, action: PayloadAction<string>) => {\r\n      state.loading = true\r\n    },\r\n    settingsReceived: (state, action: PayloadAction<any>) => {\r\n      state.settings = action.payload.settings\r\n      state.loading = false\r\n    },\r\n  },\r\n})\r\n\r\nexport const loadSettings = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    settings: config {\r\n      data{\r\n        attributes{\r\n          webhook_url\r\n      \t\trequire_user_contact_details_upfront\r\n          logo_light {\r\n            data{\r\n              attributes{\r\n                url\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: settingsSlice.actions.settingsRequested.type,\r\n      onSuccess: settingsSlice.actions.settingsReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const selectSettings = (state: RootState) => state.settings.settings\r\n\r\nexport default settingsSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { RootState } from \"./store\"\r\n\r\n\r\nexport const UIScreenTitles = {\r\n  SELECT_PRODUCT: \"Select Product\",\r\n  SELECT_MODEL: \"Select Model\",\r\n  YOUR_DETAILS: \"Your Details\",\r\n  ADD_ACCESSORIES: \"Add Accessories\",\r\n  DELIVERY_DETAILS: \"Delivery Details\",\r\n  YOUR_ADDRESS: \"Your Address\",\r\n  CONFIRMATION: \"Confirmation\",\r\n  PRODUCT_DETAILS: \"Product Details\",\r\n  MODEL_DETAILS: \"Model Details\",\r\n  ADD_ACCESSORIES_LIST: \"Add Accessories List\",\r\n  ACCESSORY_DETAILS: \"Accessory Details\"\r\n}\r\n\r\ninterface uiState {\r\n  builderStep: number,\r\n  uiCurrentScreen: string,\r\n  uiScreenOrder: string[]\r\n  uiDisplayingDetailsForId: string\r\n}\r\n\r\nconst initialState: uiState = {\r\n  builderStep: 0,\r\n  uiCurrentScreen: UIScreenTitles.SELECT_PRODUCT,\r\n  uiScreenOrder: [\r\n    UIScreenTitles.SELECT_PRODUCT,\r\n    UIScreenTitles.SELECT_MODEL,\r\n    UIScreenTitles.ADD_ACCESSORIES,\r\n    UIScreenTitles.YOUR_DETAILS,\r\n    UIScreenTitles.DELIVERY_DETAILS,\r\n    UIScreenTitles.YOUR_ADDRESS,\r\n    UIScreenTitles.CONFIRMATION\r\n  ],\r\n  uiDisplayingDetailsForId: \"0\"\r\n}\r\n\r\nexport const uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState,\r\n  reducers: {\r\n    nextBuilderStep: (state) => {\r\n      // if(state.uiCurrentScreen === UIScreenTitles.YOUR_DETAILS){\r\n      //   dispatch(callWebhook('asdf', build))\r\n      // }\r\n      if(state.builderStep < state.uiScreenOrder.length-1){\r\n        state.builderStep++\r\n        state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n      }\r\n    },\r\n    prevBuilderStep: (state) => {\r\n      if (state.builderStep > 0) {\r\n        state.builderStep--\r\n        state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n      }\r\n    },\r\n    setBuilderStep: (state, action: PayloadAction<number>) => {\r\n      state.builderStep = action.payload\r\n      state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n    },\r\n    showModelDetailsScreen: (state, action: PayloadAction<string>) => {\r\n      state.uiCurrentScreen = UIScreenTitles.MODEL_DETAILS\r\n      state.uiDisplayingDetailsForId = action.payload\r\n    },\r\n    showProductDetailsScreen: (state, action: PayloadAction<string>) => {\r\n      state.uiCurrentScreen = UIScreenTitles.PRODUCT_DETAILS\r\n      state.uiDisplayingDetailsForId = action.payload\r\n    },\r\n    closeProductDetailsScreen: (state) => {\r\n      state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n    },\r\n    closeModelDetailsScreen: (state) => {\r\n      state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n    },\r\n    openSelectAccessoriesScreen: (state) => {\r\n      state.uiCurrentScreen = UIScreenTitles.ADD_ACCESSORIES_LIST\r\n    },\r\n    closeSelectAccessoriesScreen: (state) => {\r\n      state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n    },   \r\n    showAccessoryDetailsScreen: (state, action: PayloadAction<string>) => {\r\n      state.uiCurrentScreen = UIScreenTitles.ACCESSORY_DETAILS\r\n      state.uiDisplayingDetailsForId = action.payload\r\n    },\r\n    closeAccessoryDetailsScreen: (state) => {\r\n      state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n    },\r\n    \r\n  },\r\n})\r\n\r\nexport const {\r\n  nextBuilderStep,\r\n  prevBuilderStep,\r\n  setBuilderStep,\r\n  showModelDetailsScreen,\r\n  showProductDetailsScreen,\r\n  closeModelDetailsScreen,\r\n  closeProductDetailsScreen,\r\n  openSelectAccessoriesScreen,\r\n  closeSelectAccessoriesScreen,\r\n  showAccessoryDetailsScreen,\r\n  closeAccessoryDetailsScreen\r\n} = uiSlice.actions\r\n\r\nexport const selectCurrentStep = (state: RootState) => state.ui.builderStep\r\nexport const selectCurrentUiScreen = (state: RootState) => state.ui.uiCurrentScreen\r\nexport const selectDisplayedId = (state:RootState) => state.ui.uiDisplayingDetailsForId\r\nexport const selectScreenOrder = (state:RootState) => state.ui.uiScreenOrder\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\n// export const selectBuilderStep = (state: RootState) => state.ui.builderStep;\r\n\r\nexport default uiSlice.reducer\r\n","import {\r\n  Action,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  ThunkAction\r\n} from \"@reduxjs/toolkit\"\r\nimport buildReducer from \"./build\"\r\nimport catalogReducer, {\r\n  loadAccessories,\r\n  loadCatalog,\r\n  loadCategories\r\n} from \"./catalog\"\r\nimport companiesReducer, { loadCompanies } from \"./companies\"\r\nimport customerReducer from \"./customer\"\r\nimport api from \"./middleware/api\"\r\nimport settingsReducer from \"./settings\"\r\nimport uiReducer from \"./ui\"\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    catalog: catalogReducer,\r\n    build: buildReducer,\r\n    ui: uiReducer,\r\n    settings: settingsReducer,\r\n    customer: customerReducer,\r\n    companies: companiesReducer\r\n  },\r\n  middleware: [...getDefaultMiddleware(), api],\r\n})\r\n\r\n//cast to allow for dispatching thunkactions\r\nstore.dispatch<any>(loadCatalog())\r\nstore.dispatch<any>(loadAccessories())\r\nstore.dispatch<any>(loadCompanies())\r\nstore.dispatch<any>(loadCategories())\r\n// store.dispatch<any>(loadSettings())\r\n// store.dispatch<any>(loadCustomOptionPickers(1))\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectAccessoryById } from \"../store/catalog\"\r\nimport \"./AccessoryDetailsSidebar.css\"\r\n\r\ninterface AccessoryDetailsSidebarProps {\r\n  id: string\r\n}\r\nexport default function AccessoryDetailsSidebar(props: AccessoryDetailsSidebarProps) {\r\n  // const dispatch = useDispatch();  \r\n  const accessory = useSelector(selectAccessoryById(props.id))\r\n  return (\r\n    <div className=\"accessory-details-sidebar\">\r\n      {accessory?.featured_image?.url && <img className=\"accessory-detail-image\" src={\"\" + process.env.REACT_APP_ASSETS_URL + accessory?.featured_image?.url} alt=\"\"/>}\r\n      <h3>{accessory?.name}</h3>\r\n      {accessory?.rrp && <h5>${accessory?.rrp}</h5>}\r\n      <p>{accessory?.description}</p>\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\";\r\nimport React, { useContext, useRef } from \"react\";\r\nimport { VscChevronDown } from \"react-icons/vsc\";\r\nimport \"./Accordion.css\";\r\n\r\ninterface AccordionProps  {\r\n    children:React.ReactNode\r\n}\r\ninterface AccordionItemProps extends React.HTMLAttributes<HTMLElement> {\r\n    title:string\r\n    children:React.ReactNode\r\n    index?: number\r\n    showCount?: boolean\r\n}\r\ninterface AccordionContext {\r\n    openAccordionItem: number,\r\n    setOpenAccordionItem: React.Dispatch<React.SetStateAction<number>> | undefined\r\n}\r\n\r\nconst AccordionContext = React.createContext<AccordionContext>({\r\n  openAccordionItem: 0,\r\n  setOpenAccordionItem: undefined\r\n})\r\n\r\nexport default function Accordion(props:AccordionProps) {\r\n  const [openAccordionItem, setOpenAccordionItem] = React.useState(0)\r\n  const children = React.Children.map(props.children, (child,idx) => {\r\n    if (React.isValidElement(child)) {\r\n      return React.cloneElement(child, { index: idx });\r\n    }\r\n  })\r\n  return (\r\n    <AccordionContext.Provider value={{openAccordionItem, setOpenAccordionItem}}>\r\n      <div className=\"sz-accordion\">\r\n        {children}\r\n      </div>\r\n    </AccordionContext.Provider>\r\n  )\r\n}\r\n\r\nexport function AccordionItem(props:AccordionItemProps){\r\n  const contentEl = useRef<HTMLDivElement>(null);\r\n  const {openAccordionItem, setOpenAccordionItem} = useContext(AccordionContext)\r\n  const isOpen = props.index === openAccordionItem\r\n\r\n  return (\r\n    <div {...props} className={cx(\"accordion-item\", {open: isOpen})}>\r\n      <div className=\"accordion-item-header\" onClick={() => setOpenAccordionItem && setOpenAccordionItem(isOpen ? -1 : (props.index || 0))}>\r\n        <h3 className=\"accordion-item-title\">{props.title}{props.showCount? ' (' + React.Children.count(props.children) + ')': ''}</h3>\r\n        <div className=\"svg-icon-container\">\r\n          <VscChevronDown />\r\n        </div>\r\n      </div>\r\n      <div className=\"accordion-content-wrapper\" style={\r\n        isOpen\r\n          ? { maxHeight: contentEl?.current?.scrollHeight }\r\n          : { maxHeight: \"0px\" }\r\n      }>\r\n        <div className=\"accordion-item-content\" ref={contentEl}>\r\n          {props.children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import cx from \"classnames\";\r\nimport React, { MouseEventHandler } from \"react\";\r\nimport { VscAdd, VscCheck, VscChevronRight, VscRemove } from \"react-icons/vsc\";\r\nimport { truncate } from \"../utils/utils\";\r\nimport \"./MiniCard.css\";\r\n\r\ninterface MiniCardProps {\r\n    image: string | undefined,\r\n    onDetailsClick: MouseEventHandler<HTMLDivElement>,\r\n    onAddClick: MouseEventHandler<HTMLDivElement>,\r\n    onRemoveClick: MouseEventHandler<HTMLDivElement>,\r\n    title: string,\r\n    description?: string,\r\n    isAdded: boolean,\r\n    showChevron?: boolean | undefined\r\n    showAdd?: boolean | undefined\r\n    compact?: boolean | undefined\r\n} \r\nexport default function MiniCard (props:MiniCardProps){\r\n  console.log(props.compact)\r\n  const AddIcon = props.isAdded ?\r\n    <span className={cx(\"minicard-button-icon minicard-button-icon-added\")}  onClick={props.onRemoveClick}>\r\n      <span className=\"minicard-button-icon-remove\">\r\n        <VscRemove />\r\n      </span>\r\n      <span className=\"minicard-button-icon-check\">\r\n        <VscCheck />\r\n      </span>\r\n    </span> \r\n    :\r\n    <span className=\"minicard-button-icon minicard-button-icon-add\" onClick={props.onAddClick}>\r\n      <VscAdd />\r\n    </span> \r\n\r\n  return (\r\n    <div className={cx(\"minicard minicard-add-button-wrapper\", {compact: props.compact})} >\r\n      <div className=\"minicard-add-button\" >\r\n        {props.image &&\r\n        <div className=\"minicard-button-thumb\" onClick={props.onDetailsClick}>\r\n          <img className=\"minicard-thumb\" src={\"\" + process.env.REACT_APP_ASSETS_URL + props.image} alt=\"\" />\r\n        </div>}\r\n        <div className=\"minicard-button-info-wrapper\">\r\n          <div className=\"minicard-button-label\" title={props.title} onClick={props.onDetailsClick}>\r\n            <span className=\"minicard-button-title\">{truncate(props.title, 64)}</span>\r\n            {props.description && <span className=\"minicard-button-subtitle\">{props.description}</span>}\r\n          </div>\r\n          {props.showAdd && AddIcon}\r\n          {props.showChevron && <span className=\"minicard-button-icon minicard-button-icon-more-info\" onClick={props.onDetailsClick}>\r\n            <VscChevronRight />\r\n          </span>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import cx from \"classnames\";\r\nimport React from \"react\";\r\nimport { VscAdd } from \"react-icons/vsc\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addAccessory, removeAccessory, selectBuildAccessories, selectBuildIncludedAccessories } from \"../store/build\";\r\nimport { openSelectAccessoriesScreen } from \"../store/ui\";\r\nimport { formatCurrency } from \"../utils/utils\";\r\nimport \"./AccessoriesList.css\";\r\nimport Accordion, { AccordionItem } from \"./Accordion\";\r\nimport MiniCard from \"./MiniCard\";\r\n\r\ninterface AccessoriesListProps {\r\n  onDetailsClick: (id: string) => void,\r\n}\r\n\r\nexport default function BuildAccessoriesList(props:AccessoriesListProps) {\r\n\r\n  // const cats = useSelector(selectCategories)\r\n  const buildAccessories = useSelector(selectBuildAccessories)\r\n  const includedAccessories = useSelector(selectBuildIncludedAccessories)\r\n  const dispatch = useDispatch()\r\n\r\n  const optionalAccessoriesList = buildAccessories.map( accessory => {\r\n    return (\r\n      accessory && \r\n      <MiniCard \r\n        key={accessory.id} \r\n        image={accessory.featured_image && process.env.REACT_APP_ASSETS_URL + accessory.featured_image.url}\r\n        onDetailsClick={() => props.onDetailsClick(accessory.id)}\r\n        onAddClick={() => dispatch(addAccessory(accessory.id))}\r\n        onRemoveClick={() => dispatch(removeAccessory(accessory.id))}\r\n        title={accessory.name}\r\n        description={formatCurrency(accessory.rrp || 0)}\r\n        isAdded={true}\r\n        showAdd={true}\r\n      />)\r\n  })\r\n\r\n  const includedAccessoriesList = includedAccessories?.map( accessory => {\r\n    return (\r\n      accessory && \r\n      <MiniCard \r\n        key={accessory.id} \r\n        image={accessory.featured_image && process.env.REACT_APP_ASSETS_URL + accessory.featured_image.url}\r\n        onDetailsClick={() => props.onDetailsClick(accessory.id)}\r\n        onAddClick={() => dispatch(addAccessory(accessory.id))}\r\n        onRemoveClick={() => dispatch(removeAccessory(accessory.id))}\r\n        title={accessory.name}\r\n        description={(accessory.rrp && accessory.rrp !== 0) ? formatCurrency(accessory.rrp): undefined}\r\n        isAdded={true}\r\n        compact={true}\r\n      />)\r\n  })\r\n\r\n  \r\n  return (\r\n    \r\n    <div className={cx(\"accessories-accordion-container\")} >\r\n      <div className=\"accessories-sidebar-header\">\r\n        <h3>Your Accessories</h3>\r\n        <span className=\"weak-label\">Add accessories to create your perfect product</span>\r\n      </div>\r\n      <Accordion>\r\n        <AccordionItem title={\"Optional Accessories (\" + optionalAccessoriesList?.length + \")\"}>\r\n          <button className={\"primary-button accessory-add-new \"} onClick={()=>dispatch(openSelectAccessoriesScreen())}>\r\n            <VscAdd /> Add Accessories\r\n          </button>\r\n\r\n          {optionalAccessoriesList}\r\n        </AccordionItem>\r\n        <AccordionItem title={\"Included Accessories (\" + includedAccessoriesList?.length + \")\"}>\r\n          {includedAccessoriesList}\r\n        </AccordionItem>\r\n      </Accordion>\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\";\r\nimport React, { useState } from \"react\";\r\nimport { VscArrowLeft } from \"react-icons/vsc\";\r\nimport { useSelector } from \"react-redux\";\r\nimport 'swiper/swiper-bundle.min.css';\r\nimport 'swiper/swiper.min.css';\r\nimport { selectBuildImage } from \"../store/build\";\r\nimport AccessoryDetailsSidebar from \"./AcccessoryDetailsSidebar\";\r\nimport \"./AccessoriesPicker.css\";\r\nimport BuildAccessoriesList from \"./BuildAccessoriesList\";\r\n\r\nexport default function AccessoriesPicker() {\r\n\r\n  const image = useSelector(selectBuildImage)\r\n  const [showDetails, setShowDetails] = useState(false)\r\n  const [showingAccessoryId, setshowingAccessoryId] = useState(\"1\")\r\n  // const dispatch = useDispatch()\r\n  // const slides = useSelector(selectBuildSlides)\r\n  const showAccessory = (accessoryId:string) => {\r\n    console.log('showing accessory ' + accessoryId)\r\n    setShowDetails(true)\r\n    setshowingAccessoryId(accessoryId)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"accessories-section\">\r\n      <div className=\"accessories-section-inner\">\r\n\r\n        <div className=\"model-image-container\">\r\n          {/* <Swiper\r\n            spaceBetween={0}\r\n            slidesPerView={1}\r\n            onSlideChange={() => console.log('slide change')}\r\n            onSwiper={(swiper) => console.log(swiper)}\r\n          >\r\n            \r\n            {slides?.map((slide, idx)=> <SwiperSlide key={idx}><img src={slide.url} alt=\"\" /></SwiperSlide>)}\r\n\r\n          </Swiper> */}\r\n          <img src={\"\" + process.env.REACT_APP_ASSETS_URL + image?.url} alt=\"\" />\r\n        </div>\r\n        <div className=\"sidebar accessories-sidebar\">\r\n          <div className={cx(\"sidebar-menu-1\", {active: !showDetails})} >\r\n            <BuildAccessoriesList onDetailsClick={(id:string) => showAccessory(id) } />\r\n          </div>\r\n          {/* {accessoriesMarkup} */}\r\n          <div className={cx(\"sidebar-menu-2\", {active: showDetails})}>\r\n            <div style={{cursor:\"pointer\"}} onClick={() => setShowDetails(false)}><VscArrowLeft /> Back</div>\r\n            <AccessoryDetailsSidebar id={showingAccessoryId}></AccessoryDetailsSidebar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>  )\r\n}\r\n","import cx from \"classnames\";\r\nimport React from \"react\";\r\nimport { VscArrowRight } from \"react-icons/vsc\";\r\n\r\ninterface FooterNavProps {\r\n    onNextClick: ()=>void,\r\n    onPrevClick: ()=>void,\r\n    showPrev: boolean,\r\n    showNext: boolean,\r\n    prevEnabled: boolean,\r\n    nextEnabled: boolean,\r\n    prevLabel: string,\r\n    nextLabel: string\r\n}\r\nexport default function FooterNav(props:FooterNavProps){\r\n\r\n  return (\r\n    <footer className=\"wizard-footer\">\r\n      {props.showPrev &&\r\n      <button className={cx(\"back-button  secondary-button\", { disabled: !props.prevEnabled })}\r\n        onClick={props.onPrevClick}\r\n      >{props.prevLabel}</button>\r\n      }\r\n      {props.showNext &&\r\n    <button\r\n      className={cx(\"primary-button \", { disabled: !props.nextEnabled })}\r\n      onClick={props.onNextClick}>{props.nextLabel} <VscArrowRight/></button>\r\n\r\n      }\r\n    </footer>\r\n  );\r\n}\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { addAccessory } from \"../store/build\"\r\nimport { selectAccessoryById } from \"../store/catalog\"\r\nimport { openSelectAccessoriesScreen, selectDisplayedId } from \"../store/ui\"\r\nimport \"./AccessoryDetails.css\"\r\nimport \"./App.css\"\r\nimport FooterNav from \"./FooterNav\"\r\n\r\nexport default function AccessoryDetails() {\r\n  const dispatch = useDispatch()\r\n\r\n  const id = useSelector(selectDisplayedId)\r\n  \r\n  const accessory = useSelector(selectAccessoryById(id))\r\n  console.log(\"acc \", accessory)\r\n  return (\r\n    <>\r\n      <div className=\"screen-inner-container accessory-details\">\r\n        <div className=\"left-col\">\r\n          {accessory && <img src={accessory.featured_image && process.env.REACT_APP_ASSETS_URL + accessory.featured_image.url} alt=\"\" />}\r\n        </div>\r\n        <div className=\"right-col\">\r\n          <h3>{accessory?.name}</h3>\r\n          {accessory?.rrp && <h5>${accessory?.rrp}</h5>}\r\n          <p>{accessory?.description}</p>\r\n\r\n        </div>\r\n      </div>\r\n      <FooterNav \r\n        onNextClick={() => {\r\n          if(accessory)\r\n            dispatch(addAccessory(accessory.id));\r\n            \r\n          dispatch(openSelectAccessoriesScreen())\r\n        }}\r\n        onPrevClick={() => {dispatch(openSelectAccessoriesScreen()) }}\r\n        showNext={true}\r\n        showPrev={true}\r\n        prevEnabled={true}\r\n        nextEnabled={true} \r\n        nextLabel={\"Add to Build \"}\r\n        prevLabel=\"Back\" />\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { address, updateCustomerAddress } from \"../store/customer\"\r\nimport \"./form.css\"\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function AddressForm(props: props) {\r\n  const dispatch = useDispatch()\r\n  const { register, getValues, triggerValidation } = useForm<address>()\r\n  \r\n  //todo - fix\r\n  useEffect(() => {\r\n    props.onValidChange(false)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleChange = async () => {\r\n    dispatch(updateCustomerAddress(getValues()))\r\n    const result = await triggerValidation()\r\n    props.onValidChange(result)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onChange={handleChange} className=\"szForm\">\r\n        <fieldset>\r\n          <legend>Enter your address</legend>\r\n          <label htmlFor=\"address-line-1\">\r\n            <span className=\"label-text\">Line 1</span>\r\n            <input\r\n              id=\"address-line-1\"\r\n              name=\"address-line-1\"\r\n              placeholder=\"11 Smith St\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"address-line-2\">\r\n            <span className=\"label-text\">Line 2</span>\r\n            <input\r\n              id=\"address-line-2\"\r\n              name=\"address-line-2\"\r\n              placeholder=\"\"\r\n              ref={register}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"city\">\r\n            <span className=\"label-text\">City</span>\r\n            <input\r\n              id=\"city\"\r\n              name=\"city\"\r\n              placeholder=\"Melbourne\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"country\">\r\n            <span className=\"label-text\">Country</span>\r\n            <input\r\n              id=\"country\"\r\n              name=\"country\"\r\n              defaultValue=\"Australia\"\r\n              placeholder=\"Australia\"\r\n              ref={register({\r\n                required: true,\r\n              })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"state\">\r\n            <span className=\"label-text\">State</span>\r\n            <input\r\n              id=\"state \"\r\n              name=\"state\"\r\n              placeholder=\"VIC\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n        </fieldset>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { FiShoppingBag } from \"react-icons/fi\"\r\nimport { useSelector } from \"react-redux\"\r\nimport {\r\n  selectBuildAccessories,\r\n  selectBuildCost,\r\n  selectBuildCustomOptions, selectBuildModel,\r\n  selectBuildProduct\r\n} from \"../store/build\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./BuildStatusBox.css\"\r\n\r\n\r\nexport default function BuildStatusBox() {\r\n  const product = useSelector(selectBuildProduct)\r\n  const model = useSelector(selectBuildModel)\r\n  const accessories = useSelector(selectBuildAccessories)\r\n  const selectedOptions = useSelector(selectBuildCustomOptions)\r\n\r\n  const customOptionsMarkup = selectedOptions.map((option) => (\r\n    <div key={option.name}>\r\n      <span>{option.name}</span>\r\n      <span>{option.selectedOption?.option_name}</span>\r\n    </div>\r\n  ))\r\n\r\n  const productTitle = model?.name ?  model?.name : product?.name\r\n\r\n  return (\r\n    <div className=\"build-box\">\r\n      <div className=\"build-box-left\">\r\n        <div className=\"build-box-icon\">\r\n          <FiShoppingBag />\r\n        </div>\r\n        <div className=\"build-box-text\">\r\n          <h3 className=\"build-box-title\">{productTitle ? productTitle : \"Select Product\"}</h3>\r\n          <span className=\"build-box-accessories\">{accessories.length} Accessories</span>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"build-box-price\">\r\n        <span>{formatCurrency(useSelector(selectBuildCost))}</span>\r\n      </div>\r\n      {customOptionsMarkup}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { customerDetails, updateCustomerDetails } from \"../store/customer\"\r\nimport \"./form.css\"\r\n\r\ntype handlerfunc = () => void;\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function ContactDetailsForm(props: props) {\r\n  const dispatch = useDispatch()\r\n  const { register, errors, getValues, triggerValidation } = useForm<\r\n    customerDetails\r\n  >({\r\n    mode: \"onChange\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    props.onValidChange(false)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  \r\n  const handleChange = async () => {\r\n    dispatch(updateCustomerDetails(getValues()))\r\n    const result = await triggerValidation()\r\n    props.onValidChange(result)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onChange={handleChange} className=\"szForm\">\r\n        <fieldset>\r\n          <legend>Enter your contact details</legend>\r\n          <label htmlFor=\"firstName\">\r\n            <span className=\"label-text\">First Name</span>\r\n            <input\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              placeholder=\"John\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"surname\">\r\n            <span className=\"label-text\">Surname</span>\r\n            <input\r\n              id=\"surname\"\r\n              name=\"surname\"\r\n              placeholder=\"Smith\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"phone\">\r\n            <span className=\"label-text\">Phone</span>\r\n            <input\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              placeholder=\"0400 000 000\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"email\">\r\n            <span className=\"label-text\">Email</span>\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"your@email.com\"\r\n              ref={register({\r\n                required: true,\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n            />\r\n          </label>\r\n          {errors.email && <span>{errors.email.message}</span>}\r\n\r\n          <label htmlFor=\"postcode\">\r\n            <span className=\"label-text\">Postcode</span>\r\n            <input\r\n              id=\"postcode \"\r\n              name=\"postcode\"\r\n              placeholder=\"3000\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"newsletter\" className=\"no-bg\">\r\n            <input\r\n              id=\"newsletter\"\r\n              type=\"checkbox\"\r\n              name=\"newsletter\"\r\n              defaultChecked={true}\r\n              ref={register}\r\n            />\r\n            Sign up for special offers and promotions\r\n          </label>\r\n        </fieldset>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectCompanyById, selectCompanyDetails } from \"../store/companies\"\r\nimport { deliveryDetails, updateDeliveryDetails } from \"../store/customer\"\r\nimport \"./form.css\"\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function DeliveryDetailsForm(props: props) {\r\n  const dispatch = useDispatch()\r\n  const companies = useSelector(selectCompanyDetails);\r\n  \r\n  console.log(companies)\r\n  const { register, triggerValidation, getValues } = useForm<deliveryDetails>({\r\n    mode: \"onChange\",\r\n    reValidateMode: \"onChange\",\r\n  })\r\n  const [selectedCompanyId, setselectedCompanyId] = useState(companies[0].id)\r\n  const selectedCompany = useSelector(selectCompanyById(selectedCompanyId))\r\n\r\n  useEffect(() => {\r\n    props.onValidChange(false)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n\r\n  const handleChange = async () => {\r\n    dispatch(updateDeliveryDetails(getValues()))\r\n    setselectedCompanyId(getValues().dealer)\r\n    const result = await triggerValidation()\r\n    props.onValidChange(result)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onChange={handleChange} className=\"szForm\">\r\n        <fieldset>\r\n          <legend>Delivery Method</legend>\r\n          <label htmlFor=\"delivery\" className=\"no-bg radio\">\r\n            <input\r\n              id=\"delivery\"\r\n              name=\"deliverymethod\"\r\n              type=\"radio\"\r\n              value=\"delivery\"\r\n              ref={register}\r\n            />\r\n            <span className=\"label-text\">Delivery</span>\r\n          </label>\r\n\r\n          <label htmlFor=\"pickup\" className=\"no-bg radio\">\r\n            <input\r\n              id=\"pickup\"\r\n              name=\"deliverymethod\"\r\n              type=\"radio\"\r\n              value=\"pickup\"\r\n              ref={register({\r\n                validate: () => {\r\n                  return getValues().deliveryMethod !== \"\"\r\n                },\r\n              })}\r\n            />\r\n            <span className=\"label-text\">Pick Up</span>\r\n          </label>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>Choose your dealer</legend>\r\n          <select name=\"dealer\" id=\"dealer\" defaultValue={companies[0].id} ref={register}>\r\n            {companies.map((company, idx) => <option value={company?.id} key={idx}>{company?.state} - {company?.name} - {company?.city}</option>)}\r\n          </select>\r\n        </fieldset>\r\n      </form>\r\n      {selectedCompany && <div className=\"dealer-details-display\">\r\n        <h3 className=\"dealer-name\">{selectedCompany?.name}</h3>\r\n        <span className=\"dealer-phone\">{selectedCompany?.address_line_1}, </span>\r\n        {selectedCompany?.address_line_2 && <span className=\"dealer-address2\">{selectedCompany?.address_line_2}</span>}\r\n        <span className=\"dealer-city\">{selectedCompany?.city}</span><br/>\r\n        <span className=\"dealer-state\">{selectedCompany?.state}</span><br/>\r\n        <span className=\"dealer-country\">{selectedCompany?.country}</span><br/>\r\n        {selectedCompany?.phone && <span className=\"dealer-phone\">Phone: {selectedCompany?.phone}<br/></span>}\r\n        <span className=\"dealer-website\"><a href={selectedCompany?.website_url} target=\"_blank\" rel='noopener noreferrer' >Visit Website</a></span>\r\n      </div>}\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectModelById } from \"../store/catalog\"\r\nimport { closeModelDetailsScreen, nextBuilderStep, selectDisplayedId } from \"../store/ui\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./App.css\"\r\nimport FooterNav from \"./FooterNav\"\r\nimport \"./ModelDetails.css\"\r\n\r\nexport default function ModelDetails() {\r\n  \r\n  const id = useSelector(selectDisplayedId)\r\n  const model = useSelector(selectModelById(id))\r\n  const dispatch = useDispatch()\r\n  console.log(id)\r\n  return (\r\n    <>\r\n      <div className=\"model-details-section\">\r\n        <div className=\"model-image-container\">\r\n          {model && <img src={\"\" + process.env.REACT_APP_ASSETS_URL + model?.featured_image?.url} alt=\"\" />}\r\n        </div> \r\n        <div className=\"model-details\">\r\n          <h3>{model && model?.name}</h3>\r\n          <h5 className=\"model-price\">{model?.rrp && formatCurrency(model.rrp)}</h5>\r\n          <p>{model && model.description}</p>\r\n        </div>\r\n      </div>\r\n      <FooterNav \r\n        onNextClick={() => {dispatch(nextBuilderStep()); }}\r\n        onPrevClick={() => {dispatch(closeModelDetailsScreen()); }}\r\n        showNext={true}\r\n        showPrev={true}\r\n        prevEnabled={true}\r\n        nextEnabled={true} \r\n        nextLabel={\"Select \" + model?.name + \" Model\"}\r\n        prevLabel=\"Back\" />\r\n      \r\n    </>\r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { callWebhook, selectBuild, selectBuildModel, setModel } from \"../store/build\"\r\nimport { selectCompatibleModels } from \"../store/catalog\"\r\nimport { selectSettings } from \"../store/settings\"\r\nimport { showModelDetailsScreen } from \"../store/ui\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./ModelPicker.css\"\r\n\r\n\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function ModelPicker(props: props) {\r\n  const dispatch = useDispatch()\r\n\r\n  const models = useSelector(selectCompatibleModels)\r\n  const model = useSelector(selectBuildModel)\r\n  const build = useSelector(selectBuild)\r\n  const settings = useSelector(selectSettings)\r\n\r\n\r\n  //if one of these models is selected, all progress\r\n  useEffect(() => {\r\n    if (models?.find((prod) => prod.id === model?.id)) {\r\n      props.onValidChange(true)\r\n    } else {\r\n      props.onValidChange(false)\r\n    }\r\n  })\r\n  let buildItemsMarkup\r\n  \r\n  \r\n  if (models) {\r\n    buildItemsMarkup = models.map((x) => {\r\n      return (\r\n        <div\r\n          className={cx(\"product\", { selected: model?.id === x.id })}\r\n          key={x.id}\r\n          onClick={() => {\r\n            dispatch(setModel(x.id))\r\n            // any click make this valid. if validation is more complex,\r\n            // you can add some state if nececssary\r\n            console.log('called')\r\n            props.onValidChange(true)\r\n            if( settings?.webhook_url){\r\n              dispatch(callWebhook(settings?.webhook_url, build))\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"product-thumb-wrapper\">\r\n            {x.featured_image?.url && (\r\n              <img\r\n                className=\"product-thumb\"\r\n                src={process.env.REACT_APP_ASSETS_URL + x.featured_image?.url}\r\n                alt={x.name}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"select-product-details\">\r\n            <h3 className=\"product-title\">{x.name}</h3>\r\n            <p className=\"product-short_description\">{x.short_description}</p>\r\n            <div className=\"product-bottom-line\">\r\n              {x.rrp && <h4 className=\"product-price\">Starts at {formatCurrency(x.rrp)}</h4>}\r\n              <button className=\"secondary-link text-button\" onClick={()=>dispatch(showModelDetailsScreen(x.id))}>View Specs</button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"product-listing\">\r\n      {buildItemsMarkup}\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectProductById } from \"../store/catalog\"\r\nimport { closeProductDetailsScreen, nextBuilderStep, selectDisplayedId } from \"../store/ui\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport FooterNav from \"./FooterNav\"\r\nimport \"./ProductDetails.css\"\r\n\r\nexport default function ProductDetails() {\r\n\r\n  const id = useSelector(selectDisplayedId)\r\n  const product = useSelector(selectProductById(id))\r\n  const dispatch = useDispatch()\r\n\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"product-details-section\">\r\n        <div className=\"model-image-container\">\r\n          {product && <img src={\"\" + process.env.REACT_APP_ASSETS_URL + product?.featured_image?.url} alt=\"\" />}\r\n        </div>  \r\n        <div className=\"product-details\">\r\n          <h3>{product && product?.name}</h3>\r\n          <h5 className=\"product-price\">{product?.rrp && formatCurrency(product.rrp)}</h5>\r\n          <ReactMarkdown>{product?.description +\"\"}</ReactMarkdown>\r\n        </div>\r\n      </div>\r\n      <FooterNav \r\n        onNextClick={() => {dispatch(nextBuilderStep()); }}\r\n        onPrevClick={() => {dispatch(closeProductDetailsScreen()); }}\r\n        showNext={true}\r\n        showPrev={true}\r\n        prevEnabled={true}\r\n        nextEnabled={true} \r\n        nextLabel={\"Select \" + product?.name + \" Model\"}\r\n        prevLabel=\"Back\" />\r\n      \r\n    </>\r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectBuildProduct, setProduct } from \"../store/build\"\r\nimport { selectProducts } from \"../store/catalog\"\r\nimport { showProductDetailsScreen } from \"../store/ui\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./ProductPicker.css\"\r\n\r\n\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function ProductPicker(props: props) {\r\n  const dispatch = useDispatch()\r\n  const products = useSelector(selectProducts)\r\n  const product = useSelector(selectBuildProduct)\r\n\r\n  //if one of these products is selected, allow progress\r\n  useEffect(() => {\r\n    if (products.find((prod) => prod.id === product?.id)) {\r\n      props.onValidChange(true)\r\n    } else {\r\n      props.onValidChange(false)\r\n    }\r\n  })\r\n\r\n  // const cols = products.length >= 3 ? '1fr 1fr 1fr' : '1fr 1fr';\r\n  // const productStyle = products.length < 3 ? {\r\n  //   height: '500px'\r\n  // } : {};style={{gridTemplateColumns: cols}}\r\n\r\n  let buildItemsMarkup\r\n  if (products) {\r\n    buildItemsMarkup = products.map((x) => {\r\n      return (\r\n        <div\r\n          className={cx(\"product\", { selected: product?.id === x.id }) }\r\n          key={x.id}\r\n          // style={productStyle}\r\n          onClick={() => {\r\n            dispatch(setProduct(x.id))\r\n          }}\r\n        >\r\n          <div className=\"product-thumb-wrapper\">\r\n            {x.featured_image?.url && (\r\n              <img\r\n                className=\"product-thumb\"\r\n                alt={x.name}\r\n                src={x.featured_image?.url}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"select-product-details\">\r\n            <h3 className=\"product-title\">{x.name}</h3>\r\n            <p className=\"product-short_description\">{x.short_description}</p>\r\n            <div className=\"product-bottom-line\">\r\n              {x.rrp && <h4 className=\"product-price\">Starts at {formatCurrency(x.rrp)}</h4>}\r\n              <button className=\"primary-link text-button\" onClick={()=>dispatch(showProductDetailsScreen(x.id))}>View Specs</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"product-listing\" >\r\n      {buildItemsMarkup}\r\n      {/* <Link className=\"primary-button\" to=\"/select-accessories/\">Select Model ></Link> */}\r\n    </div>\r\n    \r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { addAccessory, removeAccessory, selectBuildAccessoryIds } from \"../store/build\"\r\nimport { selectCategories } from \"../store/catalog\"\r\nimport { closeSelectAccessoriesScreen, showAccessoryDetailsScreen } from \"../store/ui\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./App.css\"\r\nimport FooterNav from \"./FooterNav\"\r\nimport MiniCard from \"./MiniCard\"\r\nimport \"./SelectAccessories.css\"\r\n\r\nexport default function SelectAccessories() {\r\n  const cats = useSelector(selectCategories)\r\n  // const cats = useSelector(selectCategoriesIncludedAccessoriesOnly(\"2\"))\r\n  const buildAccessories = useSelector(selectBuildAccessoryIds)\r\n  const dispatch = useDispatch()\r\n  console.log(cats)\r\n  const catsMarkup = cats.map((cat) => { \r\n    console.log('cat')\r\n    const accessoryMarkup = cat.accessories.map(accessory=>{\r\n      console.log('minicard')\r\n      return (\r\n        <MiniCard \r\n          key={accessory.id} \r\n          image={accessory.featured_image && process.env.REACT_APP_ASSETS_URL + accessory.featured_image.url}\r\n          onDetailsClick={() => {dispatch(showAccessoryDetailsScreen(accessory.id))}}\r\n          onAddClick={() => dispatch(addAccessory(accessory.id))}\r\n          onRemoveClick={() => dispatch(removeAccessory(accessory.id))}\r\n          title={accessory.name}\r\n          description={formatCurrency(accessory.rrp || 0)}\r\n          showChevron={false}\r\n          isAdded={buildAccessories.find(accId => accId === accessory.id) !== undefined}\r\n          showAdd={true}\r\n        />)\r\n    })\r\n    \r\n    return (\r\n      <div className=\"accessory-category\" key={cat.id}>\r\n        <h3 className=\"accessory-category-title\">{cat.name}</h3>\r\n        <div className=\"accessory-category-content\">\r\n          {accessoryMarkup}\r\n        </div>\r\n      </div>\r\n    )\r\n  }, {})\r\n  \r\n  return (\r\n    <>\r\n      <div className={cx(\"accessories-screen-inner-container screen-inner-container\")} >\r\n        <h2 className=\"screen-title\">Add Accessories</h2>\r\n        {catsMarkup}\r\n\r\n      </div>\r\n      <FooterNav \r\n        onNextClick={() => {dispatch(closeSelectAccessoriesScreen()); }}\r\n        onPrevClick={() => {dispatch(closeSelectAccessoriesScreen()); }}\r\n        showNext={true}\r\n        showPrev={true}\r\n        prevEnabled={true}\r\n        nextEnabled={true} \r\n        nextLabel={\"Done\"}\r\n        prevLabel=\"Back\" />\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\n","import React from \"react\"\r\nimport \"./StepTitle.css\"\r\nimport cx from \"classnames\"\r\n\r\ntype StepTitleProps = {\r\n  title: string\r\n  isActive?: boolean\r\n  showBackButton?: boolean\r\n  onBackClick?: Function\r\n}\r\n\r\nexport default function StepTitle(props: StepTitleProps) {\r\n  let backLink\r\n\r\n  if (props.showBackButton) {\r\n    backLink = (\r\n      <span\r\n        className=\"step-back\"\r\n        onClick={() => props.onBackClick && props.onBackClick()}\r\n      >\r\n        {\"< \"}{\" \"}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={cx(\"step-title\", { active: props.isActive })}>\r\n      {backLink} <h2>{props.title}</h2>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport StepTitle from \"./StepTitle\"\r\n\r\ninterface StepTitlesProps {\r\n    titles: string[],\r\n    activeStep: string\r\n}\r\nexport default function StepTitles (props:StepTitlesProps) {\r\n\r\n  const stepTitles = props.titles.map( (title, idx) => \r\n    <StepTitle title={idx+1 + \". \" + title} isActive={title===props.activeStep} key={idx} />)\r\n\r\n  return <>{stepTitles}</> \r\n\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useState } from \"react\"\r\nimport { VscCreditCard, VscMail } from \"react-icons/vsc\"\r\nimport { useSelector } from \"react-redux\"\r\nimport {\r\n  selectBuildAccessories,\r\n  selectBuildCost, selectBuildImage, selectBuildModel,\r\n  selectBuildProduct,\r\n  selectFullBuild\r\n} from \"../store/build\"\r\nimport { selectCustomerDetails } from \"../store/customer\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./ThankYouScreen.css\"\r\n\r\nexport default function ThankYouScreen() {\r\n  const product = useSelector(selectBuildProduct)\r\n  const model = useSelector(selectBuildModel)\r\n  const accessories = useSelector(selectBuildAccessories)  \r\n  const image = useSelector(selectBuildImage)\r\n\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const allDetails = {\r\n    ...useSelector(selectFullBuild), \r\n    customer: useSelector(selectCustomerDetails)\r\n  };\r\n  const sendMail = () =>{\r\n\r\n    setEmailSent(true);\r\n    if(window.szReactPlugin && emailSent===false){\r\n      fetch(window.szReactPlugin?.email_endpoint, {\r\n\r\n        method: \"POST\",\r\n        // credentials: 'same-origin',\r\n        headers: {\r\n          'Accept': 'application/json, text/plain, */*',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(allDetails)\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data) {\r\n            console.log(data)\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"thankyou-wrapper\">\r\n      <h1 className=\"h1\">Thank you for your enquiry</h1>\r\n      <h3 className=\"thankyou-productname\"><span className=\"thankyou-prod-name\">{product?.name}</span> {model?.name}</h3>\r\n      {accessories.length > 0 && <span className=\"thankyou-accessories\">With {accessories.length} Accessories</span>}\r\n      <div className=\"thankyou-product-image\">\r\n        <img src={\"\" + process.env.REACT_APP_ASSETS_URL + image?.url} alt=\"\" />\r\n      </div>\r\n      <div className=\"thankyou-box-price\">\r\n        Total <span>{formatCurrency(useSelector(selectBuildCost))}</span>\r\n      </div>\r\n      <div className=\"thankyou-buttons\">\r\n        <button className={cx(\"outline-button secondary\", {disabled: emailSent===true})} onClick={sendMail}><VscMail/> <span>Email Me a Copy</span></button>\r\n        <button className=\"primary-button\"><VscCreditCard/> <span>Checkout</span></button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { animated, config, useTransition } from 'react-spring'\r\nimport { callWebhook, selectFullBuild } from \"../store/build\"\r\nimport { nextBuilderStep, prevBuilderStep, selectCurrentStep, selectCurrentUiScreen, selectScreenOrder, UIScreenTitles } from \"../store/ui\"\r\nimport AccessoriesPicker from \"./AccessoriesPicker\"\r\nimport AccessoryDetails from \"./AccessoryDetails\"\r\nimport AddressForm from \"./AddressForm\"\r\nimport \"./App.css\"\r\nimport BuildStatusBox from \"./BuildStatusBox\"\r\nimport ContactDetailsForm from \"./ContactDetailsForm\"\r\nimport DeliveryDetailsForm from \"./DeliveryDetailsForm\"\r\nimport FooterNav from \"./FooterNav\"\r\nimport ModelDetails from \"./ModelDetails\"\r\nimport ModelPicker from \"./ModelPicker\"\r\nimport ProductDetails from \"./ProductDetails\"\r\nimport ProductPicker from \"./ProductPicker\"\r\nimport SelectAccessories from \"./SelectAccessories\"\r\nimport StepTitles from \"./StepTitles\"\r\nimport ThankYouScreen from \"./ThankYouScreen\"\r\n\r\ndeclare global {\r\n  interface Window {szReactPlugin: {\r\n    webhook_url: string,\r\n    accent_color: string,\r\n    email_endpoint: string\r\n  }}\r\n}\r\n\r\nif( window.szReactPlugin ){\r\n  document.documentElement.style.setProperty('--accent-dark', window.szReactPlugin.accent_color);\r\n}\r\n\r\nfunction App() {\r\n  const currentScreen     = useSelector(selectCurrentUiScreen);\r\n  const currentScreenIdx  = useSelector(selectCurrentStep);\r\n  const screenNames       = useSelector(selectScreenOrder);\r\n  const fullBuild         = useSelector(selectFullBuild)\r\n  const dispatch          = useDispatch();\r\n  const transition        = useTransition(currentScreen, {\r\n    from: { transform: 'translateX(10%)', opacity:0 },\r\n    enter: { opacity: 1, transform: 'translateX(0%)' },\r\n    leave: { opacity: 0, transform: 'translateX(-10%)' },\r\n    config: config.slow\r\n    // delay: 1000,\r\n  })\r\n  \r\n  const [canAdvance, setCanAdvance] = useState(true);\r\n\r\n  const handleValidChange = (isValid:boolean) => {\r\n    setCanAdvance(isValid);\r\n  }\r\n\r\n  const handleNextClick = () => {\r\n    if((currentScreen === UIScreenTitles.YOUR_DETAILS ||\r\n        currentScreen === UIScreenTitles.YOUR_ADDRESS)\r\n        && window.szReactPlugin?.webhook_url){\r\n      dispatch(callWebhook(window.szReactPlugin?.webhook_url, fullBuild));\r\n    }\r\n    dispatch(nextBuilderStep());\r\n    setCanAdvance(true); \r\n\r\n  }\r\n\r\n  const isWizardScreen = (screen:string) => {\r\n    switch(screen){\r\n    case UIScreenTitles.SELECT_PRODUCT:\r\n    case UIScreenTitles.SELECT_MODEL:\r\n    case UIScreenTitles.ADD_ACCESSORIES:\r\n    case UIScreenTitles.YOUR_DETAILS:\r\n    case UIScreenTitles.DELIVERY_DETAILS:\r\n    case UIScreenTitles.YOUR_ADDRESS:\r\n    case UIScreenTitles.CONFIRMATION:\r\n      return true;\r\n    default:\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const getScreen = (screen: string) => {\r\n    switch(screen){\r\n    case UIScreenTitles.SELECT_PRODUCT:\r\n      return <ProductPicker onValidChange={handleValidChange} />\r\n    case UIScreenTitles.SELECT_MODEL:\r\n      return <ModelPicker onValidChange={handleValidChange} />\r\n    case UIScreenTitles.ADD_ACCESSORIES:\r\n      return <AccessoriesPicker  />\r\n    case UIScreenTitles.YOUR_DETAILS:\r\n      return <ContactDetailsForm onValidChange={handleValidChange} />\r\n    case UIScreenTitles.DELIVERY_DETAILS:\r\n      return <DeliveryDetailsForm onValidChange={handleValidChange} />\r\n    case UIScreenTitles.YOUR_ADDRESS:\r\n      return <AddressForm onValidChange={handleValidChange} />\r\n    case UIScreenTitles.CONFIRMATION:\r\n      return <ThankYouScreen/>\r\n    case UIScreenTitles.MODEL_DETAILS:\r\n      return <ModelDetails/>\r\n    case UIScreenTitles.PRODUCT_DETAILS:\r\n      return <ProductDetails/>\r\n    case UIScreenTitles.ADD_ACCESSORIES_LIST:\r\n      return <SelectAccessories />\r\n    case UIScreenTitles.ACCESSORY_DETAILS:\r\n      return <AccessoryDetails />\r\n    }\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app-container\">\r\n        <div className=\"primary-container\">\r\n          <main>\r\n            <header>\r\n              <h1 className=\"small-caps\">Configure Your Camper</h1>\r\n              <BuildStatusBox />\r\n            </header>\r\n            <div className=\"step-title-container\">\r\n              <StepTitles titles={screenNames} activeStep={currentScreen} />\r\n            </div>\r\n            <div  className=\"current-screen-container\">\r\n              {transition((style, theCurrentScreen, t, ) => \r\n                <animated.div style={style} className={cx(\"item\", {active: theCurrentScreen === currentScreen})}>\r\n                  {getScreen(theCurrentScreen)}\r\n                </animated.div> \r\n              )}\r\n            </div>\r\n            {isWizardScreen(currentScreen) &&             \r\n            <FooterNav \r\n              onNextClick={handleNextClick}\r\n              onPrevClick={() => { dispatch(prevBuilderStep()); setCanAdvance(true); }}\r\n              showNext={currentScreenIdx < screenNames.length-1}\r\n              showPrev={true}\r\n              prevEnabled={currentScreenIdx !== 0 }\r\n              nextEnabled={canAdvance} \r\n              nextLabel={screenNames[currentScreenIdx+1]}\r\n              prevLabel=\"Back\" />\r\n            }\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n          \r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './app/store/store';\r\nimport App from './app/ui/App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('sz-root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}