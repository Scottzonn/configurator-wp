{"version":3,"sources":["app/utils/utils.ts","app/store/middleware/api.ts","app/store/build.ts","app/store/catalog.ts","app/store/companies.ts","app/store/customer.ts","app/store/settings.ts","app/store/ui.ts","app/store/store.ts","app/ui/AcccessoryDetailsSidebar.tsx","app/ui/components/Accordion/index.tsx","app/ui/components/MiniCard/style.ts","app/ui/components/MiniCard/index.tsx","app/ui/BuildAccessoriesList.tsx","app/ui/AccessoriesPicker.tsx","app/ui/common/style.ts","app/ui/components/FooterNav/style.ts","app/ui/components/FooterNav/index.tsx","app/ui/AccessoryDetails.tsx","app/ui/AddressForm.tsx","app/ui/components/BuildStatusBox/style.ts","app/ui/components/BuildStatusBox/index.tsx","app/ui/components/ProductDetails/style.ts","app/ui/components/ProductDetails/index.tsx","app/ui/ContactDetailsForm.tsx","app/ui/DeliveryDetailsForm.tsx","app/ui/ModelDetails.tsx","app/ui/ModelPicker.tsx","app/ui/ProductPicker.tsx","app/ui/components/FilterSet/style.ts","app/ui/components/FilterSet/index.tsx","app/ui/SelectAccessories.tsx","app/ui/components/StepTitle/style.ts","app/ui/components/StepTitle/index.tsx","app/ui/StepTitles.tsx","app/ui/StyleConstants.ts","app/ui/ThankYouScreen.tsx","app/ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["formatCurrency","value","includeCents","formatter","Intl","NumberFormat","style","currency","format","Number","toLocaleString","normalize","data","isObject","Object","prototype","toString","call","isArray","flatten","attributes","id","map","item","key","apiCallBegan","createAction","api","dispatch","next","action","a","console","log","type","payload","url","graphQlQuery","onStart","onSuccess","onError","response","undefined","fetch","method","mode","cache","headers","redirect","body","JSON","stringify","graphQLClient","GraphQLClient","request","strapi3datastyle","message","initialState","productId","modelId","accessoryIds","customOptions","buildSlice","createSlice","name","reducers","setCustomOption","state","idx","findIndex","el","optionId","optionSelectionId","push","addAccessory","includes","setProduct","setModel","removeAccessory","indexOf","splice","buildPosted","callWebhook","actions","selectBuildAccessoryIds","build","selectBuildProduct","catalog","products","find","selectBuildModel","models","selectBuildAccessories","accessories","selectBuildIncludedAccessories","included_accessories","acc_id","acc","selectAccessoryById","selectBuild","product","model","selectBuildImage","modelImg","featured_image","prodImg","selectBuildCost","productPrice","rrp","modelPrice","accessoryPrice","reduce","curr","selectFullBuild","image","catalogSlice","loading","accessoriesLoading","customOptionPickersLoading","accessoryCategories","customOptionPickers","customOptionPickersRequested","customOptionPickersReceived","other_options","accessoriesRequested","accessoriesReceived","catalogRequested","catalogReceived","categoriesRequested","categoriesReceived","selectProducts","selectCompatibleModels","prod","selectModelById","length","accessory","selectCategories","companySlice","companies","companiesReceived","dealersAndManufacturers","companiesRequested","selectCompanyDetails","customerSlice","updateDeliveryDetails","updateCustomerDetails","updateCustomerAddress","address","selectCustomerDetails","customer","settings","webhook_url","require_user_contact_details_upfront","logo_light","settingsSlice","settingsRequested","settingsReceived","selectSettings","UIScreenTitles","builderStep","uiCurrentScreen","uiScreenOrder","uiDisplayingDetailsForId","uiSlice","nextBuilderStep","prevBuilderStep","setBuilderStep","showModelDetailsScreen","showProductDetailsScreen","closeProductDetailsScreen","closeModelDetailsScreen","openSelectAccessoriesScreen","closeSelectAccessoriesScreen","showAccessoryDetailsScreen","closeAccessoryDetailsScreen","selectCurrentStep","ui","selectCurrentUiScreen","selectDisplayedId","selectScreenOrder","store","configureStore","reducer","catalogReducer","buildReducer","uiReducer","settingsReducer","customerReducer","companiesReducer","middleware","getDefaultMiddleware","process","AccessoryDetailsSidebar","props","useSelector","className","src","alt","description","AccordionContext","React","createContext","openAccordionItem","setOpenAccordionItem","Accordion","useState","children","Children","child","isValidElement","cloneElement","index","Provider","AccordionItem","contentEl","useRef","useContext","isOpen","cx","open","onClick","title","showCount","count","maxHeight","current","scrollHeight","ref","IconButton","styled","div","AddButton","ThumbnailWrapper","MiniCardWrapper","p","isCompact","theme","accessoryButtonHeight","Thumbnail","img","ContentWrapper","Subtitle","Title","span","AddIcon","Content","MiniCard","text","icon","isAdded","onRemoveClick","onAddClick","onDetailsClick","substring","showAdd","BuildAccessoriesList","buildAccessories","includedAccessories","useDispatch","optionalAccessoriesList","useTransition","from","transform","opacity","enter","leave","config","stiff","transition","includedAccessoriesList","AccessoriesPicker","showDetails","setShowDetails","showingAccessoryId","setshowingAccessoryId","active","accessoryId","cursor","Screen","Button","h1","h2","h3","h4","h5","h6","button","secondary","disabled","css","Wrapper","footer","Container","FooterNav","showPrev","showNext","onPrevClick","onNextClick","prevEnabled","nextEnabled","prevLabel","nextLabel","AccessoryDetails","AddressForm","useForm","register","getValues","triggerValidation","useEffect","onValidChange","handleChange","result","Fragment","onChange","htmlFor","placeholder","required","defaultValue","Icon","InfoWrapper","Price","BuildStatusBox","productTitle","ProductInfo","ProductImage","ProductDetails","selectProductById","ContactDetailsForm","errors","pattern","email","defaultChecked","DeliveryDetailsForm","reValidateMode","selectedCompanyId","setselectedCompanyId","selectedCompany","company","dealer","validate","deliveryMethod","city","address_line_1","address_line_2","country","phone","href","website_url","target","rel","ModelDetails","ModelPicker","buildItemsMarkup","springs","useSprings","to","delay","x","selected","short_description","ProductPicker","FilterButton","isActive","accentDark","grey2","grey5","accendDark","FilterWrapper","FilterSet","filter","setFilter","items","filterStr","catName","onFilter","SelectAccessories","cats","filterCat","setFilterCat","catsMarkup","cat","accessoryMarkup","showChevron","accId","TitleText","animated","StepTitle","expand","useSpring","width","number","as","StepTitles","activeIndex","titles","s","activeStep","stepTitles","arrayVals","position","willChange","black","black1","accentDarkHover","inputOutlineHover","white","grey1","grey1x","grey3","grey4","grey6","grey7","inverseText","boxShadow","confirm","warning","confirmBg","headingFont","bodyFont","productSelectGutter","productMinWidth","productSelectRows","sidebarWidth","headerHeight","footerHeight","productSelectHeight","ThankYouScreen","emailSent","setEmailSent","allDetails","window","szReactPlugin","email_endpoint","then","json","catch","error","document","documentElement","setProperty","accent_color","App","currentScreen","currentScreenIdx","screenNames","fullBuild","slow","canAdvance","setCanAdvance","handleValidChange","isValid","theCurrentScreen","t","screen","getScreen","isWizardScreen","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1c96640.chunk.js","sourcesContent":["export const formatCurrency = ( value: number, includeCents:boolean = false ): string => {\r\n  \r\n  if(includeCents){\r\n    \r\n  \r\n    // Create our number formatter.\r\n    var formatter = new Intl.NumberFormat('en-AU', {\r\n      style: 'currency',\r\n      currency: 'AUD',\r\n    });\r\n    return formatter.format(value); /* $2,500.00 */\r\n  } else {\r\n    return \"$\" + Number(value).toLocaleString()\r\n\r\n  }\r\n\r\n}\r\nexport const truncate = (text:string, index:number) => {\r\n  if(text.length > index) {\r\n    return text.substring(0, index) + \"\\u2026\";\r\n  }\r\n  return text;\r\n}\r\n\r\n/* takes strapiv4 response data and changes the structure back to strapiv3 style */\r\n/* ie. changes\r\nproducts{\r\n  data{\r\n    id   \r\n    attributes{\r\n      name\r\n    }\r\n  }\r\n}\r\nto\r\nproducts{\r\n  id\r\n  name\r\n}*/\r\nexport const normalize = (data:any) => {\r\n  const isObject = (data:any) =>\r\n    Object.prototype.toString.call(data) === '[object Object]'\r\n  const isArray = (data:any) =>\r\n    Object.prototype.toString.call(data) === '[object Array]'\r\n\r\n  const flatten = (data:any) => {\r\n    if (!data.attributes) return data\r\n\r\n    return {\r\n      id: data.id,\r\n      ...data.attributes\r\n    }\r\n  }\r\n\r\n  if (isArray(data)) {\r\n    return data.map((item:any) => normalize(item))\r\n  }\r\n\r\n  if (isObject(data)) {\r\n    if (isArray(data.data)) {\r\n      data = [...data.data]\r\n    } else if (isObject(data.data)) {\r\n      data = flatten({ ...data.data })\r\n    } else if (data.data === null) {\r\n      data = null\r\n    } else {\r\n      data = flatten(data)\r\n    }\r\n\r\n    for (const key in data) {\r\n      data[key] = normalize(data[key])\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  return data\r\n}\r\n","import { createAction, Middleware } from \"@reduxjs/toolkit\"\r\nimport { GraphQLClient } from \"graphql-request\"\r\nimport { normalize } from \"../../utils/utils\"\r\n\r\ninterface QueryVars {\r\n  key: string\r\n  value: string\r\n}\r\n\r\ninterface QueryVarsObj {\r\n  [key: string]: QueryVars\r\n}\r\n\r\ninterface apiPayload {\r\n  url: string\r\n  graphQlQuery?: string\r\n  // method?: string\r\n  data?: string\r\n  onSuccess?: string\r\n  onStart?: string\r\n  onError?: string\r\n}\r\n\r\n\r\nexport const apiCallBegan = createAction<apiPayload>(\"api/CallBegan\")\r\nexport const apiCallSuccess = createAction<any>(\"api/CallSuccess\")\r\nexport const apiCallFailed = createAction<string>(\"api/CallFailed\")\r\n\r\nconst api: Middleware = ({ dispatch }) => (next) => async (action) => {\r\n\r\n  console.log(action.type)\r\n  if (action.type !== apiCallBegan.type) return next(action)\r\n  next(action)\r\n\r\n  const {\r\n    url,\r\n    graphQlQuery,\r\n    data,\r\n    onStart,\r\n    onSuccess,\r\n    onError,\r\n    \r\n  } = action.payload\r\n  if (onStart) dispatch({ type: onStart })\r\n  \r\n  try {\r\n    let response = undefined;\r\n    //used to call webhooks\r\n    if (!graphQlQuery) {\r\n      response = await fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'no-cors', // no-cors, *cors, same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n      });\r\n    \r\n    }\r\n\r\n    if(graphQlQuery){\r\n      const graphQLClient = new GraphQLClient(url, {\r\n        // headers: {\r\n        //   authorization: 'Bearer MY_TOKEN',\r\n        // },\r\n      })\r\n\r\n      response = await graphQLClient.request(graphQlQuery)\r\n    }\r\n\r\n    // General\r\n    // dispatch(apiCallSuccess(response))\r\n    // Specific\r\n    if (onSuccess){\r\n      if(response && graphQlQuery){\r\n        const strapi3datastyle = normalize(response as any)\r\n        dispatch({ type: onSuccess, payload: strapi3datastyle })\r\n      }\r\n\r\n    }\r\n  } catch (error) {\r\n    \r\n    console.log('exception '+error)\r\n    // General\r\n    // dispatch(apiCallFailed(error.message))\r\n    // Specific\r\n    \r\n    if (onError) dispatch({ type: onError, payload: (error as any).message })\r\n  }\r\n}\r\n\r\nexport default api\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { apiCallBegan } from './middleware/api';\r\nimport { AppThunk, RootState } from \"./store\";\r\n\r\n\r\nexport interface CustomOptionEntry {\r\n  optionId: string\r\n  optionSelectionId: string\r\n}\r\ninterface buildState {\r\n  productId: string | undefined\r\n  modelId: string | undefined\r\n  accessoryIds: string[]\r\n  customOptions: CustomOptionEntry[]\r\n}\r\n\r\nconst initialState: buildState = {\r\n  productId: undefined,\r\n  modelId: undefined,\r\n  accessoryIds: [],\r\n  customOptions: [],\r\n}\r\n\r\nexport const buildSlice = createSlice({\r\n  name: \"build\",\r\n  initialState,\r\n  reducers: {\r\n    setCustomOption: (state, action: PayloadAction<CustomOptionEntry>) => {\r\n      //find option and update it, or add it if it is new.\r\n      const idx = state.customOptions.findIndex(\r\n        (el) => el.optionId === action.payload.optionId\r\n      )\r\n\r\n      if (idx !== -1) {\r\n        state.customOptions[idx].optionSelectionId =\r\n          action.payload.optionSelectionId\r\n      } else state.customOptions.push(action.payload)\r\n    },\r\n    addAccessory: (state, action: PayloadAction<string>) => {\r\n      if(state.accessoryIds.includes(action.payload)){\r\n        console.log('Warning: Accessory already in build')\r\n        return\r\n      }\r\n      state.accessoryIds.push(action.payload)\r\n    },\r\n    setProduct: (state, action: PayloadAction<string>) => {\r\n      if (state.productId !== action.payload) {\r\n        state.modelId = undefined\r\n      }\r\n      state.productId = action.payload\r\n    },\r\n    setModel: (state, action: PayloadAction<string>) => {\r\n      if (state.modelId !== action.payload) {\r\n        state.accessoryIds = []\r\n      }\r\n      state.modelId = action.payload\r\n    },\r\n    removeAccessory: (state, action: PayloadAction<string>) => {\r\n      const idx = state.accessoryIds.indexOf(action.payload)\r\n      if (idx > -1) {\r\n        state.accessoryIds.splice(idx, 1)\r\n      }\r\n    },\r\n    buildPosted: () => {},\r\n  },\r\n})\r\n\r\nexport const postBuild = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery =  `{\r\n    accessoryCategories {\r\n      data{\r\n        id\r\n        attributes{\r\n          name          \r\n          accessories {\r\n            data {\r\n              attributes {\r\n                name\r\n                rrp\r\n                short_description\r\n                description\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onSuccess: buildSlice.actions.buildPosted.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const callWebhook = (url:string, data:any): AppThunk => (dispatch) => {\r\n  console.log('Webhook Call Start')\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: url,\r\n      data:data\r\n    })\r\n  )\r\n}\r\n\r\nexport const {\r\n  setCustomOption,\r\n  addAccessory,\r\n  setProduct,\r\n  setModel,\r\n  removeAccessory,\r\n} = buildSlice.actions\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectAccessoryById = (state: RootState, id: string) =>\r\n  state.catalog.accessories.find((acc) => acc.id === \"\"+id)\r\nexport const selectBuildAccessoryIds = (state: RootState) =>\r\n  state.build.accessoryIds\r\nexport const selectBuildProduct = (state: RootState) =>\r\n  state.catalog.products?.find((el) => el.id === \"\"+state.build?.productId)\r\nexport const selectBuildModel = (state: RootState) =>\r\n  selectBuildProduct(state)?.models?.find((el) => el.id === \"\"+state.build.modelId)\r\nexport const selectBuildAccessories = (state: RootState) =>\r\n  state.build.accessoryIds.map((id) => {\r\n    console.log(state.catalog.accessories);\r\n    return state.catalog.accessories.find((el) => el.id === \"\"+id)\r\n  })\r\nexport const selectBuildIncludedAccessories = (state: RootState) =>{\r\n  return selectBuildModel(state)?.included_accessories?.map( (acc_id, idx) => \r\n    selectAccessoryById(state, acc_id.id)\r\n  )\r\n}\r\n  \r\nexport const selectBuildSlides = (state: RootState) => \r\n  selectBuildModel(state)?.slideshow_images;\r\nexport const selectBuild = (state: RootState) => {\r\n  return {\r\n    product: selectBuildProduct(state),\r\n    model: selectBuildModel(state),\r\n    accessories: selectBuildAccessories(state),\r\n    \r\n  }\r\n}\r\nexport const selectBuildImage = (state: RootState) => {\r\n  const modelImg = selectBuildModel(state)?.featured_image\r\n  const prodImg = selectBuildProduct(state)?.featured_image\r\n  if (modelImg) {\r\n    return modelImg\r\n  } else {\r\n    return prodImg\r\n  }\r\n}\r\nexport const selectBuildCost = (state: RootState) => {\r\n  const productPrice = selectBuildProduct(state)?.rrp || 0\r\n  const modelPrice = selectBuildModel(state)?.rrp || 0\r\n  const accessoryPrice = selectBuildAccessories(state).reduce(\r\n    (acc, curr) => acc + (curr?.rrp || 0),\r\n    0\r\n  )\r\n  if (modelPrice) {\r\n    return modelPrice + accessoryPrice\r\n  } else if (productPrice) {\r\n    return productPrice\r\n  } else {\r\n    return 0\r\n  }\r\n}\r\n\r\n// give it id of an option picker and it will return\r\n// an object with the selected option from the option picker\r\nexport const selectBuildCustomOption = (id: string) => (state: RootState) => {\r\n  //for some reason the param id is a string... so careful of comparisons..\r\n  const buildOption = state.build.customOptions.find((option) => {\r\n    return option.optionId === id\r\n  })\r\n  const selectedOptionId = buildOption?.optionSelectionId\r\n\r\n  //could have an issue with this, but not with current ui design\r\n  if (state.catalog.customOptionPickersLoading) {\r\n    return undefined\r\n  }\r\n\r\n  const catalogOption = state.catalog.customOptionPickers.find(\r\n    (picker) => picker.id === id\r\n  )\r\n\r\n  return catalogOption?.options.find((option) => option.id === selectedOptionId)\r\n}\r\n\r\n//work out how to return all the options iwth their names\r\n/*[\r\n  {\r\n    name: 'Colour',\r\n    option: {\r\n      id,\r\n      name\r\n    }\r\n  }\r\n]*/\r\n//only returns the selected options\r\nexport const selectBuildCustomOptions = (state: RootState) => {\r\n  const buildOptions = state.catalog.customOptionPickers.map((optionPicker) => {\r\n    return {\r\n      name: optionPicker.option_name,\r\n      selectedOption: selectBuildCustomOption(optionPicker.id)(state),\r\n    }\r\n  })\r\n\r\n  return buildOptions\r\n}\r\n\r\nexport const selectFullBuild = (state: RootState) => {\r\n  \r\n  const buildproduct = selectBuildProduct(state)\r\n  const buildmodel = selectBuildModel(state)\r\n  const buildaccessories = selectBuildAccessories(state)\r\n  const buildimage = selectBuildImage(state)\r\n\r\n  return {\r\n    product: buildproduct,\r\n    model: buildmodel,\r\n    accessories: buildaccessories,\r\n    image: buildimage\r\n  }\r\n}\r\nexport default buildSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { apiCallBegan } from \"./middleware/api\"\r\nimport { AppThunk, RootState } from \"./store\"\r\n\r\ntype ModelOrUndefined = Model | undefined\r\n\r\n//for custom selections eg. pick colours\r\n\r\nexport interface CustomOption {\r\n  id: string\r\n  option_name: string\r\n  option_description?: string\r\n  rrp?: number\r\n  option_image?: Image[]\r\n}\r\nexport interface CustomOptionPicker {\r\n  id: string\r\n  screen_name: string\r\n  option_name: string\r\n  options: CustomOption[]\r\n}\r\n\r\nexport interface Category {\r\n  id: string\r\n  name: string\r\n  icon: {\r\n    url: string\r\n  }\r\n  accessories: Accessory[]\r\n}\r\nexport interface Image {\r\n  url: string\r\n  id: string\r\n  width: number\r\n  height: number\r\n  alternativeText: string\r\n}\r\nexport interface buildItem {\r\n  id: string\r\n  name: string\r\n  short_description: string\r\n  description?: string\r\n  rrp?: number\r\n  featured_image?: Image\r\n  slideshow_images?: Image[]\r\n}\r\n\r\nexport interface Product extends buildItem {\r\n  models: Model[]\r\n}\r\n\r\ninterface Accessory extends buildItem {\r\n  option_for: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n  included_in: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n  accessory_categories: [\r\n    {\r\n      id: string \r\n      icon: {\r\n        url: string\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\ninterface Model extends buildItem {\r\n  included_accessories: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n  optional_accessories: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n}\r\n\r\ninterface catalog {\r\n  products: Product[]\r\n  // models: Model[];\r\n  accessories: Accessory[]\r\n  accessoriesLoading: boolean\r\n  customOptionPickersLoading: boolean\r\n  accessoryCategories: Category[]\r\n  loading: boolean\r\n  customOptionPickers: CustomOptionPicker[]\r\n}\r\n\r\nconst initialState: catalog = {\r\n  loading: false,\r\n  accessoriesLoading: false,\r\n  customOptionPickersLoading: false,\r\n  products: [],\r\n  // models: [],\r\n  accessories: [],\r\n  accessoryCategories: [],\r\n  customOptionPickers: [],\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n  name: \"catalog\",\r\n  initialState,\r\n  reducers: {\r\n    customOptionPickersRequested: (state, action: PayloadAction<string>) => {\r\n      state.customOptionPickersLoading = true\r\n    },\r\n    customOptionPickersReceived: (state, action: PayloadAction<any>) => {\r\n      if (action.payload.model) {\r\n        state.customOptionPickers = action.payload.model.other_options\r\n      }\r\n      state.customOptionPickersLoading = false\r\n    },\r\n    accessoriesRequested: (state, action: PayloadAction<string>) => {\r\n      state.accessoriesLoading = true\r\n    },\r\n    accessoriesReceived: (state, action: PayloadAction<any>) => {\r\n      state.accessoriesLoading = false\r\n      state.accessories = action.payload.accessories\r\n    },\r\n    catalogRequested: (state, action: PayloadAction<string>) => {\r\n      state.loading = true\r\n    },\r\n    catalogReceived: (state, action: PayloadAction<any>) => {\r\n      console.log(action.payload.products)\r\n      state.products = action.payload.products\r\n      state.loading = false\r\n    },\r\n    categoriesRequested: (state, action: PayloadAction<string>) => {\r\n      // state.loading = true;\r\n    },\r\n    categoriesReceived: (state, action: PayloadAction<any>) => {\r\n      state.accessoryCategories = action.payload.accessoryCategories\r\n    },\r\n  },\r\n})\r\n\r\nexport const loadCategories = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    accessoryCategories {\r\n      data {\r\n      id \r\n      attributes {\r\n         name\r\n         accessories {\r\n          data {\r\n          \tid\r\n            attributes {\r\n              name\r\n              description\r\n              short_description\r\n              rrp\r\n              featured_image {\r\n                data{\r\n                  id\r\n                  attributes{\r\n                  \turl\r\n                    alternativeText\r\n                  }\r\n                }\r\n                \r\n              }\r\n              option_for {\r\n                data{\r\n                \tid\r\n                }\r\n                \r\n              }\r\n            }\r\n          }\r\n      }\r\n      }\r\n    }\r\n  }\r\n  }`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.categoriesRequested.type,\r\n      onSuccess: catalogSlice.actions.categoriesReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const loadCustomOptionPickers = (): AppThunk => (dispatch, getState) => {\r\n  const modelId = getState().build.modelId || 0\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n  model(id: \"${modelId}\") {\r\n    other_options{\r\n      id\r\n      screen_name\r\n      option_name\r\n      options {\t\r\n        id\r\n        option_name\r\n        option_description\r\n        rrp\r\n        option_image {\r\n          url\r\n        }\r\n      }\r\n    }  \r\n  }\r\n}`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.customOptionPickersRequested.type,\r\n      onSuccess: catalogSlice.actions.customOptionPickersReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\n\r\n// console.log('transformed')\r\n// console.log(transformResponse(example.data.accessoryCategories as collection));\r\n\r\nexport const loadCatalog = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    products(sort: \"rrp\") {\r\n      data {\r\n        id\r\n        attributes {\r\n          name\r\n          short_description\r\n          description\r\n          rrp\r\n          featured_image {\r\n            data{\r\n              id\r\n              attributes{\r\n                url\r\n                width\r\n                height\r\n              }\r\n            }\r\n          }\r\n          models(sort: \"rrp\") {\r\n            data{\r\n              id\r\n              attributes {\r\n                name\r\n                short_description\r\n                description\r\n                rrp\r\n                included_accessories{\r\n                  data {\r\n                    id\r\n                  }\r\n                }\r\n                slideshow_images{\r\n                  data{\r\n                    id\r\n                    attributes{\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n                featured_image{\r\n                  data {\r\n                    id \r\n                    attributes{\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }    \r\n          }\r\n        }     \r\n      }\r\n    }\r\n  }`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.catalogRequested.type,\r\n      onSuccess: catalogSlice.actions.catalogReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const loadAccessories = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    accessories {\r\n      data {\r\n        id\r\n        attributes{\r\n          name\r\n          short_description\r\n          description\r\n          rrp\r\n          featured_image {\r\n            data{\r\n              attributes{\r\n            \t\turl    \r\n              }\r\n            }\r\n          }\r\n          accessory_categories{\r\n            data{\r\n              id\r\n              attributes{\r\n                name      \r\n              }\r\n            }\r\n          }\r\n          option_for {\r\n            data{\r\n            \tid  \r\n            }\r\n          }\r\n          included_in {\r\n            data {\r\n            \tid  \r\n            }\r\n          }        \r\n      }\r\n    }   \r\n  }\r\n}`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.accessoriesRequested.type,\r\n      onSuccess: catalogSlice.actions.accessoriesReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\n// SELECTORS\r\nexport const selectProducts = (state: RootState) => state.catalog.products\r\nexport const selectCompatibleModels = (state: RootState) =>\r\n  state.catalog.products.find((prod) => \"\"+state.build.productId === prod.id)\r\n    ?.models\r\nexport const selectAccessoryCatById = (catId: string) => (state: RootState) => {\r\n  return state.catalog.accessoryCategories.find((cat) => cat.id === catId)\r\n}\r\nexport const selectIncludedAccessories = (state: RootState) => {\r\n  return state.catalog.accessories.filter((acc) => {\r\n    if (state.build.modelId) {\r\n      const accessory = acc.included_in.find(\r\n        (item) => item.id === state.build.modelId\r\n      )\r\n      return accessory\r\n    } else {\r\n      return false\r\n    }\r\n  })\r\n}\r\n\r\nexport const selectOptionalAccessories = (state: RootState) => {\r\n  return state.catalog.accessories.filter((acc) => {\r\n    if (state.build.modelId) {\r\n      const accessory = acc.option_for.find(\r\n        (item) => item.id === state.build.modelId\r\n      )\r\n      return accessory\r\n    } else {\r\n      return false\r\n    }\r\n  })\r\n}\r\n\r\nexport const selectOptionalAccessoriesInCat = (catId: string) => (\r\n  state: RootState\r\n) => {\r\n  return state.catalog.accessories.filter((acc) => {\r\n    if (state.build.modelId) {\r\n      const isOption = acc.option_for.find(\r\n        (item) => item.id === state.build.modelId\r\n      )\r\n      const isInCat = acc.accessory_categories.find((cat) => cat.id === catId)\r\n\r\n      return isOption && isInCat\r\n    } else {\r\n      return false\r\n    }\r\n  })\r\n}\r\nexport const selectModelById = (id: string) => (state: RootState) => {\r\n  if (!state.catalog.products || state.catalog.products.length === 0) {\r\n    return undefined\r\n  }\r\n  return state.catalog.products.reduce<ModelOrUndefined>((acc, prod) => {\r\n    const model: Model | undefined = prod.models?.find(\r\n      (model) => {\r\n        console.log(typeof model.id, typeof id)\r\n\r\n        return (model.id) === \"\"+id\r\n      }\r\n    )\r\n\r\n    if (model) return model\r\n    else return acc\r\n  }, undefined)\r\n}\r\nexport const selectProductById = (id: string) => (state: RootState) => {\r\n  if (!state.catalog.products || state.catalog.products.length === 0) {\r\n    console.log('no prod found', state.catalog.products)\r\n    return undefined\r\n  }\r\n  // console.log(state.catalog.products)\r\n  // console.log(state.catalog.accessories)\r\n  const product:Product|undefined = state.catalog.products.find((prod) => {\r\n    console.log(typeof prod.id, typeof id)\r\n    return prod.id === id})\r\n  return product\r\n}\r\n\r\nexport const selectAccessoryById = (id: string) => (state: RootState) =>\r\n  state.catalog.accessories.find((accessory) => accessory.id === \"\"+id)\r\nexport const selectCategories = (state: RootState) =>\r\n  state.catalog.accessoryCategories \r\n\r\n//untested\r\n// export const selectCategoriesIncludedAccessoriesOnly = (model_id:string) => (state: RootState) =>{\r\n//   const retArray: Category[] = []\r\n//   state.catalog.accessoryCategories.reduce( (result, cat, idx) => {\r\n//     const accessories = cat.accessories.filter( accessory => {\r\n//       return accessory.included_in.find((e) => e.id===model_id)\r\n//     })\r\n//     cat.accessories=accessories\r\n//     if(accessories.length > 0){\r\n//       result.push(cat);\r\n//     }\r\n//     return result\r\n//   }, retArray)\r\n// }\r\nexport const selectCustomOptionPicker = (id: string) => (state: RootState) =>\r\n  state.catalog.customOptionPickers.find((el) => el.id === id)\r\nexport const selectCustomOptionPickers = (state: RootState) =>\r\n  state.catalog.customOptionPickers\r\nexport const selectCustomOptionPickersLoading = (state: RootState) =>\r\n  state.catalog.customOptionPickersLoading\r\nexport const selectModelSlides = (id:string) => (state: RootState) =>\r\n  selectModelById(id)(state)?.slideshow_images\r\n\r\n\r\nexport default catalogSlice.reducer","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Image } from \"./catalog\";\r\nimport { address } from \"./customer\";\r\nimport { apiCallBegan } from \"./middleware/api\";\r\nimport { AppThunk, RootState } from \"./store\";\r\n\r\nexport interface Company {\r\n  id: string\r\n  name: string\r\n  address?: address\r\n  phone?: string\r\n  email?: string\r\n  company_type: string\r\n  logo_light?: Image\r\n  logo_dark?: Image\r\n  public_email?: string\r\n  website_url?: string\r\n  build_notifications_email?: string\r\n  address_line_1?: string\r\n  address_line_2?: string\r\n  city: string\r\n  country: string\r\n  state: string\r\n  postcode: string\r\n}\r\n\r\ninterface CompanyStore {\r\n    companies: Company[]\r\n    loading: boolean\r\n}\r\nconst initialState: CompanyStore = {\r\n  companies: [],\r\n  loading:false\r\n}\r\n\r\nexport const companySlice = createSlice({\r\n  name: \"company\",\r\n  initialState,\r\n  reducers: {\r\n    companiesReceived: (state, action: PayloadAction<any>) => {\r\n      state.companies = action.payload.dealersAndManufacturers;        \r\n      state.loading = false;   \r\n    },\r\n    companiesRequested: (state) => {\r\n      state.loading = true;        \r\n        \r\n    },\r\n  },\r\n})\r\n\r\n\r\nexport const loadCompanies = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    dealersAndManufacturers {\r\n      data {\r\n        id\r\n        attributes{\r\n          name\r\n          address_line_1\r\n          address_line_2\r\n          phone\r\n          city\r\n          state\r\n          country\r\n          postcode\r\n          email\r\n          website_url\r\n          company_type\r\n          build_notifications_email\r\n        }\r\n      }\r\n    }\r\n  }`\r\n  \r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: companySlice.actions.companiesRequested.type,\r\n      onSuccess: companySlice.actions.companiesReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const {\r\n  companiesReceived,\r\n  companiesRequested\r\n} = companySlice.actions\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\n// export const selectBuilderStep = (state: RootState) => state.ui.builderStep\r\nexport const selectCompanyDetails = (state: RootState) =>{\r\n  return state.companies.companies\r\n}\r\nexport const selectCompanyById = (id: string) => (state: RootState) =>{\r\n  return state.companies.companies.find(company => company.id === id)\r\n}\r\nexport default companySlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\nexport type deliveryDetails = {\r\n  deliveryMethod: string\r\n  dealer: string\r\n}\r\n\r\nexport interface address {\r\n  line1: string\r\n  line2?: string\r\n  city: string\r\n  country: string\r\n  state: string\r\n  postcode: string\r\n}\r\n\r\nexport interface customerDetails {\r\n  firstName?: string\r\n  surname?: string\r\n  phone?: string\r\n  email?: string\r\n  address?: address\r\n  newsletter?: boolean\r\n  deliveryMethod?: string\r\n  preferredDealer?: string\r\n}\r\n\r\nconst initialState: customerDetails = {}\r\n\r\nexport const customerSlice = createSlice({\r\n  name: \"customer\",\r\n  initialState,\r\n  reducers: {\r\n    updateDeliveryDetails: (state, action: PayloadAction<deliveryDetails>) => {\r\n      return { ...state, ...action.payload }\r\n    },\r\n    updateCustomerDetails: (state, action: PayloadAction<customerDetails>) => {\r\n      return { ...state, ...action.payload }\r\n    },\r\n    updateCustomerAddress: (state, action: PayloadAction<address>) => {\r\n      state.address = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  updateDeliveryDetails,\r\n  updateCustomerDetails,\r\n  updateCustomerAddress,\r\n} = customerSlice.actions\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\n// export const selectBuilderStep = (state: RootState) => state.ui.builderStep\r\nexport const selectCustomerDetails= (state: RootState) =>{\r\n  return state.customer\r\n}\r\n\r\nexport default customerSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { apiCallBegan } from \"./middleware/api\"\r\nimport { AppThunk, RootState } from \"./store\"\r\n\r\ninterface settings {\r\n  // settings:\r\n  loading: boolean\r\n  settings: {\r\n    webhook_url: string | undefined\r\n    require_user_contact_details_upfront: string | undefined\r\n    logo_light: {\r\n      url: string | undefined\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState: settings = {\r\n  loading: false,\r\n  settings: {\r\n    webhook_url: undefined,\r\n    require_user_contact_details_upfront: undefined,\r\n    logo_light: {\r\n      url: undefined,\r\n    },\r\n  },\r\n}\r\n\r\nexport const settingsSlice = createSlice({\r\n  name: \"settings\",\r\n  initialState,\r\n  reducers: {\r\n    settingsRequested: (state, action: PayloadAction<string>) => {\r\n      state.loading = true\r\n    },\r\n    settingsReceived: (state, action: PayloadAction<any>) => {\r\n      state.settings = action.payload.settings\r\n      state.loading = false\r\n    },\r\n  },\r\n})\r\n\r\nexport const loadSettings = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    settings: config {\r\n      data{\r\n        attributes{\r\n          webhook_url\r\n      \t\trequire_user_contact_details_upfront\r\n          logo_light {\r\n            data{\r\n              attributes{\r\n                url\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: settingsSlice.actions.settingsRequested.type,\r\n      onSuccess: settingsSlice.actions.settingsReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const selectSettings = (state: RootState) => state.settings.settings\r\n\r\nexport default settingsSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { RootState } from \"./store\"\r\n\r\n\r\nexport const UIScreenTitles = {\r\n  SELECT_PRODUCT: \"Select Product\",\r\n  SELECT_MODEL: \"Select Model\",\r\n  YOUR_DETAILS: \"Your Details\",\r\n  ADD_ACCESSORIES: \"Add Accessories\",\r\n  DELIVERY_DETAILS: \"Delivery Details\",\r\n  YOUR_ADDRESS: \"Your Address\",\r\n  CONFIRMATION: \"Confirmation\",\r\n  PRODUCT_DETAILS: \"Product Details\",\r\n  MODEL_DETAILS: \"Model Details\",\r\n  ADD_ACCESSORIES_LIST: \"Add Accessories List\",\r\n  ACCESSORY_DETAILS: \"Accessory Details\"\r\n}\r\n\r\ninterface uiState {\r\n  builderStep: number,\r\n  uiCurrentScreen: string,\r\n  uiScreenOrder: string[]\r\n  uiDisplayingDetailsForId: string\r\n}\r\n\r\nconst initialState: uiState = {\r\n  builderStep: 0,\r\n  uiCurrentScreen: UIScreenTitles.SELECT_PRODUCT,\r\n  uiScreenOrder: [\r\n    UIScreenTitles.SELECT_PRODUCT,\r\n    UIScreenTitles.SELECT_MODEL,\r\n    UIScreenTitles.ADD_ACCESSORIES,\r\n    UIScreenTitles.YOUR_DETAILS,\r\n    UIScreenTitles.DELIVERY_DETAILS,\r\n    UIScreenTitles.YOUR_ADDRESS,\r\n    UIScreenTitles.CONFIRMATION\r\n  ],\r\n  uiDisplayingDetailsForId: \"0\"\r\n}\r\n\r\nexport const uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState,\r\n  reducers: {\r\n    nextBuilderStep: (state) => {\r\n      // if(state.uiCurrentScreen === UIScreenTitles.YOUR_DETAILS){\r\n      //   dispatch(callWebhook('asdf', build))\r\n      // }\r\n      if(state.builderStep < state.uiScreenOrder.length-1){\r\n        state.builderStep++\r\n        state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n      }\r\n    },\r\n    prevBuilderStep: (state) => {\r\n      if (state.builderStep > 0) {\r\n        state.builderStep--\r\n        state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n      }\r\n    },\r\n    setBuilderStep: (state, action: PayloadAction<number>) => {\r\n      state.builderStep = action.payload\r\n      state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n    },\r\n    showModelDetailsScreen: (state, action: PayloadAction<string>) => {\r\n      state.uiCurrentScreen = UIScreenTitles.MODEL_DETAILS\r\n      state.uiDisplayingDetailsForId = action.payload\r\n    },\r\n    showProductDetailsScreen: (state, action: PayloadAction<string>) => {\r\n      state.uiCurrentScreen = UIScreenTitles.PRODUCT_DETAILS\r\n      state.uiDisplayingDetailsForId = action.payload\r\n    },\r\n    closeProductDetailsScreen: (state) => {\r\n      state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n    },\r\n    closeModelDetailsScreen: (state) => {\r\n      state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n    },\r\n    openSelectAccessoriesScreen: (state) => {\r\n      state.uiCurrentScreen = UIScreenTitles.ADD_ACCESSORIES_LIST\r\n    },\r\n    closeSelectAccessoriesScreen: (state) => {\r\n      state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n    },   \r\n    showAccessoryDetailsScreen: (state, action: PayloadAction<string>) => {\r\n      state.uiDisplayingDetailsForId = action.payload\r\n      state.uiCurrentScreen = UIScreenTitles.ACCESSORY_DETAILS\r\n    },\r\n    closeAccessoryDetailsScreen: (state) => {\r\n      state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n    },\r\n    \r\n  },\r\n})\r\n\r\nexport const {\r\n  nextBuilderStep,\r\n  prevBuilderStep,\r\n  setBuilderStep,\r\n  showModelDetailsScreen,\r\n  showProductDetailsScreen,\r\n  closeModelDetailsScreen,\r\n  closeProductDetailsScreen,\r\n  openSelectAccessoriesScreen,\r\n  closeSelectAccessoriesScreen,\r\n  showAccessoryDetailsScreen,\r\n  closeAccessoryDetailsScreen\r\n} = uiSlice.actions\r\n\r\nexport const selectCurrentStep = (state: RootState) => state.ui.builderStep\r\nexport const selectCurrentUiScreen = (state: RootState) => state.ui.uiCurrentScreen\r\nexport const selectDisplayedId = (state:RootState) => state.ui.uiDisplayingDetailsForId\r\nexport const selectScreenOrder = (state:RootState) => state.ui.uiScreenOrder\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\n// export const selectBuilderStep = (state: RootState) => state.ui.builderStep;\r\n\r\nexport default uiSlice.reducer\r\n","import {\r\n  Action,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  ThunkAction\r\n} from \"@reduxjs/toolkit\"\r\nimport buildReducer from \"./build\"\r\nimport catalogReducer, {\r\n  loadAccessories,\r\n  loadCatalog,\r\n  loadCategories\r\n} from \"./catalog\"\r\nimport companiesReducer, { loadCompanies } from \"./companies\"\r\nimport customerReducer from \"./customer\"\r\nimport api from \"./middleware/api\"\r\nimport settingsReducer from \"./settings\"\r\nimport uiReducer from \"./ui\"\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    catalog: catalogReducer,\r\n    build: buildReducer,\r\n    ui: uiReducer,\r\n    settings: settingsReducer,\r\n    customer: customerReducer,\r\n    companies: companiesReducer\r\n  },\r\n  middleware: [...getDefaultMiddleware(), api],\r\n})\r\n\r\n//cast to allow for dispatching thunkactions\r\nstore.dispatch<any>(loadCatalog())\r\nstore.dispatch<any>(loadAccessories())\r\nstore.dispatch<any>(loadCompanies())\r\nstore.dispatch<any>(loadCategories())\r\n// store.dispatch<any>(loadSettings())\r\n// store.dispatch<any>(loadCustomOptionPickers(1))\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectAccessoryById } from \"../store/catalog\"\r\nimport \"./AccessoryDetailsSidebar.css\"\r\n\r\ninterface AccessoryDetailsSidebarProps {\r\n  id: string\r\n}\r\nexport default function AccessoryDetailsSidebar(props: AccessoryDetailsSidebarProps) {\r\n  // const dispatch = useDispatch();  \r\n  const accessory = useSelector(selectAccessoryById(props.id))\r\n  return (\r\n    <div className=\"accessory-details-sidebar\">\r\n      {accessory?.featured_image?.url && <img className=\"accessory-detail-image\" src={\"\" + process.env.REACT_APP_ASSETS_URL + accessory?.featured_image?.url} alt=\"\"/>}\r\n      <h3>{accessory?.name}</h3>\r\n      {accessory?.rrp && <h5>${accessory?.rrp}</h5>}\r\n      <p>{accessory?.description}</p>\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\";\r\nimport React, { useContext, useRef } from \"react\";\r\nimport { VscChevronRight } from \"react-icons/vsc\";\r\nimport \"./Accordion.css\";\r\n\r\ninterface AccordionProps  {\r\n    children:React.ReactNode\r\n}\r\ninterface AccordionItemProps extends React.HTMLAttributes<HTMLElement> {\r\n    title:string\r\n    children:React.ReactNode\r\n    index?: number\r\n    showCount?: boolean\r\n}\r\ninterface AccordionContext {\r\n    openAccordionItem: number,\r\n    setOpenAccordionItem: React.Dispatch<React.SetStateAction<number>> | undefined\r\n}\r\n\r\nconst AccordionContext = React.createContext<AccordionContext>({\r\n  openAccordionItem: 0,\r\n  setOpenAccordionItem: undefined\r\n})\r\n\r\nexport default function Accordion(props:AccordionProps) {\r\n  const [openAccordionItem, setOpenAccordionItem] = React.useState(0)\r\n  const children = React.Children.map(props.children, (child,idx) => {\r\n    if (React.isValidElement(child)) {\r\n      return React.cloneElement(child, { index: idx });\r\n    }\r\n  })\r\n  return (\r\n    <AccordionContext.Provider value={{openAccordionItem, setOpenAccordionItem}}>\r\n      <div className=\"sz-accordion\">\r\n        {children}\r\n      </div>\r\n    </AccordionContext.Provider>\r\n  )\r\n}\r\n\r\nexport function AccordionItem(props:AccordionItemProps){\r\n  const contentEl = useRef<HTMLDivElement>(null);\r\n  const {openAccordionItem, setOpenAccordionItem} = useContext(AccordionContext)\r\n  const isOpen = props.index === openAccordionItem\r\n\r\n  return (\r\n    <div {...props} className={cx(\"accordion-item\", {open: isOpen})}>\r\n      <div className=\"accordion-item-header\" onClick={() => setOpenAccordionItem && setOpenAccordionItem(isOpen ? -1 : (props.index || 0))}>\r\n        <div className=\"svg-icon-container\">\r\n          <VscChevronRight />\r\n        </div>\r\n        <h3 className=\"accordion-item-title\">{props.title}{props.showCount? ' (' + React.Children.count(props.children) + ')': ''}</h3>\r\n      </div>\r\n      <div className=\"accordion-content-wrapper\" style={\r\n        isOpen\r\n          ? { maxHeight: contentEl?.current?.scrollHeight }\r\n          : { maxHeight: \"0px\" }\r\n      }>\r\n        <div className=\"accordion-item-content\" ref={contentEl}>\r\n          {props.children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import styled from 'styled-components/macro'\r\n\r\ninterface theProps {\r\n  isCompact?: boolean\r\n}\r\n\r\nexport const IconButton = styled.div`\r\n  width: var(--accessory-button-height);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-left: 1px solid var(--grey-1x);\r\n  cursor: pointer;\r\n  font-size: 22px;\r\n  color: var(--grey-3);\r\n  flex-shrink: 0;\r\n\r\n  &:hover {\r\n    color: var(--accent-dark);\r\n    background-color: var(--grey-1);\r\n  }\r\n`\r\n\r\nexport const AddButton = styled(IconButton)`\r\n  $(MiniCard):hover & path {\r\n    fill: var(--accent-dark);\r\n  }\r\n`\r\nexport const ThumbnailWrapper = styled.div`\r\n  width: var(--accessory-button-height);\r\n  background-color: var(--grey-2);\r\n  flex-shrink: 0;\r\n  cursor: pointer;\r\n`\r\n\r\nexport const MiniCardWrapper = styled.div<theProps>`\r\n  margin-bottom: 5px;\r\n  border: 1px solid var(--grey-1x);\r\n  box-shadow: 1px 2px 10px rgba(0, 0, 0, 0.07);\r\n  background-color:white;\r\n  display: flex;\r\n  align-items: center;\r\n  height: ${p => p.isCompact ? 'calc( var(--accessory-button-height) * 0.75)' : p.theme.accessoryButtonHeight};\r\n  box-sizing: border-box;\r\n\r\n  &:hover {\r\n    border: 1px solid var(--grey-2);\r\n    box-shadow: 1px 4px 6px rgba(0, 0, 0, 0.15);\r\n  }\r\n\r\n  ${IconButton}, ${ThumbnailWrapper}  {\r\n    height: ${p => p.isCompact ? 'calc( var(--accessory-button-height) * 0.75)' : p.theme.accessoryButtonHeight};\r\n  }\r\n`\r\n\r\nexport const Thumbnail = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;`\r\n\r\nexport const ContentWrapper = styled.div`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nexport const Subtitle = styled.div`\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  color: var(--grey-3);\r\n  display: block;\r\n  text-decoration: none;\r\n  align-self: center;\r\n`\r\n\r\nexport const Title = styled.span`\r\n  font-size: 15px;\r\n  font-weight: 300;\r\n  line-height: 16px;\r\n  display: block;\r\n`\r\n\r\nexport const AddIcon = styled.div`\r\n  display: flex;\r\n  color: var(--confirm);\r\n`\r\nexport const Content = styled.div`\r\nflex-grow: 1;\r\nmargin-left: 10px;\r\ncursor: pointer;\r\n`","import React, { MouseEventHandler } from \"react\";\r\nimport { VscAdd, VscCheck } from \"react-icons/vsc\";\r\nimport { truncate } from \"../../../utils/utils\";\r\nimport { AddButton, AddIcon, Content, ContentWrapper, MiniCardWrapper, Subtitle, Thumbnail, ThumbnailWrapper, Title } from \"./style\";\r\n\r\ninterface MiniCardProps {\r\n    image: string | undefined,\r\n    onDetailsClick: MouseEventHandler<HTMLDivElement>,\r\n    onAddClick: MouseEventHandler<HTMLDivElement>,\r\n    onRemoveClick: MouseEventHandler<HTMLDivElement>,\r\n    title: string,\r\n    description?: string,\r\n    isAdded: boolean,\r\n    showChevron?: boolean | undefined\r\n    showAdd?: boolean | undefined\r\n    isCompact?: boolean | undefined\r\n    showRemove?: boolean\r\n} \r\nexport default function MiniCard (props:MiniCardProps){\r\n  const icon = props.isAdded ?\r\n    <AddButton onClick={props.onRemoveClick}>\r\n      <AddIcon>\r\n        <VscCheck />\r\n      </AddIcon>\r\n    </AddButton> \r\n    :\r\n    <AddButton onClick={props.onAddClick}>\r\n      <VscAdd />\r\n    </AddButton> \r\n\r\n  return (\r\n    <MiniCardWrapper isCompact={props.isCompact}>\r\n      <ThumbnailWrapper onClick={props.onDetailsClick} >\r\n        {props.image &&\r\n          <Thumbnail src={\"\" + process.env.REACT_APP_ASSETS_URL + props.image} alt=\"\" />}\r\n      </ThumbnailWrapper>\r\n      <ContentWrapper>\r\n        <Content title={props.title} onClick={props.onDetailsClick}>\r\n          <Title>{truncate(props.title, 50)}</Title>\r\n          {props.description && <Subtitle>{props.description}</Subtitle>}\r\n        </Content>\r\n        {props.showAdd && icon}\r\n      </ContentWrapper>\r\n    </MiniCardWrapper>\r\n  )\r\n}","import cx from \"classnames\";\r\nimport React from \"react\";\r\nimport { VscAdd } from \"react-icons/vsc\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { animated, config, useTransition } from 'react-spring';\r\nimport { addAccessory, removeAccessory, selectBuildAccessories, selectBuildIncludedAccessories } from \"../store/build\";\r\nimport { openSelectAccessoriesScreen } from \"../store/ui\";\r\nimport { formatCurrency } from \"../utils/utils\";\r\nimport \"./AccessoriesList.css\";\r\nimport Accordion, { AccordionItem } from \"./components/Accordion\";\r\nimport MiniCard from \"./components/MiniCard\";\r\ninterface AccessoriesListProps {\r\n  onDetailsClick: (id: string) => void,\r\n}\r\n\r\nexport default function BuildAccessoriesList(props:AccessoriesListProps) {\r\n\r\n  // const cats = useSelector(selectCategories)\r\n  const buildAccessories = useSelector(selectBuildAccessories)\r\n  const includedAccessories = useSelector(selectBuildIncludedAccessories)\r\n\r\n  const dispatch = useDispatch()\r\n  const transition = useTransition(buildAccessories,\r\n    {\r\n      from: { transform: 'translateX(10%)', opacity:0 },\r\n      enter: { opacity: 1, maxHeight: '58px', transform: 'translateX(0%)' },\r\n      leave: { opacity: 0, maxHeight: '0px', transform: 'translateX(-0%)' },\r\n      config: config.stiff\r\n    // delay: 1000,\r\n    })\r\n\r\n  const optionalAccessoriesList = transition( (style, accessory) => {\r\n    return (\r\n      accessory && \r\n      <animated.div style={style}>\r\n        <MiniCard \r\n          key={accessory.id} \r\n          image={accessory.featured_image && process.env.REACT_APP_ASSETS_URL + accessory.featured_image.url}\r\n          onDetailsClick={() => props.onDetailsClick(accessory.id)}\r\n          onAddClick={() => dispatch(addAccessory(accessory.id))}\r\n          onRemoveClick={() => dispatch(removeAccessory(accessory.id))}\r\n          title={accessory.name}\r\n          description={formatCurrency(accessory.rrp || 0)}\r\n          isAdded={true}\r\n          showAdd={true}\r\n        />\r\n      </animated.div>\r\n    )\r\n  })\r\n  const includedAccessoriesList = includedAccessories?.map( accessory => {\r\n    \r\n    return (\r\n      accessory && \r\n      <MiniCard \r\n        key={accessory.id} \r\n        image={accessory.featured_image && process.env.REACT_APP_ASSETS_URL + accessory.featured_image.url}\r\n        onDetailsClick={() => props.onDetailsClick(accessory.id)}\r\n        onAddClick={() => dispatch(addAccessory(accessory.id))}\r\n        onRemoveClick={() => dispatch(removeAccessory(accessory.id))}\r\n        title={accessory.name}\r\n        description={(accessory.rrp && accessory.rrp !== 0) ? formatCurrency(accessory.rrp): undefined}\r\n        isAdded={true}\r\n        isCompact={true}\r\n      />)\r\n  })\r\n\r\n  \r\n  return (\r\n    \r\n    <div className={cx(\"accessories-accordion-container\")} >\r\n      <div className=\"accessories-sidebar-header\">\r\n        <h2>Your Accessories</h2>\r\n      </div>\r\n      <Accordion>\r\n        <AccordionItem title={\"Optional Accessories (\" + buildAccessories.length + \")\"}>\r\n          <button className={\"primary-button accessory-add-new \"} onClick={()=>dispatch(openSelectAccessoriesScreen())}>\r\n            <VscAdd /> Add Accessories\r\n          </button>\r\n\r\n          {optionalAccessoriesList}\r\n        </AccordionItem>\r\n        <AccordionItem title={\"Included Accessories (\" + includedAccessories?.length + \")\"}>\r\n          {includedAccessoriesList}\r\n        </AccordionItem>\r\n      </Accordion>\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\";\r\nimport React, { useState } from \"react\";\r\nimport { VscArrowLeft } from \"react-icons/vsc\";\r\nimport { useSelector } from \"react-redux\";\r\nimport 'swiper/swiper-bundle.min.css';\r\nimport 'swiper/swiper.min.css';\r\nimport { selectBuildImage } from \"../store/build\";\r\nimport AccessoryDetailsSidebar from \"./AcccessoryDetailsSidebar\";\r\nimport \"./AccessoriesPicker.css\";\r\nimport BuildAccessoriesList from \"./BuildAccessoriesList\";\r\n\r\nexport default function AccessoriesPicker() {\r\n\r\n  const image = useSelector(selectBuildImage)\r\n  const [showDetails, setShowDetails] = useState(false)\r\n  const [showingAccessoryId, setshowingAccessoryId] = useState(\"1\")\r\n  // const dispatch = useDispatch()\r\n  // const slides = useSelector(selectBuildSlides)\r\n  const showAccessory = (accessoryId:string) => {\r\n    console.log('showing accessory ' + accessoryId)\r\n    setShowDetails(true)\r\n    setshowingAccessoryId(accessoryId)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"accessories-section\">\r\n      <div className=\"accessories-section-inner\">\r\n\r\n        <div className=\"model-image-container\">\r\n          {/* <Swiper\r\n            spaceBetween={0}\r\n            slidesPerView={1}\r\n            onSlideChange={() => console.log('slide change')}\r\n            onSwiper={(swiper) => console.log(swiper)}\r\n          >\r\n            \r\n            {slides?.map((slide, idx)=> <SwiperSlide key={idx}><img src={slide.url} alt=\"\" /></SwiperSlide>)}\r\n\r\n          </Swiper> */}\r\n          <img src={\"\" + process.env.REACT_APP_ASSETS_URL + image?.url} alt=\"\" />\r\n        </div>\r\n        <div className=\"sidebar accessories-sidebar\">\r\n          <div className=\"sidebar-inner\">\r\n            <div className={cx(\"sidebar-menu-1\", {active: !showDetails})} >\r\n              <BuildAccessoriesList onDetailsClick={(id:string) => showAccessory(id) } />\r\n            </div>\r\n            {/* {accessoriesMarkup} */}\r\n            <div className={cx(\"sidebar-menu-2\", {active: showDetails})}>\r\n              <div style={{cursor:\"pointer\"}} onClick={() => setShowDetails(false)}><VscArrowLeft /> Back</div>\r\n              <AccessoryDetailsSidebar id={showingAccessoryId}></AccessoryDetailsSidebar>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>  )\r\n}\r\n","import styled, { css } from 'styled-components'\r\n\r\ninterface ButtonProps {\r\n  primary?: boolean\r\n  secondary?: boolean\r\n  outline?: boolean\r\n  disabled?: boolean\r\n}\r\n\r\nexport const Screen = styled.div`\r\n  display: flex;\r\n  background-color: white;\r\n  padding: 2%;\r\n  justify-content: space-between;\r\n`\r\nexport const Heading1 = styled.h1`\r\n  font: 700 2em/1.2em;\r\n`\r\nexport const Heading2 = styled.h2`\r\n  font: 700 1.5em/1.2em;\r\n`\r\nexport const Heading3 = styled.h3`\r\n  font: 400 1.3em/1.2em;\r\n`\r\nexport const Heading4 = styled.h4`\r\n  font: 400 1em/1.2em;\r\n`\r\nexport const Heading5 = styled.h5`\r\n  font: 400 0.83em/1.2em;\r\n`\r\nexport const Heading6 = styled.h6`\r\n  font: 400 0.7em/1.2em;\r\n`\r\n\r\nexport const Button = styled.button<ButtonProps>`\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n  font-family: \"Nunito\", sans-serif;\r\n\r\n  &:hover{\r\n    background-color: var(--accent-dark-hover);\r\n    border: 1px solid var(--accent-dark);\r\n    cursor: pointer;\r\n  }\r\n\r\n  ${({secondary, disabled}) => \r\n    !secondary && !disabled && css`\r\n      border: 1px solid var(--accent-dark);\r\n      background-color: var(--accent-dark);\r\n      color: var(--grey-1);\r\n    `}\r\n\r\n  ${({secondary, disabled}) => \r\n    secondary && !disabled && css`\r\n      border: 1px solid var(--grey-3);\r\n      background-color: var(--grey-3);\r\n      color: var(--grey-1);\r\n    `}\r\n\r\n    ${({disabled}) => \r\n    disabled && css`\r\n      border: 1px solid var(--disabled);\r\n      background-color: var(--disabled);\r\n      cursor: auto;\r\n      pointer-events: none;\r\n    `}\r\n`\r\n","import styled from 'styled-components/macro'\r\n\r\nexport const Wrapper = styled.footer`\r\n/* position: fixed; */\r\nbottom:20px;\r\nleft:0;\r\nwidth:100%;\r\n`\r\nexport const Container = styled.div`\r\n  max-width: var(--container-max-width);\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: flex-end;\r\n  /* background-color: white; */\r\n  /* box-shadow: 0 2px 5px var(--grey-2); */\r\n  padding:5px;\r\n\r\n  button {\r\n      margin:2px\r\n  }\r\n\r\n`","import React from \"react\";\r\nimport { VscArrowRight } from \"react-icons/vsc\";\r\nimport { Button } from './../../common/style';\r\nimport { Container, Wrapper } from './style';\r\ninterface FooterNavProps {\r\n    onNextClick: ()=>void,\r\n    onPrevClick: ()=>void,\r\n    showPrev: boolean,\r\n    showNext: boolean,\r\n    prevEnabled: boolean,\r\n    nextEnabled: boolean,\r\n    prevLabel: string,\r\n    nextLabel: string\r\n}\r\nexport default function FooterNav(props:FooterNavProps){\r\n  const {showPrev, showNext, onPrevClick, onNextClick, prevEnabled, nextEnabled, prevLabel, nextLabel} = props;\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        {showPrev &&\r\n          <Button secondary disabled={!prevEnabled } onClick={onPrevClick}>\r\n            {prevLabel}\r\n          </Button>\r\n        }\r\n        {showNext &&\r\n          <Button disabled={!nextEnabled} onClick={onNextClick}>\r\n            {nextLabel} <VscArrowRight/>\r\n          </Button>\r\n        }\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { addAccessory } from \"../store/build\"\r\nimport { selectAccessoryById } from \"../store/catalog\"\r\nimport { openSelectAccessoriesScreen, selectDisplayedId } from \"../store/ui\"\r\nimport \"./AccessoryDetails.css\"\r\nimport \"./App.css\"\r\nimport FooterNav from \"./components/FooterNav\"\r\n\r\nexport default function AccessoryDetails() {\r\n  const dispatch = useDispatch()\r\n\r\n  const id = useSelector(selectDisplayedId)\r\n  \r\n  const accessory = useSelector(selectAccessoryById(id))\r\n  console.log(\"acc \", accessory)\r\n  return (\r\n    <>\r\n      <div className=\"screen-inner-container accessory-details\">\r\n        <div className=\"left-col\">\r\n          {accessory && <img src={accessory.featured_image && process.env.REACT_APP_ASSETS_URL + accessory.featured_image.url} alt=\"\" />}\r\n        </div>\r\n        <div className=\"right-col\">\r\n          <h3>{accessory?.name}</h3>\r\n          {accessory?.rrp && <h5>${accessory?.rrp}</h5>}\r\n          <p>{accessory?.description}</p>\r\n\r\n        </div>\r\n      </div>\r\n      <FooterNav \r\n        onNextClick={() => {\r\n          if(accessory)\r\n            dispatch(addAccessory(accessory.id));\r\n            \r\n          dispatch(openSelectAccessoriesScreen())\r\n        }}\r\n        onPrevClick={() => {dispatch(openSelectAccessoriesScreen()) }}\r\n        showNext={true}\r\n        showPrev={true}\r\n        prevEnabled={true}\r\n        nextEnabled={true} \r\n        nextLabel={\"Add to Build \"}\r\n        prevLabel=\"Back\" />\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { address, updateCustomerAddress } from \"../store/customer\"\r\nimport \"./form.css\"\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function AddressForm(props: props) {\r\n  const dispatch = useDispatch()\r\n  const { register, getValues, triggerValidation } = useForm<address>()\r\n  \r\n  //todo - fix\r\n  useEffect(() => {\r\n    props.onValidChange(false)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleChange = async () => {\r\n    dispatch(updateCustomerAddress(getValues()))\r\n    const result = await triggerValidation()\r\n    props.onValidChange(result)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onChange={handleChange} className=\"szForm\">\r\n        <fieldset>\r\n          <legend>Enter your address</legend>\r\n          <label htmlFor=\"address-line-1\">\r\n            <span className=\"label-text\">Line 1</span>\r\n            <input\r\n              id=\"address-line-1\"\r\n              name=\"address-line-1\"\r\n              placeholder=\"11 Smith St\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"address-line-2\">\r\n            <span className=\"label-text\">Line 2</span>\r\n            <input\r\n              id=\"address-line-2\"\r\n              name=\"address-line-2\"\r\n              placeholder=\"\"\r\n              ref={register}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"city\">\r\n            <span className=\"label-text\">City</span>\r\n            <input\r\n              id=\"city\"\r\n              name=\"city\"\r\n              placeholder=\"Melbourne\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"country\">\r\n            <span className=\"label-text\">Country</span>\r\n            <input\r\n              id=\"country\"\r\n              name=\"country\"\r\n              defaultValue=\"Australia\"\r\n              placeholder=\"Australia\"\r\n              ref={register({\r\n                required: true,\r\n              })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"state\">\r\n            <span className=\"label-text\">State</span>\r\n            <input\r\n              id=\"state \"\r\n              name=\"state\"\r\n              placeholder=\"VIC\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n        </fieldset>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import styled from 'styled-components/macro'\r\n\r\ninterface theProps {\r\n  isActive?: boolean\r\n}\r\n\r\nexport const Wrapper = styled.div<theProps>`\r\n  border: 1px solid var(--grey-2);\r\n  display: grid;\r\n  grid-template-columns: auto 1fr auto;\r\n  align-items: center;\r\n  padding: 4px;\r\n  box-sizing: border-box;\r\n  min-width: 320px;\r\n`\r\n\r\n\r\nexport const Icon = styled.div`\r\n  font-size: 45px;\r\n  margin-right: 6px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg{\r\n    color: var(--grey-4);\r\n    stroke-width: 1;\r\n  }\r\n`\r\n\r\nexport const InfoWrapper = styled.div`\r\n    align-self: flex-start;\r\n`\r\n\r\nexport const Title = styled.div`\r\n  margin: 0;\r\n  margin-top: 6px;\r\n  font-size: 20px;\r\n  color: var(--accent-dark);\r\n  line-height: 20px;\r\n  `\r\n\r\nexport const Price = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 800;\r\n  color: var(--grey-5);\r\n`\r\n\r\nexport const Subtitle = styled.div`\r\n  color: var(--grey-5);\r\n  font-size: 15px;\r\n`","import React from \"react\"\r\nimport { FiShoppingBag } from \"react-icons/fi\"\r\nimport { useSelector } from \"react-redux\"\r\nimport {\r\n  selectBuildAccessories,\r\n  selectBuildCost, selectBuildModel,\r\n  selectBuildProduct\r\n} from \"../../../store/build\"\r\nimport { formatCurrency } from \"../../../utils/utils\"\r\n// import \"./BuildStatusBox.css\"\r\nimport { Icon, InfoWrapper, Price, Subtitle, Title, Wrapper } from \"./style\"\r\n\r\nexport default function BuildStatusBox() {\r\n  const product = useSelector(selectBuildProduct)\r\n  const model = useSelector(selectBuildModel)\r\n  const accessories = useSelector(selectBuildAccessories)\r\n  const productTitle = model?.name ?  model?.name : product?.name\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Icon>\r\n        <FiShoppingBag />\r\n      </Icon>\r\n      <InfoWrapper>\r\n        <Title>{productTitle ? productTitle : \"Select Product\"}</Title>\r\n        <Subtitle>{accessories.length} Accessories</Subtitle>\r\n      </InfoWrapper>\r\n      <Price>\r\n        <span>{formatCurrency(useSelector(selectBuildCost))}</span>\r\n      </Price>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import styled from 'styled-components/macro'\r\n\r\nexport const ProductInfo = styled.div`\r\n  flex-basis: var(--sidebar-width);\r\n  overflow-y: scroll;\r\n  margin-left: 2%;\r\n  width:33%;\r\n  //todo: dynamic height or use variable\r\n  max-height: 600px;\r\n`\r\nexport const Price = styled.div`\r\n  color: var(--accent-dark);\r\n  font-size: 24px;\r\n`\r\nexport const ProductImage = styled.img`\r\n  /* width:100%; */\r\n  width: calc(100% - var(--sidebar-width));\r\n  height:auto;\r\n  object-fit: contain;\r\n`","import React from \"react\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectProductById } from \"../../../store/catalog\"\r\nimport { closeProductDetailsScreen, nextBuilderStep, selectDisplayedId } from \"../../../store/ui\"\r\nimport { formatCurrency } from \"../../../utils/utils\"\r\nimport { Screen } from \"../../common/style\"\r\nimport FooterNav from \"../FooterNav\"\r\nimport { Price, ProductImage, ProductInfo } from \"./style\"\r\nexport default function ProductDetails() {\r\n\r\n  const id = useSelector(selectDisplayedId)\r\n  const product = useSelector(selectProductById(id))\r\n  const dispatch = useDispatch()\r\n\r\n  \r\n  return (\r\n    <>\r\n      <Screen>\r\n        {product && \r\n        <ProductImage src={\"\" + process.env.REACT_APP_ASSETS_URL + product?.featured_image?.url} alt=\"\" />}\r\n        <ProductInfo>\r\n          <h3>{product && product?.name}</h3>\r\n          <Price>{product?.rrp && formatCurrency(product.rrp)}</Price>\r\n          <ReactMarkdown>{product?.description +\"\"}</ReactMarkdown>\r\n        </ProductInfo>\r\n      </Screen>\r\n      <FooterNav \r\n        onNextClick={() => {dispatch(nextBuilderStep()); }}\r\n        onPrevClick={() => {dispatch(closeProductDetailsScreen()); }}\r\n        showNext={true}\r\n        showPrev={true}\r\n        prevEnabled={true}\r\n        nextEnabled={true} \r\n        nextLabel={\"Select \" + product?.name + \" Model\"}\r\n        prevLabel=\"Back\" />\r\n      \r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { customerDetails, updateCustomerDetails } from \"../store/customer\"\r\nimport \"./form.css\"\r\n\r\ntype handlerfunc = () => void;\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function ContactDetailsForm(props: props) {\r\n  const dispatch = useDispatch()\r\n  const { register, errors, getValues, triggerValidation } = useForm<\r\n    customerDetails\r\n  >({\r\n    mode: \"onChange\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    props.onValidChange(false)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  \r\n  const handleChange = async () => {\r\n    dispatch(updateCustomerDetails(getValues()))\r\n    const result = await triggerValidation()\r\n    props.onValidChange(result)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onChange={handleChange} className=\"szForm\">\r\n        <fieldset>\r\n          <legend>Enter your contact details</legend>\r\n          <label htmlFor=\"firstName\">\r\n            <span className=\"label-text\">First Name</span>\r\n            <input\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              placeholder=\"John\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"surname\">\r\n            <span className=\"label-text\">Surname</span>\r\n            <input\r\n              id=\"surname\"\r\n              name=\"surname\"\r\n              placeholder=\"Smith\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"phone\">\r\n            <span className=\"label-text\">Phone</span>\r\n            <input\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              placeholder=\"0400 000 000\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"email\">\r\n            <span className=\"label-text\">Email</span>\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"your@email.com\"\r\n              ref={register({\r\n                required: true,\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n            />\r\n          </label>\r\n          {errors.email && <span>{errors.email.message}</span>}\r\n\r\n          <label htmlFor=\"postcode\">\r\n            <span className=\"label-text\">Postcode</span>\r\n            <input\r\n              id=\"postcode \"\r\n              name=\"postcode\"\r\n              placeholder=\"3000\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"newsletter\" className=\"no-bg\">\r\n            <input\r\n              id=\"newsletter\"\r\n              type=\"checkbox\"\r\n              name=\"newsletter\"\r\n              defaultChecked={true}\r\n              ref={register}\r\n            />\r\n            Sign up for special offers and promotions\r\n          </label>\r\n        </fieldset>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectCompanyById, selectCompanyDetails } from \"../store/companies\"\r\nimport { deliveryDetails, updateDeliveryDetails } from \"../store/customer\"\r\nimport \"./form.css\"\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function DeliveryDetailsForm(props: props) {\r\n  const dispatch = useDispatch()\r\n  const companies = useSelector(selectCompanyDetails);\r\n  \r\n  console.log(companies)\r\n  const { register, triggerValidation, getValues } = useForm<deliveryDetails>({\r\n    mode: \"onChange\",\r\n    reValidateMode: \"onChange\",\r\n  })\r\n  const [selectedCompanyId, setselectedCompanyId] = useState(companies[0].id)\r\n  const selectedCompany = useSelector(selectCompanyById(selectedCompanyId))\r\n\r\n  useEffect(() => {\r\n    props.onValidChange(false)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n\r\n  const handleChange = async () => {\r\n    dispatch(updateDeliveryDetails(getValues()))\r\n    setselectedCompanyId(getValues().dealer)\r\n    const result = await triggerValidation()\r\n    props.onValidChange(result)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onChange={handleChange} className=\"szForm\">\r\n        <fieldset>\r\n          <legend>Delivery Method</legend>\r\n          <label htmlFor=\"delivery\" className=\"no-bg radio\">\r\n            <input\r\n              id=\"delivery\"\r\n              name=\"deliveryMethod\"\r\n              type=\"radio\"\r\n              value=\"delivery\"\r\n              ref={register}\r\n            />\r\n            <span className=\"label-text\">Delivery</span>\r\n          </label>\r\n\r\n          <label htmlFor=\"pickup\" className=\"no-bg radio\">\r\n            <input\r\n              id=\"pickup\"\r\n              name=\"deliveryMethod\"\r\n              type=\"radio\"\r\n              value=\"pickup\"\r\n              ref={register({\r\n                validate: () => {\r\n                  console.log(getValues())\r\n                  return getValues().deliveryMethod !== \"\"\r\n                },\r\n              })}\r\n            />\r\n            <span className=\"label-text\">Pick Up</span>\r\n          </label>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>Choose your dealer</legend>\r\n          <select name=\"dealer\" id=\"dealer\" defaultValue={companies[0].id} ref={register}>\r\n            {companies.map((company, idx) => <option value={company?.id} key={idx}>{company?.state} - {company?.name} - {company?.city}</option>)}\r\n          </select>\r\n        </fieldset>\r\n      </form>\r\n      {selectedCompany && <div className=\"dealer-details-display\">\r\n        <h3 className=\"dealer-name\">{selectedCompany?.name}</h3>\r\n        <span className=\"dealer-phone\">{selectedCompany?.address_line_1}, </span>\r\n        {selectedCompany?.address_line_2 && <span className=\"dealer-address2\">{selectedCompany?.address_line_2}</span>}\r\n        <span className=\"dealer-city\">{selectedCompany?.city}</span><br/>\r\n        <span className=\"dealer-state\">{selectedCompany?.state}</span><br/>\r\n        <span className=\"dealer-country\">{selectedCompany?.country}</span><br/>\r\n        {selectedCompany?.phone && <span className=\"dealer-phone\">Phone: {selectedCompany?.phone}<br/></span>}\r\n        <span className=\"dealer-website\"><a href={selectedCompany?.website_url} target=\"_blank\" rel='noopener noreferrer' >Visit Website</a></span>\r\n      </div>}\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectModelById } from \"../store/catalog\"\r\nimport { closeModelDetailsScreen, nextBuilderStep, selectDisplayedId } from \"../store/ui\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./App.css\"\r\nimport FooterNav from \"./components/FooterNav\"\r\nimport \"./ModelDetails.css\"\r\n\r\nexport default function ModelDetails() {\r\n  \r\n  const id = useSelector(selectDisplayedId)\r\n  const model = useSelector(selectModelById(id))\r\n  const dispatch = useDispatch()\r\n  console.log(id)\r\n  return (\r\n    <>\r\n      <div className=\"model-details-section\">\r\n        <div className=\"model-image-container\">\r\n          {model && <img src={\"\" + process.env.REACT_APP_ASSETS_URL + model?.featured_image?.url} alt=\"\" />}\r\n        </div> \r\n        <div className=\"model-details\">\r\n          <h3>{model && model?.name}</h3>\r\n          <h5 className=\"model-price\">{model?.rrp && formatCurrency(model.rrp)}</h5>\r\n          <p>{model && model.description}</p>\r\n        </div>\r\n      </div>\r\n      <FooterNav \r\n        onNextClick={() => {dispatch(nextBuilderStep()); }}\r\n        onPrevClick={() => {dispatch(closeModelDetailsScreen()); }}\r\n        showNext={true}\r\n        showPrev={true}\r\n        prevEnabled={true}\r\n        nextEnabled={true} \r\n        nextLabel={\"Select \" + model?.name + \" Model\"}\r\n        prevLabel=\"Back\" />\r\n      \r\n    </>\r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { animated, config, useSprings } from \"react-spring\"\r\nimport { callWebhook, selectBuild, selectBuildModel, setModel } from \"../store/build\"\r\nimport { selectCompatibleModels } from \"../store/catalog\"\r\nimport { selectSettings } from \"../store/settings\"\r\nimport { showModelDetailsScreen } from \"../store/ui\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./ModelPicker.css\"\r\n\r\n\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function ModelPicker(props: props) {\r\n  const dispatch = useDispatch()\r\n\r\n  const models = useSelector(selectCompatibleModels) || []\r\n  const model = useSelector(selectBuildModel) \r\n  const build = useSelector(selectBuild)\r\n  const settings = useSelector(selectSettings)\r\n\r\n  const springs = useSprings(models.length || 0, models.map( (item, idx) => {\r\n    return ({ \r\n      from: {\r\n        transform: `translate3d(0px, 40px,  0)`,\r\n        opacity:0\r\n      },\r\n      to: {\r\n        transform: `translate3d(0px, 0px, 0)`,\r\n        opacity:1\r\n      },\r\n      delay: idx*100,\r\n      config: config.stiff\r\n    })\r\n  }\r\n  )); \r\n\r\n  // const imageStyle = useSpring(\r\n  //   { \r\n  //     from: {\r\n  //       scale: `3`,\r\n  //       opacity:0,\r\n  //       transform: `translate3d(0px, -20px, 0)`,\r\n  //     },\r\n  //     to: {\r\n  //       transform: `translate3d(0px, 0px, 0)`,\r\n  //       opacity:1,\r\n  //       scale: `1`,\r\n  //     },\r\n  //     config: config.molasses\r\n  //   });\r\n\r\n  //if one of these models is selected, all progress\r\n  useEffect(() => {\r\n    if (models?.find((prod) => prod.id === model?.id)) {\r\n      props.onValidChange(true)\r\n    } else {\r\n      props.onValidChange(false)\r\n    }\r\n  })\r\n  let buildItemsMarkup\r\n  \r\n  \r\n  if (models) {\r\n    buildItemsMarkup = springs.map((value, idx) => {\r\n      const x = models[idx];\r\n      return (\r\n        <animated.div\r\n          className={cx(\"product\", { selected: model?.id === x.id })}\r\n          style={value}\r\n          key={x.id}\r\n          onClick={() => {\r\n            dispatch(setModel(x.id))\r\n            // any click make this valid. if validation is more complex,\r\n            // you can add some state if nececssary\r\n            console.log('called')\r\n            props.onValidChange(true)\r\n            if( settings?.webhook_url){\r\n              dispatch(callWebhook(settings?.webhook_url, build))\r\n            }\r\n          }}\r\n        >\r\n          <div \r\n            className=\"product-thumb-wrapper\"\r\n          >\r\n            {x.featured_image?.url && (\r\n              <img\r\n                className=\"product-thumb\"\r\n                src={process.env.REACT_APP_ASSETS_URL + x.featured_image?.url}\r\n                alt={x.name}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"select-product-details\">\r\n            <h3 className=\"product-title\">{x.name}</h3>\r\n            <p className=\"product-short_description\">{x.short_description}</p>\r\n            <div className=\"product-bottom-line\">\r\n              {x.rrp && <h4 className=\"product-price\">Starts at {formatCurrency(x.rrp)}</h4>}\r\n              <button className=\"secondary-link text-button\" onClick={()=>dispatch(showModelDetailsScreen(x.id))}>View Specs</button>\r\n            </div>\r\n\r\n          </div>\r\n        </animated.div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"product-listing\">\r\n      {buildItemsMarkup}\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectBuildProduct, setProduct } from \"../store/build\"\r\nimport { selectProducts } from \"../store/catalog\"\r\nimport { showProductDetailsScreen } from \"../store/ui\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./ProductPicker.css\"\r\n\r\n\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function ProductPicker(props: props) {\r\n  const dispatch = useDispatch()\r\n  const products = useSelector(selectProducts)\r\n  const product = useSelector(selectBuildProduct)\r\n\r\n  //if one of these products is selected, allow progress\r\n  useEffect(() => {\r\n    if (products.find((prod) => prod.id === product?.id)) {\r\n      props.onValidChange(true)\r\n    } else {\r\n      props.onValidChange(false)\r\n    }\r\n  })\r\n\r\n  // const cols = products.length >= 3 ? '1fr 1fr 1fr' : '1fr 1fr';\r\n  // const productStyle = products.length < 3 ? {\r\n  //   height: '500px'\r\n  // } : {};style={{gridTemplateColumns: cols}}\r\n\r\n  let buildItemsMarkup\r\n  if (products) {\r\n    buildItemsMarkup = products.map((x) => {\r\n      return (\r\n        <div\r\n          className={cx(\"product\", { selected: product?.id === x.id }) }\r\n          key={x.id}\r\n          // style={productStyle}\r\n          onClick={() => {\r\n            dispatch(setProduct(x.id))\r\n          }}\r\n        >\r\n          <div className=\"product-thumb-wrapper\">\r\n            {x.featured_image?.url && (\r\n              <img\r\n                className=\"product-thumb\"\r\n                alt={x.name}\r\n                src={x.featured_image?.url}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"select-product-details\">\r\n            <h3 className=\"product-title\">{x.name}</h3>\r\n            <p className=\"product-short_description\">{x.short_description}</p>\r\n            <div className=\"product-bottom-line\">\r\n              {x.rrp && <h4 className=\"product-price\">Starts at {formatCurrency(x.rrp)}</h4>}\r\n              <button className=\"primary-link text-button\" onClick={()=>dispatch(showProductDetailsScreen(x.id))}>View Specs</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"product-listing\" >\r\n      {buildItemsMarkup}\r\n      {/* <Link className=\"primary-button\" to=\"/select-accessories/\">Select Model ></Link> */}\r\n    </div>\r\n    \r\n  )\r\n}\r\n","import styled from 'styled-components/macro'\r\n\r\ninterface FilterProps {\r\n  readonly isActive: boolean;\r\n}\r\n\r\nexport const FilterButton = styled.button<FilterProps>`\r\n    border-radius: 100px;\r\n    padding: 5px 15px;\r\n    margin: 3px 6px;\r\n    font-size: 13px;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    color: ${p => p.isActive ? p.theme.accentDark : p.theme.grey2};\r\n    border: 1px solid ${p => p.isActive ? p.theme.text : p.theme.grey2};\r\n    \r\n    &:hover{\r\n        color: ${p => p.isActive ? p.theme.accentDark : p.theme.grey5};\r\n        border: 1px solid ${p => p.isActive ? p.theme.accendDark : p.theme.grey5};\r\n    }\r\n`\r\n\r\nexport const FilterWrapper = styled.div`\r\n    margin-left: -6px;\r\n    margin-right: -6px;\r\n    margin-bottom: 14px;\r\n`","import React, { useState } from \"react\";\r\nimport { FilterButton, FilterWrapper } from './style';\r\n\r\ninterface filterprops {\r\n    items: string[]\r\n    onFilter: (item: string) => void\r\n}\r\n\r\nexport default function FilterSet(props:filterprops){\r\n\r\n  const [filter, setFilter] = useState(\"\");\r\n  const filterBy = (catName: string) => {\r\n    if(filter === catName){\r\n      setFilter(\"\")\r\n      props.onFilter(\"\")\r\n    } else {\r\n      setFilter(catName)\r\n      props.onFilter(catName)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <FilterWrapper>\r\n      {props.items.map( filterStr => \r\n        <FilterButton \r\n          key={filterStr} \r\n          isActive={filter === filterStr} \r\n          onClick={() => filterBy(filterStr)}>\r\n          {filterStr}\r\n        </FilterButton> )}\r\n    </FilterWrapper>\r\n  )\r\n}","import cx from \"classnames\"\r\nimport React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { addAccessory, removeAccessory, selectBuildAccessoryIds } from \"../store/build\"\r\nimport { selectCategories } from \"../store/catalog\"\r\nimport { closeSelectAccessoriesScreen, showAccessoryDetailsScreen } from \"../store/ui\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./App.css\"\r\nimport FilterSet from \"./components/FilterSet/\"\r\nimport FooterNav from \"./components/FooterNav\"\r\nimport MiniCard from \"./components/MiniCard\"\r\nimport \"./SelectAccessories.css\"\r\n\r\nexport default function SelectAccessories() {\r\n  const cats                = useSelector(selectCategories)\r\n  const buildAccessories    = useSelector(selectBuildAccessoryIds)\r\n  const dispatch            = useDispatch()\r\n  const [filterCat, setFilterCat] = useState(\"\");\r\n\r\n  const handleFilterChange = (filterCat: string) => {\r\n    setFilterCat(filterCat);\r\n  }\r\n\r\n  const catsMarkup = cats\r\n    .filter(cat=> {\r\n      if( cat.accessories.length === 0 ){\r\n        return false;\r\n      }\r\n      return filterCat === \"\" ? true : cat.name === filterCat})\r\n    .map((cat) => { \r\n      const accessoryMarkup = cat.accessories.map(accessory=>{\r\n        return (\r\n          <MiniCard \r\n            key={accessory.id} \r\n            image={accessory.featured_image && process.env.REACT_APP_ASSETS_URL + accessory.featured_image.url}\r\n            onDetailsClick={() => {dispatch(showAccessoryDetailsScreen(accessory.id))}}\r\n            onAddClick={() => dispatch(addAccessory(accessory.id))}\r\n            onRemoveClick={() => dispatch(removeAccessory(accessory.id))}\r\n            title={accessory.name}\r\n            description={formatCurrency(accessory.rrp || 0)}\r\n            showChevron={false}\r\n            isAdded={buildAccessories.find(accId => accId === accessory.id) !== undefined}\r\n            showAdd={true}\r\n          />)\r\n      })\r\n    \r\n      return (\r\n        <div className=\"accessory-category\" key={cat.id}>\r\n          <h3 className=\"accessory-category-title\">{cat.name}</h3>\r\n          <div className=\"accessory-category-content\">\r\n            {accessoryMarkup}\r\n          </div>\r\n        </div>\r\n      )\r\n    }, {})\r\n  \r\n  return (\r\n    <>\r\n      <div className={cx(\"accessories-screen-inner-container screen-inner-container\")} >\r\n        <h2 className=\"screen-title\">Add Accessories</h2>\r\n        <FilterSet items={cats.filter(cat=> cat.accessories.length !== 0).map(cat=> cat.name)} onFilter={handleFilterChange} />\r\n        {catsMarkup}\r\n\r\n      </div>\r\n      <FooterNav \r\n        onNextClick={() => {dispatch(closeSelectAccessoriesScreen()); }}\r\n        onPrevClick={() => {dispatch(closeSelectAccessoriesScreen()); }}\r\n        showNext={true}\r\n        showPrev={true}\r\n        prevEnabled={true}\r\n        nextEnabled={true} \r\n        nextLabel={\"Done\"}\r\n        prevLabel=\"Back\" />\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\n","import { animated } from \"react-spring\";\r\nimport styled, { css } from 'styled-components/macro';\r\ninterface theProps {\r\n  isActive?: boolean\r\n}\r\n\r\nexport const TitleText = styled.h3`\r\n  font-size:18px;\r\n  letter-spacing: -0.53px;\r\n  white-space: nowrap;\r\n  line-height: 0 !important;\r\n  margin: 0 !important;\r\n  color:var(--grey-3) !important;\r\n  font-weight: 300!important;\r\n  /* height:0; */\r\n  \r\n`\r\n\r\nexport const Wrapper = styled(animated.div)<theProps>`\r\n  position:absolute;\r\n  border: ${p=>p.isActive ? '2px solid var(--accent-dark-trans);' : '2px solid var(--grey-2);'};\r\n  border-radius: 999px;\r\n  display:flex;\r\n  overflow: hidden;\r\n  justify-content: center;\r\n  will-change: transform, width;\r\n  align-items:center;\r\n  padding: 18px;\r\n  box-sizing: border-box;\r\n  /* width: ${p=> !p.isActive ? '36px' : 'auto'}; */\r\n  height: ${p=> !p.isActive ? '36px' : 'auto'};\r\n  ${TitleText} {\r\n    ${p=> (p.isActive && css`\r\n      color: var(--accent-dark) !important;\r\n      font-weight: bold!important;`\r\n  )}  \r\n  }\r\n`\r\n","\r\nimport React from \"react\";\r\nimport { config, useSpring } from \"react-spring\";\r\nimport { TitleText, Wrapper } from \"./style\";\r\n\r\ntype StepTitleProps = {\r\n  title: string\r\n  isActive?: boolean\r\n  number: number\r\n}\r\n\r\nexport default function StepTitle(props: StepTitleProps) {\r\n\r\n  const expand = useSpring({\r\n    config: config.stiff,\r\n    width: props.isActive ? `${220}px` : '36px'\r\n  });\r\n  const text = props.isActive ? props.number +\". \"+ props.title : props.number;\r\n  return (\r\n    <Wrapper style={expand} isActive={props.isActive} >\r\n      <TitleText as=\"h3\" >{text}</TitleText>\r\n    </Wrapper>\r\n\r\n  )\r\n}\r\n","\r\nimport React, { useRef } from \"react\";\r\nimport { animated, config, useSprings } from 'react-spring';\r\nimport StepTitle from \"./components/StepTitle\";\r\n\r\ninterface StepTitlesProps {\r\n    titles: string[],\r\n    activeStep: string\r\n}\r\nexport default function StepTitles (props:StepTitlesProps) {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const activeIndex = props.titles.findIndex((s) => s === props.activeStep);\r\n\r\n  const springs = useSprings(props.titles.length, props.titles.map( (item, idx) => {\r\n    const extra = idx > activeIndex ? 180 : 0;\r\n    return ({ \r\n      to: {\r\n        transform: `translate3d(${idx*50+extra}px, 0, 0)`,\r\n      },\r\n      config: config.stiff\r\n    })\r\n  }\r\n  )); \r\n\r\n  // const stepTitles = props.titles.map( (title, idx) => \r\n  //   <animated.div >\r\n  //     <StepTitle number={idx+1} title={title} isActive={title===props.activeStep} key={idx} />\r\n  //   </animated.div>)\r\n  const stepTitles = springs.map((value, idx, arrayVals) =>{\r\n    return (\r\n      <animated.div style={{position:'absolute', willChange: 'transform', ...value}}>\r\n        <StepTitle number={idx+1} title={props.titles[idx]} isActive={props.titles[idx]===props.activeStep} />\r\n      </animated.div>)\r\n  })\r\n\r\n  return <div className=\"step-title-container\" ref={ref}>{stepTitles}</div> \r\n\r\n}\r\n","export const theme = {\r\n  text: \"#373a47\",\r\n  black: \"#373a47\",\r\n  black1: \"#282a33\",\r\n  accentDark: \"#e41212\",\r\n  accentDarkHover: \"#ff1d1d\",\r\n  inputOutlineHover: \"#ff1d1d\",\r\n  white: \"#ffffff\",\r\n  grey1: \"#f6f7f9\",\r\n  grey1x: \"#e6e7e9\",\r\n  grey2: \"#dde0e6\",\r\n  grey3: \"#a5a9be\",\r\n  grey4: \"#9599ae\",\r\n  grey5: \"#7a7f97\",\r\n  grey6: \"#5a5f77\",\r\n  grey7: \"#4a4f67\",\r\n  inverseText: \"#dde0e6\",\r\n  disabled: \"#cacaca\",\r\n  boxShadow: \"#a5a9beaa\",\r\n  confirm: \"green\",\r\n  warning: \"red\",\r\n  confirmBg: \"#dbf7db\",\r\n  headingFont: '\"Nunito\", sans-serif',\r\n  bodyFont: '\"Nunito\", sans-serif',\r\n  productSelectGutter: '10px',\r\n  productMinWidth: '200px',\r\n  productSelectRows: '2',\r\n  sidebarWidth: '38%',\r\n  headerHeight: '60px',\r\n  footerHeight: '120px',\r\n  productSelectHeight: '312px',\r\n  accessoryButtonHeight: '58px'\r\n\r\n}","import cx from \"classnames\"\r\nimport React, { useState } from \"react\"\r\nimport { VscCreditCard, VscMail } from \"react-icons/vsc\"\r\nimport { useSelector } from \"react-redux\"\r\nimport {\r\n  selectBuildAccessories,\r\n  selectBuildCost, selectBuildImage, selectBuildModel,\r\n  selectBuildProduct,\r\n  selectFullBuild\r\n} from \"../store/build\"\r\nimport { selectCustomerDetails } from \"../store/customer\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./ThankYouScreen.css\"\r\n\r\nexport default function ThankYouScreen() {\r\n  const product = useSelector(selectBuildProduct)\r\n  const model = useSelector(selectBuildModel)\r\n  const accessories = useSelector(selectBuildAccessories)  \r\n  const image = useSelector(selectBuildImage)\r\n\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const allDetails = {\r\n    ...useSelector(selectFullBuild), \r\n    customer: useSelector(selectCustomerDetails)\r\n  };\r\n  const sendMail = () =>{\r\n\r\n    setEmailSent(true);\r\n    if(window.szReactPlugin && emailSent===false){\r\n      fetch(window.szReactPlugin?.email_endpoint, {\r\n\r\n        method: \"POST\",\r\n        // credentials: 'same-origin',\r\n        headers: {\r\n          'Accept': 'application/json, text/plain, */*',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(allDetails)\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data) {\r\n            console.log(data)\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"thankyou-wrapper\">\r\n      <h1 className=\"h1\">Thank you for your enquiry</h1>\r\n      <h3 className=\"thankyou-productname\"><span className=\"thankyou-prod-name\">{product?.name}</span> {model?.name}</h3>\r\n      {accessories.length > 0 && <span className=\"thankyou-accessories\">With {accessories.length} Accessories</span>}\r\n      <div className=\"thankyou-product-image\">\r\n        <img src={\"\" + process.env.REACT_APP_ASSETS_URL + image?.url} alt=\"\" />\r\n      </div>\r\n      <div className=\"thankyou-box-price\">\r\n        Total <span>{formatCurrency(useSelector(selectBuildCost))}</span>\r\n      </div>\r\n      <div className=\"thankyou-buttons\">\r\n        <button className={cx(\"outline-button secondary\", {disabled: emailSent===true})} onClick={sendMail}><VscMail/> <span>Email Me a Copy</span></button>\r\n        <button className=\"primary-button\"><VscCreditCard/> <span>Checkout</span></button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { animated, config, useTransition } from 'react-spring'\r\nimport { ThemeProvider } from \"styled-components\"\r\nimport { callWebhook, selectFullBuild } from \"../store/build\"\r\nimport { nextBuilderStep, prevBuilderStep, selectCurrentStep, selectCurrentUiScreen, selectScreenOrder, UIScreenTitles } from \"../store/ui\"\r\nimport AccessoriesPicker from \"./AccessoriesPicker\"\r\nimport AccessoryDetails from \"./AccessoryDetails\"\r\nimport AddressForm from \"./AddressForm\"\r\nimport \"./App.css\"\r\nimport BuildStatusBox from \"./components/BuildStatusBox\"\r\nimport FooterNav from \"./components/FooterNav\"\r\nimport ProductDetails from \"./components/ProductDetails\"\r\nimport ContactDetailsForm from \"./ContactDetailsForm\"\r\nimport DeliveryDetailsForm from \"./DeliveryDetailsForm\"\r\nimport ModelDetails from \"./ModelDetails\"\r\nimport ModelPicker from \"./ModelPicker\"\r\nimport ProductPicker from \"./ProductPicker\"\r\nimport SelectAccessories from \"./SelectAccessories\"\r\nimport StepTitles from \"./StepTitles\"\r\nimport { theme } from './StyleConstants'\r\nimport ThankYouScreen from \"./ThankYouScreen\"\r\ndeclare global {\r\n  interface Window {szReactPlugin: {\r\n    webhook_url: string,\r\n    accent_color: string,\r\n    email_endpoint: string\r\n  }}\r\n}\r\n\r\nif( window.szReactPlugin ){\r\n  document.documentElement.style.setProperty('--accent-dark', window.szReactPlugin.accent_color);\r\n}\r\n\r\nfunction App() {\r\n  const currentScreen     = useSelector(selectCurrentUiScreen);\r\n  const currentScreenIdx  = useSelector(selectCurrentStep);\r\n  const screenNames       = useSelector(selectScreenOrder);\r\n  const fullBuild         = useSelector(selectFullBuild)\r\n  const dispatch          = useDispatch();\r\n  const transition        = useTransition(currentScreen, {\r\n    from: { transform: 'translateX(10%)', opacity:0 },\r\n    enter: { opacity: 1, transform: 'translateX(0%)' },\r\n    leave: { opacity: 0, transform: 'translateX(-0%)' },\r\n    config: config.slow\r\n    // delay: 1000,\r\n  })\r\n  \r\n  const [canAdvance, setCanAdvance] = useState(true);\r\n\r\n  const handleValidChange = (isValid:boolean) => {\r\n    setCanAdvance(isValid);\r\n  }\r\n\r\n  const handleNextClick = () => {\r\n    console.log(fullBuild)\r\n    if((currentScreen === UIScreenTitles.YOUR_DETAILS ||\r\n        currentScreen === UIScreenTitles.YOUR_ADDRESS)\r\n        && window.szReactPlugin?.webhook_url){\r\n      dispatch(callWebhook(window.szReactPlugin?.webhook_url, fullBuild));\r\n    }\r\n    dispatch(nextBuilderStep());\r\n    setCanAdvance(true); \r\n\r\n  }\r\n\r\n  const isWizardScreen = (screen:string) => {\r\n    switch(screen){\r\n    case UIScreenTitles.SELECT_PRODUCT:\r\n    case UIScreenTitles.SELECT_MODEL:\r\n    case UIScreenTitles.ADD_ACCESSORIES:\r\n    case UIScreenTitles.YOUR_DETAILS:\r\n    case UIScreenTitles.DELIVERY_DETAILS:\r\n    case UIScreenTitles.YOUR_ADDRESS:\r\n    case UIScreenTitles.CONFIRMATION:\r\n      return true;\r\n    default:\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const getScreen = (screen: string) => {\r\n    switch(screen){\r\n    case UIScreenTitles.SELECT_PRODUCT:\r\n      return <ProductPicker onValidChange={handleValidChange} />\r\n    case UIScreenTitles.SELECT_MODEL:\r\n      return <ModelPicker onValidChange={handleValidChange} />\r\n    case UIScreenTitles.ADD_ACCESSORIES:\r\n      return <AccessoriesPicker  />\r\n    case UIScreenTitles.YOUR_DETAILS:\r\n      return <ContactDetailsForm onValidChange={handleValidChange} />\r\n    case UIScreenTitles.DELIVERY_DETAILS:\r\n      return <DeliveryDetailsForm onValidChange={handleValidChange} />\r\n    case UIScreenTitles.YOUR_ADDRESS:\r\n      return <AddressForm onValidChange={handleValidChange} />\r\n    case UIScreenTitles.CONFIRMATION:\r\n      return <ThankYouScreen/>\r\n    case UIScreenTitles.MODEL_DETAILS:\r\n      return <ModelDetails/>\r\n    case UIScreenTitles.PRODUCT_DETAILS:\r\n      return <ProductDetails/>\r\n    case UIScreenTitles.ADD_ACCESSORIES_LIST:\r\n      return <SelectAccessories />\r\n    case UIScreenTitles.ACCESSORY_DETAILS:\r\n      return <AccessoryDetails />\r\n    }\r\n  }\r\n  \r\n  \r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"app\">\r\n        <div className=\"app-container\">\r\n          <div className=\"primary-container\">\r\n            <main>\r\n              <header>\r\n                {/* <h1 className=\"small-caps\">Configure Your Camper</h1> */}\r\n                \r\n                <StepTitles titles={screenNames} activeStep={screenNames[currentScreenIdx]} />\r\n                \r\n                <BuildStatusBox />\r\n              </header>\r\n              <div className=\"current-screen-container\">\r\n                {transition((style, theCurrentScreen, t, ) => \r\n                  <animated.div style={style} className={cx(\"item\", {active: theCurrentScreen === currentScreen})}>\r\n                    {getScreen(theCurrentScreen)}\r\n                  </animated.div> \r\n                )}\r\n              </div>\r\n              {isWizardScreen(currentScreen) &&             \r\n              <FooterNav \r\n                onNextClick={handleNextClick}\r\n                onPrevClick={() => { dispatch(prevBuilderStep()); setCanAdvance(true); }}\r\n                showNext={currentScreenIdx < screenNames.length-1}\r\n                showPrev={true}\r\n                prevEnabled={currentScreenIdx !== 0 }\r\n                nextEnabled={canAdvance} \r\n                nextLabel={screenNames[currentScreenIdx+1]}\r\n                prevLabel=\"Back\" />\r\n              }\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n          \r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './app/store/store';\r\nimport App from './app/ui/App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('sz-root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}