{"version":3,"sources":["app/utils/utils.ts","app/store/middleware/api.ts","app/store/build.ts","app/store/catalog.ts","app/store/companies.ts","app/store/customer.ts","app/store/settings.ts","app/store/ui.ts","app/store/store.ts","app/ui/AcccessoryDetailsSidebar.tsx","app/ui/Accordion.tsx","app/ui/AccessoriesList.tsx","app/ui/AccessoriesPicker.tsx","app/ui/AddressForm.tsx","app/ui/BuildStatusBox.tsx","app/ui/ContactDetailsForm.tsx","app/ui/DeliveryDetailsForm.tsx","app/ui/FooterNav.tsx","app/ui/ModelDetails.tsx","app/ui/ModelPicker.tsx","app/ui/ProductDetails.tsx","app/ui/ProductPicker.tsx","app/ui/StepTitle.tsx","app/ui/StepTitles.tsx","app/ui/ThankYouScreen.tsx","app/ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["formatCurrency","value","includeCents","formatter","Intl","NumberFormat","style","currency","format","Number","toLocaleString","normalize","data","isObject","Object","prototype","toString","call","isArray","flatten","attributes","id","map","item","key","apiCallBegan","createAction","api","dispatch","next","action","a","console","log","type","payload","url","graphQlQuery","onStart","onSuccess","onError","response","undefined","fetch","method","mode","cache","headers","redirect","body","JSON","stringify","graphQLClient","GraphQLClient","request","strapi3datastyle","message","initialState","productId","modelId","accessoryIds","customOptions","buildSlice","createSlice","name","reducers","setCustomOption","state","idx","findIndex","el","optionId","optionSelectionId","push","addAccessory","setProduct","setModel","removeAccessory","indexOf","newState","splice","buildPosted","callWebhook","actions","selectBuildAccessoryIds","build","selectBuildProduct","catalog","products","find","selectBuildModel","models","selectBuildAccessories","accessories","selectBuildSlides","slideshow_images","selectBuild","product","model","selectBuildImage","modelImg","featured_image","prodImg","selectBuildCost","productPrice","rrp","modelPrice","accessoryPrice","reduce","acc","curr","selectBuildCustomOptions","customOptionPickers","optionPicker","option_name","selectedOption","buildOption","option","selectedOptionId","customOptionPickersLoading","catalogOption","picker","options","selectFullBuild","image","catalogSlice","loading","accessoriesLoading","accessoryCategories","customOptionPickersRequested","customOptionPickersReceived","other_options","accessoriesRequested","accessoriesReceived","catalogRequested","catalogReceived","categoriesRequested","categoriesReceived","selectProducts","selectCompatibleModels","prod","selectModelById","length","selectCategories","companySlice","companies","companiesReceived","dealersAndManufacturers","companiesRequested","selectCompanyDetails","customerSlice","updateDeliveryDetails","updateCustomerDetails","updateCustomerAddress","address","selectCustomerDetails","customer","settings","webhook_url","require_user_contact_details_upfront","logo_light","settingsSlice","settingsRequested","settingsReceived","selectSettings","UIScreenTitles","builderStep","uiCurrentScreen","uiScreenOrder","uiDisplayingDetailsForId","uiSlice","nextBuilderStep","prevBuilderStep","setBuilderStep","showModelDetailsScreen","showProductDetailsScreen","closeProductDetailsScreen","closeModelDetailsScreen","selectCurrentStep","ui","selectCurrentUiScreen","selectDisplayedId","selectScreenOrder","store","configureStore","reducer","catalogReducer","buildReducer","uiReducer","settingsReducer","customerReducer","companiesReducer","middleware","getDefaultMiddleware","process","AccessoryDetailsSidebar","props","accessory","useSelector","className","src","alt","description","AccordionContext","React","createContext","openAccordionItem","setOpenAccordionItem","Accordion","useState","children","Children","child","isValidElement","cloneElement","index","Provider","AccordionItem","contentEl","useRef","useContext","isOpen","cx","open","onClick","title","maxHeight","current","scrollHeight","ref","AccessoriesList","cats","buildAccessories","useDispatch","catsMarkup","cat","accessoryMarkup","onDetailsClick","text","substring","accId","AccessoriesPicker","showDetails","setShowDetails","showingAccessoryId","setshowingAccessoryId","active","accessoryId","cursor","AddressForm","useForm","register","getValues","triggerValidation","useEffect","onValidChange","handleChange","result","Fragment","onChange","htmlFor","placeholder","required","defaultValue","BuildStatusBox","customOptionsMarkup","productTitle","ContactDetailsForm","errors","pattern","email","defaultChecked","DeliveryDetailsForm","reValidateMode","selectedCompanyId","setselectedCompanyId","selectedCompany","company","dealer","validate","deliveryMethod","city","address_line_1","address_line_2","country","phone","href","website_url","target","rel","FooterNav","showPrev","disabled","prevEnabled","onPrevClick","prevLabel","showNext","nextEnabled","onNextClick","nextLabel","ModelDetails","ModelPicker","buildItemsMarkup","x","selected","short_description","ProductDetails","selectProductById","ProductPicker","StepTitle","backLink","showBackButton","onBackClick","isActive","StepTitles","stepTitles","titles","activeStep","ThankYouScreen","emailSent","setEmailSent","allDetails","window","szReactPlugin","email_endpoint","then","json","catch","error","document","documentElement","setProperty","accent_color","App","currentScreen","currentScreenIdx","screenNames","fullBuild","transition","useTransition","from","transform","opacity","enter","leave","config","slow","canAdvance","setCanAdvance","handleValidChange","isValid","theCurrentScreen","t","div","screen","getScreen","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46faa057.chunk.js","sourcesContent":["export const formatCurrency = ( value: number, includeCents:boolean = false ): string => {\r\n  \r\n  if(includeCents){\r\n    \r\n  \r\n    // Create our number formatter.\r\n    var formatter = new Intl.NumberFormat('en-AU', {\r\n      style: 'currency',\r\n      currency: 'AUD',\r\n    });\r\n    return formatter.format(value); /* $2,500.00 */\r\n  } else {\r\n    return \"$\" + Number(value).toLocaleString()\r\n\r\n  }\r\n\r\n}\r\nexport const truncate = (text:string, index:number) => {\r\n  if(text.length > index) {\r\n    return text.substring(0, index) + \"\\u2026\";\r\n  }\r\n  return text;\r\n}\r\n\r\n/* takes strapiv4 response data and changes the structure back to strapiv3 style */\r\n/* ie. changes\r\nproducts{\r\n  data{\r\n    id   \r\n    attributes{\r\n      name\r\n    }\r\n  }\r\n}\r\nto\r\nproducts{\r\n  id\r\n  name\r\n}*/\r\nexport const normalize = (data:any) => {\r\n  const isObject = (data:any) =>\r\n    Object.prototype.toString.call(data) === '[object Object]'\r\n  const isArray = (data:any) =>\r\n    Object.prototype.toString.call(data) === '[object Array]'\r\n\r\n  const flatten = (data:any) => {\r\n    if (!data.attributes) return data\r\n\r\n    return {\r\n      id: data.id,\r\n      ...data.attributes\r\n    }\r\n  }\r\n\r\n  if (isArray(data)) {\r\n    return data.map((item:any) => normalize(item))\r\n  }\r\n\r\n  if (isObject(data)) {\r\n    if (isArray(data.data)) {\r\n      data = [...data.data]\r\n    } else if (isObject(data.data)) {\r\n      data = flatten({ ...data.data })\r\n    } else if (data.data === null) {\r\n      data = null\r\n    } else {\r\n      data = flatten(data)\r\n    }\r\n\r\n    for (const key in data) {\r\n      data[key] = normalize(data[key])\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  return data\r\n}\r\n","import { createAction, Middleware } from \"@reduxjs/toolkit\"\r\nimport { GraphQLClient } from \"graphql-request\"\r\nimport { normalize } from \"../../utils/utils\"\r\n\r\ninterface QueryVars {\r\n  key: string\r\n  value: string\r\n}\r\n\r\ninterface QueryVarsObj {\r\n  [key: string]: QueryVars\r\n}\r\n\r\ninterface apiPayload {\r\n  url: string\r\n  graphQlQuery?: string\r\n  // method?: string\r\n  data?: string\r\n  onSuccess?: string\r\n  onStart?: string\r\n  onError?: string\r\n}\r\n\r\n\r\nexport const apiCallBegan = createAction<apiPayload>(\"api/CallBegan\")\r\nexport const apiCallSuccess = createAction<any>(\"api/CallSuccess\")\r\nexport const apiCallFailed = createAction<string>(\"api/CallFailed\")\r\n\r\nconst api: Middleware = ({ dispatch }) => (next) => async (action) => {\r\n\r\n  console.log(action.type)\r\n  if (action.type !== apiCallBegan.type) return next(action)\r\n  next(action)\r\n\r\n  const {\r\n    url,\r\n    graphQlQuery,\r\n    data,\r\n    onStart,\r\n    onSuccess,\r\n    onError,\r\n    \r\n  } = action.payload\r\n  if (onStart) dispatch({ type: onStart })\r\n  \r\n  try {\r\n    let response = undefined;\r\n    //used to call webhooks\r\n    if (!graphQlQuery) {\r\n      response = await fetch(url, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'no-cors', // no-cors, *cors, same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n      });\r\n    \r\n    }\r\n\r\n    if(graphQlQuery){\r\n      const graphQLClient = new GraphQLClient(url, {\r\n        // headers: {\r\n        //   authorization: 'Bearer MY_TOKEN',\r\n        // },\r\n      })\r\n\r\n      response = await graphQLClient.request(graphQlQuery)\r\n    }\r\n\r\n    // General\r\n    // dispatch(apiCallSuccess(response))\r\n    // Specific\r\n    if (onSuccess){\r\n      if(response && graphQlQuery){\r\n        const strapi3datastyle = normalize(response as any)\r\n        dispatch({ type: onSuccess, payload: strapi3datastyle })\r\n      }\r\n\r\n    }\r\n  } catch (error) {\r\n    \r\n    console.log('exception '+error)\r\n    // General\r\n    // dispatch(apiCallFailed(error.message))\r\n    // Specific\r\n    \r\n    if (onError) dispatch({ type: onError, payload: (error as any).message })\r\n  }\r\n}\r\n\r\nexport default api\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { apiCallBegan } from './middleware/api';\r\nimport { AppThunk, RootState } from \"./store\";\r\n\r\n\r\nexport interface CustomOptionEntry {\r\n  optionId: string\r\n  optionSelectionId: string\r\n}\r\ninterface buildState {\r\n  productId: string | undefined\r\n  modelId: string | undefined\r\n  accessoryIds: string[]\r\n  customOptions: CustomOptionEntry[]\r\n}\r\n\r\nconst initialState: buildState = {\r\n  productId: undefined,\r\n  modelId: undefined,\r\n  accessoryIds: [],\r\n  customOptions: [],\r\n}\r\n\r\nexport const buildSlice = createSlice({\r\n  name: \"build\",\r\n  initialState,\r\n  reducers: {\r\n    setCustomOption: (state, action: PayloadAction<CustomOptionEntry>) => {\r\n      //find option and update it, or add it if it is new.\r\n      const idx = state.customOptions.findIndex(\r\n        (el) => el.optionId === action.payload.optionId\r\n      )\r\n\r\n      if (idx !== -1) {\r\n        state.customOptions[idx].optionSelectionId =\r\n          action.payload.optionSelectionId\r\n      } else state.customOptions.push(action.payload)\r\n    },\r\n    addAccessory: (state, action: PayloadAction<string>) => {\r\n      state.accessoryIds.push(action.payload)\r\n    },\r\n    setProduct: (state, action: PayloadAction<string>) => {\r\n      if (state.productId !== action.payload) {\r\n        state.modelId = undefined\r\n      }\r\n      state.productId = action.payload\r\n    },\r\n    setModel: (state, action: PayloadAction<string>) => {\r\n      if (state.modelId !== action.payload) {\r\n        state.accessoryIds = []\r\n      }\r\n      state.modelId = action.payload\r\n    },\r\n    removeAccessory: (state, action: PayloadAction<string>) => {\r\n      const idx = state.accessoryIds.indexOf(action.payload)\r\n      if (idx > -1) {\r\n        const newState = state.accessoryIds.splice(idx, 1)\r\n        console.log(newState)\r\n      }\r\n    },\r\n    buildPosted: () => {},\r\n  },\r\n})\r\n\r\nexport const postBuild = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery =  `{\r\n    accessoryCategories {\r\n      data{\r\n        id\r\n        attributes{\r\n          name          \r\n          accessories {\r\n            data {\r\n              attributes {\r\n                name\r\n                rrp\r\n                short_description\r\n                description\r\n              }\r\n            }\r\n          }\r\n        }\r\n    }\r\n  }\r\n}`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onSuccess: buildSlice.actions.buildPosted.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const callWebhook = (url:string, data:any): AppThunk => (dispatch) => {\r\n  console.log('Webhook Call Start')\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: url,\r\n      data:data\r\n    })\r\n  )\r\n}\r\n\r\nexport const {\r\n  setCustomOption,\r\n  addAccessory,\r\n  setProduct,\r\n  setModel,\r\n  removeAccessory,\r\n} = buildSlice.actions\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectAccessoryById = (state: RootState, id: string) =>\r\n  state.catalog.accessories.find((acc) => acc.id === \"\"+id)\r\nexport const selectBuildAccessoryIds = (state: RootState) =>\r\n  state.build.accessoryIds\r\nexport const selectBuildProduct = (state: RootState) =>\r\n  state.catalog.products?.find((el) => el.id === \"\"+state.build?.productId)\r\nexport const selectBuildModel = (state: RootState) =>\r\n  selectBuildProduct(state)?.models?.find((el) => el.id === \"\"+state.build.modelId)\r\nexport const selectBuildAccessories = (state: RootState) =>\r\n  state.build.accessoryIds.map((id) =>\r\n    state.catalog.accessories.find((el) => el.id === \"\"+id)\r\n  )\r\nexport const selectBuildSlides = (state: RootState) => \r\n  selectBuildModel(state)?.slideshow_images;\r\nexport const selectBuild = (state: RootState) => {\r\n  return {\r\n    product: selectBuildProduct(state),\r\n    model: selectBuildModel(state),\r\n    accessories: selectBuildAccessories(state),\r\n    \r\n  }\r\n}\r\nexport const selectBuildImage = (state: RootState) => {\r\n  const modelImg = selectBuildModel(state)?.featured_image\r\n  const prodImg = selectBuildProduct(state)?.featured_image\r\n  if (modelImg) {\r\n    return modelImg\r\n  } else {\r\n    return prodImg\r\n  }\r\n}\r\nexport const selectBuildCost = (state: RootState) => {\r\n  const productPrice = selectBuildProduct(state)?.rrp || 0\r\n  const modelPrice = selectBuildModel(state)?.rrp || 0\r\n  const accessoryPrice = selectBuildAccessories(state).reduce(\r\n    (acc, curr) => acc + (curr?.rrp || 0),\r\n    0\r\n  )\r\n  if (modelPrice) {\r\n    return modelPrice + accessoryPrice\r\n  } else if (productPrice) {\r\n    return productPrice\r\n  } else {\r\n    return 0\r\n  }\r\n}\r\n\r\n// give it id of an option picker and it will return\r\n// an object with the selected option from the option picker\r\nexport const selectBuildCustomOption = (id: string) => (state: RootState) => {\r\n  //for some reason the param id is a string... so careful of comparisons..\r\n  const buildOption = state.build.customOptions.find((option) => {\r\n    return option.optionId === id\r\n  })\r\n  const selectedOptionId = buildOption?.optionSelectionId\r\n\r\n  //could have an issue with this, but not with current ui design\r\n  if (state.catalog.customOptionPickersLoading) {\r\n    return undefined\r\n  }\r\n\r\n  const catalogOption = state.catalog.customOptionPickers.find(\r\n    (picker) => picker.id === id\r\n  )\r\n\r\n  return catalogOption?.options.find((option) => option.id === selectedOptionId)\r\n}\r\n\r\n//work out how to return all the options iwth their names\r\n/*[\r\n  {\r\n    name: 'Colour',\r\n    option: {\r\n      id,\r\n      name\r\n    }\r\n  }\r\n]*/\r\n//only returns the selected options\r\nexport const selectBuildCustomOptions = (state: RootState) => {\r\n  const buildOptions = state.catalog.customOptionPickers.map((optionPicker) => {\r\n    return {\r\n      name: optionPicker.option_name,\r\n      selectedOption: selectBuildCustomOption(optionPicker.id)(state),\r\n    }\r\n  })\r\n\r\n  return buildOptions\r\n}\r\n\r\nexport const selectFullBuild = (state: RootState) => {\r\n  \r\n  const buildproduct = selectBuildProduct(state)\r\n  const buildmodel = selectBuildModel(state)\r\n  const buildaccessories = selectBuildAccessories(state)\r\n  const buildimage = selectBuildImage(state)\r\n\r\n  return {\r\n    product: buildproduct,\r\n    model: buildmodel,\r\n    accessories: buildaccessories,\r\n    image: buildimage\r\n  }\r\n}\r\nexport default buildSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { apiCallBegan } from \"./middleware/api\"\r\nimport { AppThunk, RootState } from \"./store\"\r\n\r\ntype ModelOrUndefined = Model | undefined\r\n\r\n//for custom selections eg. pick colours\r\n\r\nexport interface CustomOption {\r\n  id: string\r\n  option_name: string\r\n  option_description?: string\r\n  rrp?: number\r\n  option_image?: Image[]\r\n}\r\nexport interface CustomOptionPicker {\r\n  id: string\r\n  screen_name: string\r\n  option_name: string\r\n  options: CustomOption[]\r\n}\r\n\r\nexport interface Category {\r\n  id: string\r\n  name: string\r\n  icon: {\r\n    url: string\r\n  }\r\n  accessories: Accessory[]\r\n}\r\nexport interface Image {\r\n  url: string\r\n  id: string\r\n  width: number\r\n  height: number\r\n  alternativeText: string\r\n}\r\nexport interface buildItem {\r\n  id: string\r\n  name: string\r\n  short_description: string\r\n  description?: string\r\n  rrp?: number\r\n  featured_image?: Image\r\n  slideshow_images?: Image[]\r\n}\r\n\r\nexport interface Product extends buildItem {\r\n  models: Model[]\r\n}\r\n\r\ninterface Accessory extends buildItem {\r\n  option_for: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n  included_in: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n  accessory_categories: [\r\n    {\r\n      id: string \r\n      icon: {\r\n        url: string\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\ninterface Model extends buildItem {\r\n  included_accessories: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n  optional_accessories: [\r\n    {\r\n      id: string \r\n    }\r\n  ]\r\n}\r\ninterface catalog {\r\n  products: Product[]\r\n  // models: Model[];\r\n  accessories: Accessory[]\r\n  accessoriesLoading: boolean\r\n  customOptionPickersLoading: boolean\r\n  accessoryCategories: Category[]\r\n  loading: boolean\r\n  customOptionPickers: CustomOptionPicker[]\r\n}\r\n\r\nconst initialState: catalog = {\r\n  loading: false,\r\n  accessoriesLoading: false,\r\n  customOptionPickersLoading: false,\r\n  products: [],\r\n  // models: [],\r\n  accessories: [],\r\n  accessoryCategories: [],\r\n  customOptionPickers: [],\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n  name: \"catalog\",\r\n  initialState,\r\n  reducers: {\r\n    customOptionPickersRequested: (state, action: PayloadAction<string>) => {\r\n      state.customOptionPickersLoading = true\r\n    },\r\n    customOptionPickersReceived: (state, action: PayloadAction<any>) => {\r\n      if (action.payload.model) {\r\n        state.customOptionPickers = action.payload.model.other_options\r\n      }\r\n      state.customOptionPickersLoading = false\r\n    },\r\n    accessoriesRequested: (state, action: PayloadAction<string>) => {\r\n      state.accessoriesLoading = true\r\n    },\r\n    accessoriesReceived: (state, action: PayloadAction<any>) => {\r\n      state.accessoriesLoading = false\r\n      state.accessories = action.payload.accessories\r\n    },\r\n    catalogRequested: (state, action: PayloadAction<string>) => {\r\n      state.loading = true\r\n    },\r\n    catalogReceived: (state, action: PayloadAction<any>) => {\r\n      console.log(action.payload.products)\r\n      state.products = action.payload.products\r\n      state.loading = false\r\n    },\r\n    categoriesRequested: (state, action: PayloadAction<string>) => {\r\n      // state.loading = true;\r\n    },\r\n    categoriesReceived: (state, action: PayloadAction<any>) => {\r\n      state.accessoryCategories = action.payload.accessoryCategories\r\n    },\r\n  },\r\n})\r\n\r\nexport const loadCategories = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    accessoryCategories {\r\n      data {\r\n      id \r\n      attributes {\r\n         name\r\n         accessories {\r\n          data {\r\n          \tid\r\n            attributes {\r\n              name\r\n              description\r\n              short_description\r\n              rrp\r\n              featured_image {\r\n                data{\r\n                  id\r\n                  attributes{\r\n                  \turl\r\n                    alternativeText\r\n                  }\r\n                }\r\n                \r\n              }\r\n              option_for {\r\n                data{\r\n                \tid\r\n                }\r\n                \r\n              }\r\n            }\r\n          }\r\n      }\r\n      }\r\n    }\r\n  }\r\n  }`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.categoriesRequested.type,\r\n      onSuccess: catalogSlice.actions.categoriesReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const loadCustomOptionPickers = (): AppThunk => (dispatch, getState) => {\r\n  const modelId = getState().build.modelId || 0\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n  model(id: \"${modelId}\") {\r\n    other_options{\r\n      id\r\n      screen_name\r\n      option_name\r\n      options {\t\r\n        id\r\n        option_name\r\n        option_description\r\n        rrp\r\n        option_image {\r\n          url\r\n        }\r\n      }\r\n    }  \r\n  }\r\n}`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.customOptionPickersRequested.type,\r\n      onSuccess: catalogSlice.actions.customOptionPickersReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\n\r\n// console.log('transformed')\r\n// console.log(transformResponse(example.data.accessoryCategories as collection));\r\n\r\nexport const loadCatalog = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    products(sort: \"rrp\") {\r\n      data {\r\n        id\r\n        attributes {\r\n          name\r\n          short_description\r\n          description\r\n          rrp\r\n          featured_image {\r\n            data{\r\n              id\r\n              attributes{\r\n                url\r\n                width\r\n                height\r\n              }\r\n            }\r\n          }\r\n          models(sort: \"rrp\") {\r\n            data{\r\n              id\r\n              attributes {\r\n                name\r\n                short_description\r\n                description\r\n                rrp\r\n                slideshow_images{\r\n                  data{\r\n                    id\r\n                    attributes{\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n                featured_image{\r\n                  data {\r\n                    id \r\n                    attributes{\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }    \r\n          }\r\n        }     \r\n      }\r\n    }\r\n  }`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.catalogRequested.type,\r\n      onSuccess: catalogSlice.actions.catalogReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const loadAccessories = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    accessories {\r\n      data {\r\n        id\r\n        attributes{\r\n          name\r\n          short_description\r\n          description\r\n          rrp\r\n          featured_image {\r\n            data{\r\n              attributes{\r\n            \t\turl    \r\n              }\r\n            }\r\n          }\r\n          accessory_categories{\r\n            data{\r\n              id\r\n              attributes{\r\n                name      \r\n              }\r\n            }\r\n          }\r\n          option_for {\r\n            data{\r\n            \tid  \r\n            }\r\n          }\r\n          included_in {\r\n            data {\r\n            \tid  \r\n            }\r\n          }        \r\n      }\r\n    }   \r\n  }\r\n}`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: catalogSlice.actions.accessoriesRequested.type,\r\n      onSuccess: catalogSlice.actions.accessoriesReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\n// SELECTORS\r\nexport const selectProducts = (state: RootState) => state.catalog.products\r\nexport const selectCompatibleModels = (state: RootState) =>\r\n  state.catalog.products.find((prod) => \"\"+state.build.productId === prod.id)\r\n    ?.models\r\nexport const selectAccessoryCatById = (catId: string) => (state: RootState) => {\r\n  return state.catalog.accessoryCategories.find((cat) => cat.id === catId)\r\n}\r\nexport const selectIncludedAccessories = (state: RootState) => {\r\n  return state.catalog.accessories.filter((acc) => {\r\n    if (state.build.modelId) {\r\n      const accessory = acc.included_in.find(\r\n        (item) => item.id === state.build.modelId\r\n      )\r\n      return accessory\r\n    } else {\r\n      return false\r\n    }\r\n  })\r\n}\r\n\r\nexport const selectOptionalAccessories = (state: RootState) => {\r\n  return state.catalog.accessories.filter((acc) => {\r\n    if (state.build.modelId) {\r\n      const accessory = acc.option_for.find(\r\n        (item) => item.id === state.build.modelId\r\n      )\r\n      return accessory\r\n    } else {\r\n      return false\r\n    }\r\n  })\r\n}\r\n\r\nexport const selectOptionalAccessoriesInCat = (catId: string) => (\r\n  state: RootState\r\n) => {\r\n  return state.catalog.accessories.filter((acc) => {\r\n    if (state.build.modelId) {\r\n      const isOption = acc.option_for.find(\r\n        (item) => item.id === state.build.modelId\r\n      )\r\n      const isInCat = acc.accessory_categories.find((cat) => cat.id === catId)\r\n\r\n      return isOption && isInCat\r\n    } else {\r\n      return false\r\n    }\r\n  })\r\n}\r\nexport const selectModelById = (id: string) => (state: RootState) => {\r\n  if (!state.catalog.products || state.catalog.products.length === 0) {\r\n    return undefined\r\n  }\r\n  return state.catalog.products.reduce<ModelOrUndefined>((acc, prod) => {\r\n    const model: Model | undefined = prod.models?.find(\r\n      (model) => {\r\n        console.log(typeof model.id, typeof id)\r\n\r\n        return (model.id) === \"\"+id\r\n      }\r\n    )\r\n\r\n    if (model) return model\r\n    else return acc\r\n  }, undefined)\r\n}\r\nexport const selectProductById = (id: string) => (state: RootState) => {\r\n  if (!state.catalog.products || state.catalog.products.length === 0) {\r\n    console.log('no prod found', state.catalog.products)\r\n    return undefined\r\n  }\r\n  // console.log(state.catalog.products)\r\n  // console.log(state.catalog.accessories)\r\n  const product:Product|undefined = state.catalog.products.find((prod) => {\r\n    console.log(typeof prod.id, typeof id)\r\n    return prod.id === id})\r\n  return product\r\n}\r\n\r\nexport const selectAccessoryById = (id: string) => (state: RootState) =>\r\n  state.catalog.accessories.find((accessory) => accessory.id === \"\"+id)\r\nexport const selectCategories = (state: RootState) =>\r\n  state.catalog.accessoryCategories\r\n  \r\n\r\nexport const selectCustomOptionPicker = (id: string) => (state: RootState) =>\r\n  state.catalog.customOptionPickers.find((el) => el.id === id)\r\nexport const selectCustomOptionPickers = (state: RootState) =>\r\n  state.catalog.customOptionPickers\r\nexport const selectCustomOptionPickersLoading = (state: RootState) =>\r\n  state.catalog.customOptionPickersLoading\r\nexport const selectModelSlides = (id:string) => (state: RootState) =>\r\n  selectModelById(id)(state)?.slideshow_images\r\n\r\n\r\nexport default catalogSlice.reducer","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Image } from \"./catalog\";\r\nimport { address } from \"./customer\";\r\nimport { apiCallBegan } from \"./middleware/api\";\r\nimport { AppThunk, RootState } from \"./store\";\r\n\r\nexport interface Company {\r\n  id: string\r\n  name: string\r\n  address?: address\r\n  phone?: string\r\n  email?: string\r\n  company_type: string\r\n  logo_light?: Image\r\n  logo_dark?: Image\r\n  public_email?: string\r\n  website_url?: string\r\n  build_notifications_email?: string\r\n  address_line_1?: string\r\n  address_line_2?: string\r\n  city: string\r\n  country: string\r\n  state: string\r\n  postcode: string\r\n}\r\n\r\ninterface CompanyStore {\r\n    companies: Company[]\r\n    loading: boolean\r\n}\r\nconst initialState: CompanyStore = {\r\n  companies: [],\r\n  loading:false\r\n}\r\n\r\nexport const companySlice = createSlice({\r\n  name: \"company\",\r\n  initialState,\r\n  reducers: {\r\n    companiesReceived: (state, action: PayloadAction<any>) => {\r\n      state.companies = action.payload.dealersAndManufacturers;        \r\n      state.loading = false;   \r\n    },\r\n    companiesRequested: (state) => {\r\n      state.loading = true;        \r\n        \r\n    },\r\n  },\r\n})\r\n\r\n\r\nexport const loadCompanies = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    dealersAndManufacturers {\r\n      data {\r\n        id\r\n        attributes{\r\n          name\r\n          address_line_1\r\n          address_line_2\r\n          phone\r\n          city\r\n          state\r\n          country\r\n          postcode\r\n          email\r\n          website_url\r\n          company_type\r\n          build_notifications_email\r\n        }\r\n      }\r\n    }\r\n  }`\r\n  \r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: companySlice.actions.companiesRequested.type,\r\n      onSuccess: companySlice.actions.companiesReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const {\r\n  companiesReceived,\r\n  companiesRequested\r\n} = companySlice.actions\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\n// export const selectBuilderStep = (state: RootState) => state.ui.builderStep\r\nexport const selectCompanyDetails = (state: RootState) =>{\r\n  return state.companies.companies\r\n}\r\nexport const selectCompanyById = (id: string) => (state: RootState) =>{\r\n  return state.companies.companies.find(company => company.id === id)\r\n}\r\nexport default companySlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\nexport type deliveryDetails = {\r\n  deliveryMethod: string\r\n  dealer: string\r\n}\r\n\r\nexport interface address {\r\n  line1: string\r\n  line2?: string\r\n  city: string\r\n  country: string\r\n  state: string\r\n  postcode: string\r\n}\r\n\r\nexport interface customerDetails {\r\n  firstName?: string\r\n  surname?: string\r\n  phone?: string\r\n  email?: string\r\n  address?: address\r\n  newsletter?: boolean\r\n  deliveryMethod?: string\r\n  preferredDealer?: string\r\n}\r\n\r\nconst initialState: customerDetails = {}\r\n\r\nexport const customerSlice = createSlice({\r\n  name: \"customer\",\r\n  initialState,\r\n  reducers: {\r\n    updateDeliveryDetails: (state, action: PayloadAction<deliveryDetails>) => {\r\n      return { ...state, ...action.payload }\r\n    },\r\n    updateCustomerDetails: (state, action: PayloadAction<customerDetails>) => {\r\n      return { ...state, ...action.payload }\r\n    },\r\n    updateCustomerAddress: (state, action: PayloadAction<address>) => {\r\n      state.address = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  updateDeliveryDetails,\r\n  updateCustomerDetails,\r\n  updateCustomerAddress,\r\n} = customerSlice.actions\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\n// export const selectBuilderStep = (state: RootState) => state.ui.builderStep\r\nexport const selectCustomerDetails= (state: RootState) =>{\r\n  return state.customer\r\n}\r\n\r\nexport default customerSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { apiCallBegan } from \"./middleware/api\"\r\nimport { AppThunk, RootState } from \"./store\"\r\n\r\ninterface settings {\r\n  // settings:\r\n  loading: boolean\r\n  settings: {\r\n    webhook_url: string | undefined\r\n    require_user_contact_details_upfront: string | undefined\r\n    logo_light: {\r\n      url: string | undefined\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState: settings = {\r\n  loading: false,\r\n  settings: {\r\n    webhook_url: undefined,\r\n    require_user_contact_details_upfront: undefined,\r\n    logo_light: {\r\n      url: undefined,\r\n    },\r\n  },\r\n}\r\n\r\nexport const settingsSlice = createSlice({\r\n  name: \"settings\",\r\n  initialState,\r\n  reducers: {\r\n    settingsRequested: (state, action: PayloadAction<string>) => {\r\n      state.loading = true\r\n    },\r\n    settingsReceived: (state, action: PayloadAction<any>) => {\r\n      state.settings = action.payload.settings\r\n      state.loading = false\r\n    },\r\n  },\r\n})\r\n\r\nexport const loadSettings = (): AppThunk => (dispatch) => {\r\n  const graphQlQuery = /*GRAPHQL*/ `{\r\n    settings: config {\r\n      data{\r\n        attributes{\r\n          webhook_url\r\n      \t\trequire_user_contact_details_upfront\r\n          logo_light {\r\n            data{\r\n              attributes{\r\n                url\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url: process.env.REACT_APP_GRAPHQL_URL + \"\",\r\n      graphQlQuery,\r\n      onStart: settingsSlice.actions.settingsRequested.type,\r\n      onSuccess: settingsSlice.actions.settingsReceived.type,\r\n    })\r\n  )\r\n}\r\n\r\nexport const selectSettings = (state: RootState) => state.settings.settings\r\n\r\nexport default settingsSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { RootState } from \"./store\"\r\n\r\n\r\nexport const UIScreenTitles = {\r\n  SELECT_PRODUCT: \"Select Product\",\r\n  SELECT_MODEL: \"Select Model\",\r\n  YOUR_DETAILS: \"Your Details\",\r\n  ADD_ACCESSORIES: \"Add Accessories\",\r\n  DELIVERY_DETAILS: \"Delivery Details\",\r\n  YOUR_ADDRESS: \"Your Address\",\r\n  CONFIRMATION: \"Confirmation\",\r\n  PRODUCT_DETAILS: \"Product Details\",\r\n  MODEL_DETAILS: \"Model Details\"\r\n}\r\n\r\ninterface uiState {\r\n  builderStep: number,\r\n  uiCurrentScreen: string,\r\n  uiScreenOrder: string[]\r\n  uiDisplayingDetailsForId: string\r\n}\r\n\r\nconst initialState: uiState = {\r\n  builderStep: 0,\r\n  uiCurrentScreen: UIScreenTitles.SELECT_PRODUCT,\r\n  uiScreenOrder: [\r\n    UIScreenTitles.SELECT_PRODUCT,\r\n    UIScreenTitles.SELECT_MODEL,\r\n    UIScreenTitles.ADD_ACCESSORIES,\r\n    UIScreenTitles.YOUR_DETAILS,\r\n    UIScreenTitles.DELIVERY_DETAILS,\r\n    UIScreenTitles.YOUR_ADDRESS,\r\n    UIScreenTitles.CONFIRMATION\r\n  ],\r\n  uiDisplayingDetailsForId: \"0\"\r\n}\r\n\r\nexport const uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState,\r\n  reducers: {\r\n    nextBuilderStep: (state) => {\r\n      // if(state.uiCurrentScreen === UIScreenTitles.YOUR_DETAILS){\r\n      //   dispatch(callWebhook('asdf', build))\r\n      // }\r\n      if(state.builderStep < state.uiScreenOrder.length-1){\r\n        state.builderStep++\r\n        state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n      }\r\n    },\r\n    prevBuilderStep: (state) => {\r\n      if (state.builderStep > 0) {\r\n        state.builderStep--\r\n        state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n      }\r\n    },\r\n    setBuilderStep: (state, action: PayloadAction<number>) => {\r\n      state.builderStep = action.payload\r\n      state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n    },\r\n    showModelDetailsScreen: (state, action: PayloadAction<string>) => {\r\n      state.uiCurrentScreen = UIScreenTitles.MODEL_DETAILS\r\n      state.uiDisplayingDetailsForId = action.payload\r\n    },\r\n    showProductDetailsScreen: (state, action: PayloadAction<string>) => {\r\n      state.uiCurrentScreen = UIScreenTitles.PRODUCT_DETAILS\r\n      state.uiDisplayingDetailsForId = action.payload\r\n    },\r\n    closeProductDetailsScreen: (state) => {\r\n      state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n    },\r\n    closeModelDetailsScreen: (state) => {\r\n      state.uiCurrentScreen = state.uiScreenOrder[state.builderStep];\r\n    },\r\n    \r\n  },\r\n})\r\n\r\nexport const {\r\n  nextBuilderStep,\r\n  prevBuilderStep,\r\n  setBuilderStep,\r\n  showModelDetailsScreen,\r\n  showProductDetailsScreen,\r\n  closeModelDetailsScreen,\r\n  closeProductDetailsScreen\r\n} = uiSlice.actions\r\n\r\nexport const selectCurrentStep = (state: RootState) => state.ui.builderStep\r\nexport const selectCurrentUiScreen = (state: RootState) => state.ui.uiCurrentScreen\r\nexport const selectDisplayedId = (state:RootState) => state.ui.uiDisplayingDetailsForId\r\nexport const selectScreenOrder = (state:RootState) => state.ui.uiScreenOrder\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\n// export const selectBuilderStep = (state: RootState) => state.ui.builderStep;\r\n\r\nexport default uiSlice.reducer\r\n","import {\r\n  Action,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  ThunkAction\r\n} from \"@reduxjs/toolkit\"\r\nimport buildReducer from \"./build\"\r\nimport catalogReducer, {\r\n  loadAccessories,\r\n  loadCatalog,\r\n  loadCategories\r\n} from \"./catalog\"\r\nimport companiesReducer, { loadCompanies } from \"./companies\"\r\nimport customerReducer from \"./customer\"\r\nimport api from \"./middleware/api\"\r\nimport settingsReducer from \"./settings\"\r\nimport uiReducer from \"./ui\"\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    catalog: catalogReducer,\r\n    build: buildReducer,\r\n    ui: uiReducer,\r\n    settings: settingsReducer,\r\n    customer: customerReducer,\r\n    companies: companiesReducer\r\n  },\r\n  middleware: [...getDefaultMiddleware(), api],\r\n})\r\n\r\n//cast to allow for dispatching thunkactions\r\nstore.dispatch<any>(loadCatalog())\r\nstore.dispatch<any>(loadAccessories())\r\nstore.dispatch<any>(loadCompanies())\r\nstore.dispatch<any>(loadCategories())\r\n// store.dispatch<any>(loadSettings())\r\n// store.dispatch<any>(loadCustomOptionPickers(1))\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectAccessoryById } from \"../store/catalog\"\r\nimport \"./AccessoryDetailsSidebar.css\"\r\n\r\ninterface AccessoryDetailsSidebarProps {\r\n  id: string\r\n}\r\nexport default function AccessoryDetailsSidebar(props: AccessoryDetailsSidebarProps) {\r\n  // const dispatch = useDispatch();  \r\n  const accessory = useSelector(selectAccessoryById(props.id))\r\n  return (\r\n    <div className=\"accessory-details-sidebar\">\r\n      {accessory?.featured_image?.url && <img className=\"accessory-detail-image\" src={\"\" + process.env.REACT_APP_ASSETS_URL + accessory?.featured_image?.url} alt=\"\"/>}\r\n      <h3>{accessory?.name}</h3>\r\n      {accessory?.rrp && <h5>${accessory?.rrp}</h5>}\r\n      <p>{accessory?.description}</p>\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\";\r\nimport React, { useContext, useRef } from \"react\";\r\nimport { VscChevronDown } from \"react-icons/vsc\";\r\nimport \"./Accordion.css\";\r\n\r\ninterface AccordionProps  {\r\n    children:React.ReactNode\r\n}\r\ninterface AccordionItemProps extends React.HTMLAttributes<HTMLElement> {\r\n    title:string\r\n    children:React.ReactNode\r\n    index?: number\r\n}\r\ninterface AccordionContext {\r\n    openAccordionItem: number,\r\n    setOpenAccordionItem: React.Dispatch<React.SetStateAction<number>> | undefined\r\n}\r\n\r\nconst AccordionContext = React.createContext<AccordionContext>({\r\n  openAccordionItem: 0,\r\n  setOpenAccordionItem: undefined\r\n})\r\n\r\nexport default function Accordion(props:AccordionProps) {\r\n  const [openAccordionItem, setOpenAccordionItem] = React.useState(0)\r\n  const children = React.Children.map(props.children, (child,idx) => {\r\n    if (React.isValidElement(child)) {\r\n      return React.cloneElement(child, { index: idx });\r\n    }\r\n  })\r\n  return (\r\n    <AccordionContext.Provider value={{openAccordionItem, setOpenAccordionItem}}>\r\n      <div className=\"sz-accordion\">\r\n        {children}\r\n      </div>\r\n    </AccordionContext.Provider>\r\n  )\r\n}\r\n\r\nexport function AccordionItem(props:AccordionItemProps){\r\n  const contentEl = useRef<HTMLDivElement>(null);\r\n  const {openAccordionItem, setOpenAccordionItem} = useContext(AccordionContext)\r\n  const isOpen = props.index === openAccordionItem\r\n\r\n  return (\r\n    <div {...props} className={cx(\"accordion-item\", {open: isOpen})}>\r\n      <div className=\"accordion-item-header\" onClick={() => setOpenAccordionItem && setOpenAccordionItem(isOpen ? -1 : (props.index || 0))}>\r\n        <h3 className=\"accordion-item-title\">{props.title}</h3>\r\n        <div className=\"svg-icon-container\">\r\n          <VscChevronDown />\r\n        </div>\r\n      </div>\r\n      <div className=\"accordion-content-wrapper\" style={\r\n        isOpen\r\n          ? { maxHeight: contentEl?.current?.scrollHeight }\r\n          : { maxHeight: \"0px\" }\r\n      }>\r\n        <div className=\"accordion-item-content\" ref={contentEl}>\r\n          {props.children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import cx from \"classnames\";\r\nimport React from \"react\";\r\nimport { VscAdd, VscCheck, VscChevronRight, VscRemove } from \"react-icons/vsc\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addAccessory, removeAccessory, selectBuildAccessoryIds } from \"../store/build\";\r\nimport { selectCategories } from \"../store/catalog\";\r\nimport { formatCurrency, truncate } from \"../utils/utils\";\r\nimport \"./AccessoriesList.css\";\r\nimport Accordion, { AccordionItem } from \"./Accordion\";\r\n\r\n\r\ninterface AccessoriesListProps {\r\n  // onDetailsClick: (id: string) => void,\r\n  onDetailsClick: (id: string) => void\r\n}\r\n\r\nexport default function AccessoriesList(props:AccessoriesListProps) {\r\n\r\n  const cats = useSelector(selectCategories)\r\n  const buildAccessories = useSelector(selectBuildAccessoryIds)\r\n  const dispatch = useDispatch()\r\n\r\n  const catsMarkup = cats.map((cat) => {\r\n    const accessoryMarkup = cat.accessories.map(accessory=>{\r\n      return (\r\n        <div className=\"accessory-add-button-wrapper\" key={accessory.id}>\r\n          <div  className=\"accessory-add-button\" >\r\n            {accessory.featured_image &&\r\n          <div className=\"accessory-button-thumb\" onClick={()=> props.onDetailsClick(accessory.id)}>\r\n            <img className=\"accessory-thumb\" src={\"\" + process.env.REACT_APP_ASSETS_URL + accessory.featured_image.url} alt=\"\" />\r\n          </div>}\r\n            <div className=\"accessory-button-info-wrapper\">\r\n              <div className=\"accessory-button-label\" title={accessory.name} onClick={()=> props.onDetailsClick(accessory.id)}>\r\n                <span className=\"accessory-button-title\">{truncate(accessory.name, 44)}</span>\r\n                <span className=\"accessory-button-subtitle\">{formatCurrency(accessory.rrp || 0)}</span>\r\n              </div>\r\n              {buildAccessories.find(accId => accId === accessory.id) ?\r\n                <span className=\"accessory-button-icon accessory-button-icon-added\"  onClick={() => dispatch(removeAccessory(accessory.id))}>\r\n                  <span className=\"accessory-button-icon-remove\">\r\n                    <VscRemove />\r\n                  </span>\r\n                  <span className=\"accessory-button-icon-check\">\r\n                    <VscCheck />\r\n                  </span>\r\n                </span> \r\n                :\r\n                <span className=\"accessory-button-icon accessory-button-icon-add\" onClick={() => dispatch(addAccessory(accessory.id))}>\r\n                  <VscAdd />\r\n                </span> \r\n              }\r\n              <span className=\"accessory-button-icon accessory-button-icon-more-info\" onClick={()=> props.onDetailsClick(accessory.id)}>\r\n                <VscChevronRight />\r\n              </span> \r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n    \r\n    return (\r\n      <AccordionItem key={cat.id} title={cat.name}>\r\n        {accessoryMarkup}\r\n      </AccordionItem>\r\n    )\r\n  }, {})\r\n\r\n  // const accessoriesMarkup = accessories.map((acc) => (\r\n  //   <div key={acc?.id} className=\"accessory\">\r\n  //     {/* <Link to={\"/accessory-categories/\" + acc?.id} className=\"category-name\"> */}\r\n  //     <span className=\"accessory-name\">{acc?.name}</span>\r\n  //     <span className=\"accessory-cost\">\r\n  //       {acc?.rrp ? formatCurrency(acc?.rrp) : \"N/A\"}\r\n  //     </span>\r\n  //     {/* </Link> */}\r\n  //   </div>\r\n  // ))\r\n\r\n  return (\r\n    \r\n    <div className={cx(\"accessories-accordion-container\")} >\r\n      {/* <div className=\"model-image\">\r\n        <img src={process.env.REACT_APP_ASSETS_URL + image?.url} alt=\"\" />\r\n      </div> */}\r\n      <h3>Add Accessories</h3>\r\n      <p className=\"weak-label\">Add accessories to create your perfect product</p>\r\n    \r\n      <Accordion>\r\n        {catsMarkup}\r\n      </Accordion>\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\";\r\nimport React, { useState } from \"react\";\r\nimport { VscArrowLeft } from \"react-icons/vsc\";\r\nimport { useSelector } from \"react-redux\";\r\nimport 'swiper/swiper-bundle.min.css';\r\nimport 'swiper/swiper.min.css';\r\nimport { selectBuildImage, selectBuildSlides } from \"../store/build\";\r\nimport AccessoryDetailsSidebar from \"./AcccessoryDetailsSidebar\";\r\nimport AccessoriesList from \"./AccessoriesList\";\r\nimport \"./AccessoriesPicker.css\";\r\n\r\nexport default function AccessoriesPicker() {\r\n\r\n  const image = useSelector(selectBuildImage)\r\n  const [showDetails, setShowDetails] = useState(false)\r\n  const [showingAccessoryId, setshowingAccessoryId] = useState(\"1\")\r\n  const slides = useSelector(selectBuildSlides)\r\n  const showAccessory = (accessoryId:string) => {\r\n    console.log('showing accessory ' + accessoryId)\r\n    setShowDetails(true)\r\n    setshowingAccessoryId(accessoryId)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"accessories-section\">\r\n      <div className=\"accessories-section-inner\">\r\n\r\n        <div className=\"model-image-container\">\r\n          {/* <Swiper\r\n            spaceBetween={0}\r\n            slidesPerView={1}\r\n            onSlideChange={() => console.log('slide change')}\r\n            onSwiper={(swiper) => console.log(swiper)}\r\n          >\r\n            \r\n            {slides?.map((slide, idx)=> <SwiperSlide key={idx}><img src={slide.url} alt=\"\" /></SwiperSlide>)}\r\n\r\n          </Swiper> */}\r\n          <img src={\"\" + process.env.REACT_APP_ASSETS_URL + image?.url} alt=\"\" />\r\n        </div>\r\n        <div className=\"sidebar accessories-sidebar\">\r\n          <div className={cx(\"sidebar-menu-1\", {active: !showDetails})} >\r\n            <AccessoriesList onDetailsClick={(id:string) => showAccessory(id) } />\r\n          </div>\r\n          {/* {accessoriesMarkup} */}\r\n          <div className={cx(\"sidebar-menu-2\", {active: showDetails})}>\r\n            <div style={{cursor:\"pointer\"}} onClick={() => setShowDetails(false)}><VscArrowLeft /> Back</div>\r\n            <AccessoryDetailsSidebar id={showingAccessoryId}></AccessoryDetailsSidebar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>  )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { address, updateCustomerAddress } from \"../store/customer\"\r\nimport \"./form.css\"\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function AddressForm(props: props) {\r\n  const dispatch = useDispatch()\r\n  const { register, getValues, triggerValidation } = useForm<address>()\r\n  \r\n  //todo - fix\r\n  useEffect(() => {\r\n    props.onValidChange(false)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleChange = async () => {\r\n    dispatch(updateCustomerAddress(getValues()))\r\n    const result = await triggerValidation()\r\n    props.onValidChange(result)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onChange={handleChange} className=\"szForm\">\r\n        <fieldset>\r\n          <legend>Enter your address</legend>\r\n          <label htmlFor=\"address-line-1\">\r\n            <span className=\"label-text\">Line 1</span>\r\n            <input\r\n              id=\"address-line-1\"\r\n              name=\"address-line-1\"\r\n              placeholder=\"11 Smith St\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"address-line-2\">\r\n            <span className=\"label-text\">Line 2</span>\r\n            <input\r\n              id=\"address-line-2\"\r\n              name=\"address-line-2\"\r\n              placeholder=\"\"\r\n              ref={register}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"city\">\r\n            <span className=\"label-text\">City</span>\r\n            <input\r\n              id=\"city\"\r\n              name=\"city\"\r\n              placeholder=\"Melbourne\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"country\">\r\n            <span className=\"label-text\">Country</span>\r\n            <input\r\n              id=\"country\"\r\n              name=\"country\"\r\n              defaultValue=\"Australia\"\r\n              placeholder=\"Australia\"\r\n              ref={register({\r\n                required: true,\r\n              })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"state\">\r\n            <span className=\"label-text\">State</span>\r\n            <input\r\n              id=\"state \"\r\n              name=\"state\"\r\n              placeholder=\"VIC\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n        </fieldset>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { FiShoppingBag } from \"react-icons/fi\"\r\nimport { useSelector } from \"react-redux\"\r\nimport {\r\n  selectBuildAccessories,\r\n  selectBuildCost,\r\n  selectBuildCustomOptions, selectBuildModel,\r\n  selectBuildProduct\r\n} from \"../store/build\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./BuildStatusBox.css\"\r\n\r\n\r\nexport default function BuildStatusBox() {\r\n  const product = useSelector(selectBuildProduct)\r\n  const model = useSelector(selectBuildModel)\r\n  const accessories = useSelector(selectBuildAccessories)\r\n  const selectedOptions = useSelector(selectBuildCustomOptions)\r\n\r\n  const customOptionsMarkup = selectedOptions.map((option) => (\r\n    <div key={option.name}>\r\n      <span>{option.name}</span>\r\n      <span>{option.selectedOption?.option_name}</span>\r\n    </div>\r\n  ))\r\n\r\n  const productTitle = model?.name ?  model?.name : product?.name\r\n\r\n  return (\r\n    <div className=\"build-box\">\r\n      <div className=\"build-box-left\">\r\n        <div className=\"build-box-icon\">\r\n          <FiShoppingBag />\r\n        </div>\r\n        <div className=\"build-box-text\">\r\n          <h3 className=\"build-box-title\">{productTitle ? productTitle : \"Select Product\"}</h3>\r\n          <span className=\"build-box-accessories\">{accessories.length} Accessories</span>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"build-box-price\">\r\n        <span>{formatCurrency(useSelector(selectBuildCost))}</span>\r\n      </div>\r\n      {customOptionsMarkup}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { customerDetails, updateCustomerDetails } from \"../store/customer\"\r\nimport \"./form.css\"\r\n\r\ntype handlerfunc = () => void;\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function ContactDetailsForm(props: props) {\r\n  const dispatch = useDispatch()\r\n  const { register, errors, getValues, triggerValidation } = useForm<\r\n    customerDetails\r\n  >({\r\n    mode: \"onChange\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    props.onValidChange(false)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  \r\n  const handleChange = async () => {\r\n    dispatch(updateCustomerDetails(getValues()))\r\n    const result = await triggerValidation()\r\n    props.onValidChange(result)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onChange={handleChange} className=\"szForm\">\r\n        <fieldset>\r\n          <legend>Enter your contact details</legend>\r\n          <label htmlFor=\"firstName\">\r\n            <span className=\"label-text\">First Name</span>\r\n            <input\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              placeholder=\"John\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"surname\">\r\n            <span className=\"label-text\">Surname</span>\r\n            <input\r\n              id=\"surname\"\r\n              name=\"surname\"\r\n              placeholder=\"Smith\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"phone\">\r\n            <span className=\"label-text\">Phone</span>\r\n            <input\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              placeholder=\"0400 000 000\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"email\">\r\n            <span className=\"label-text\">Email</span>\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"your@email.com\"\r\n              ref={register({\r\n                required: true,\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n            />\r\n          </label>\r\n          {errors.email && <span>{errors.email.message}</span>}\r\n\r\n          <label htmlFor=\"postcode\">\r\n            <span className=\"label-text\">Postcode</span>\r\n            <input\r\n              id=\"postcode \"\r\n              name=\"postcode\"\r\n              placeholder=\"3000\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"newsletter\" className=\"no-bg\">\r\n            <input\r\n              id=\"newsletter\"\r\n              type=\"checkbox\"\r\n              name=\"newsletter\"\r\n              defaultChecked={true}\r\n              ref={register}\r\n            />\r\n            Sign up for special offers and promotions\r\n          </label>\r\n        </fieldset>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectCompanyById, selectCompanyDetails } from \"../store/companies\"\r\nimport { deliveryDetails, updateDeliveryDetails } from \"../store/customer\"\r\nimport \"./form.css\"\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function DeliveryDetailsForm(props: props) {\r\n  const dispatch = useDispatch()\r\n  const companies = useSelector(selectCompanyDetails);\r\n  \r\n  console.log(companies)\r\n  const { register, triggerValidation, getValues } = useForm<deliveryDetails>({\r\n    mode: \"onChange\",\r\n    reValidateMode: \"onChange\",\r\n  })\r\n  const [selectedCompanyId, setselectedCompanyId] = useState(companies[0].id)\r\n  const selectedCompany = useSelector(selectCompanyById(selectedCompanyId))\r\n\r\n  useEffect(() => {\r\n    props.onValidChange(false)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n\r\n  const handleChange = async () => {\r\n    dispatch(updateDeliveryDetails(getValues()))\r\n    setselectedCompanyId(getValues().dealer)\r\n    const result = await triggerValidation()\r\n    props.onValidChange(result)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onChange={handleChange} className=\"szForm\">\r\n        <fieldset>\r\n          <legend>Delivery Method</legend>\r\n          <label htmlFor=\"delivery\" className=\"no-bg radio\">\r\n            <input\r\n              id=\"delivery\"\r\n              name=\"deliverymethod\"\r\n              type=\"radio\"\r\n              value=\"delivery\"\r\n              ref={register}\r\n            />\r\n            <span className=\"label-text\">Delivery</span>\r\n          </label>\r\n\r\n          <label htmlFor=\"pickup\" className=\"no-bg radio\">\r\n            <input\r\n              id=\"pickup\"\r\n              name=\"deliverymethod\"\r\n              type=\"radio\"\r\n              value=\"pickup\"\r\n              ref={register({\r\n                validate: () => {\r\n                  return getValues().deliveryMethod !== \"\"\r\n                },\r\n              })}\r\n            />\r\n            <span className=\"label-text\">Pick Up</span>\r\n          </label>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>Choose your dealer</legend>\r\n          <select name=\"dealer\" id=\"dealer\" defaultValue={companies[0].id} ref={register}>\r\n            {companies.map((company, idx) => <option value={company?.id} key={idx}>{company?.state} - {company?.name} - {company?.city}</option>)}\r\n          </select>\r\n        </fieldset>\r\n      </form>\r\n      {selectedCompany && <div className=\"dealer-details-display\">\r\n        <h3 className=\"dealer-name\">{selectedCompany?.name}</h3>\r\n        <span className=\"dealer-phone\">{selectedCompany?.address_line_1}, </span>\r\n        {selectedCompany?.address_line_2 && <span className=\"dealer-address2\">{selectedCompany?.address_line_2}</span>}\r\n        <span className=\"dealer-city\">{selectedCompany?.city}</span><br/>\r\n        <span className=\"dealer-state\">{selectedCompany?.state}</span><br/>\r\n        <span className=\"dealer-country\">{selectedCompany?.country}</span><br/>\r\n        {selectedCompany?.phone && <span className=\"dealer-phone\">Phone: {selectedCompany?.phone}<br/></span>}\r\n        <span className=\"dealer-website\"><a href={selectedCompany?.website_url} target=\"_blank\" rel='noopener noreferrer' >Visit Website</a></span>\r\n      </div>}\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import cx from \"classnames\";\r\nimport React from \"react\";\r\nimport { VscArrowRight } from \"react-icons/vsc\";\r\n\r\ninterface FooterNavProps {\r\n    onNextClick: ()=>void,\r\n    onPrevClick: ()=>void,\r\n    showPrev: boolean,\r\n    showNext: boolean,\r\n    prevEnabled: boolean,\r\n    nextEnabled: boolean,\r\n    prevLabel: string,\r\n    nextLabel: string\r\n}\r\nexport default function FooterNav(props:FooterNavProps){\r\n\r\n  return (\r\n    <footer className=\"wizard-footer\">\r\n      {props.showPrev &&\r\n      <button className={cx(\"back-button  secondary-button\", { disabled: !props.prevEnabled })}\r\n        onClick={props.onPrevClick}\r\n      >{props.prevLabel}</button>\r\n      }\r\n      {props.showNext &&\r\n    <button\r\n      className={cx(\"primary-button \", { disabled: !props.nextEnabled })}\r\n      onClick={props.onNextClick}>{props.nextLabel} <VscArrowRight/></button>\r\n\r\n      }\r\n    </footer>\r\n  );\r\n}\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectModelById } from \"../store/catalog\"\r\nimport { closeProductDetailsScreen, nextBuilderStep, selectDisplayedId } from \"../store/ui\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./App.css\"\r\nimport FooterNav from \"./FooterNav\"\r\nimport \"./ModelDetails.css\"\r\n\r\nexport default function ModelDetails() {\r\n  \r\n  const id = useSelector(selectDisplayedId)\r\n  const model = useSelector(selectModelById(id))\r\n  const dispatch = useDispatch()\r\n  console.log(id)\r\n  return (\r\n    <>\r\n      <div className=\"model-details-section\">\r\n        <div className=\"model-image-container\">\r\n          {model && <img src={\"\" + process.env.REACT_APP_ASSETS_URL + model?.featured_image?.url} alt=\"\" />}\r\n        </div> \r\n        <div className=\"model-details\">\r\n          <h3>{model && model?.name}</h3>\r\n          <h5 className=\"model-price\">{model?.rrp && formatCurrency(model.rrp)}</h5>\r\n          <p>{model && model.description}</p>\r\n        </div>\r\n      </div>\r\n      <FooterNav \r\n        onNextClick={() => {dispatch(nextBuilderStep()); }}\r\n        onPrevClick={() => {dispatch(closeProductDetailsScreen()); }}\r\n        showNext={true}\r\n        showPrev={true}\r\n        prevEnabled={true}\r\n        nextEnabled={true} \r\n        nextLabel={\"Select \" + model?.name + \" Model\"}\r\n        prevLabel=\"Back\" />\r\n      \r\n    </>\r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { callWebhook, selectBuild, selectBuildModel, setModel } from \"../store/build\"\r\nimport { selectCompatibleModels } from \"../store/catalog\"\r\nimport { selectSettings } from \"../store/settings\"\r\nimport { showModelDetailsScreen } from \"../store/ui\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./ModelPicker.css\"\r\n\r\n\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function ModelPicker(props: props) {\r\n  const dispatch = useDispatch()\r\n\r\n  const models = useSelector(selectCompatibleModels)\r\n  const model = useSelector(selectBuildModel)\r\n  const build = useSelector(selectBuild)\r\n  const settings = useSelector(selectSettings)\r\n\r\n\r\n  //if one of these models is selected, all progress\r\n  useEffect(() => {\r\n    if (models?.find((prod) => prod.id === model?.id)) {\r\n      props.onValidChange(true)\r\n    } else {\r\n      props.onValidChange(false)\r\n    }\r\n  })\r\n  let buildItemsMarkup\r\n  \r\n  \r\n  if (models) {\r\n    buildItemsMarkup = models.map((x) => {\r\n      return (\r\n        <div\r\n          className={cx(\"product\", { selected: model?.id === x.id })}\r\n          key={x.id}\r\n          onClick={() => {\r\n            dispatch(setModel(x.id))\r\n            // any click make this valid. if validation is more complex,\r\n            // you can add some state if nececssary\r\n            console.log('called')\r\n            props.onValidChange(true)\r\n            if( settings?.webhook_url){\r\n              dispatch(callWebhook(settings?.webhook_url, build))\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"product-thumb-wrapper\">\r\n            {x.featured_image?.url && (\r\n              <img\r\n                className=\"product-thumb\"\r\n                src={process.env.REACT_APP_ASSETS_URL + x.featured_image?.url}\r\n                alt={x.name}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"select-product-details\">\r\n            <h3 className=\"product-title\">{x.name}</h3>\r\n            <p className=\"product-short_description\">{x.short_description}</p>\r\n            <div className=\"product-bottom-line\">\r\n              {x.rrp && <h4 className=\"product-price\">Starts at {formatCurrency(x.rrp)}</h4>}\r\n              <button className=\"secondary-link text-button\" onClick={()=>dispatch(showModelDetailsScreen(x.id))}>View Specs</button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"product-listing\">\r\n      {buildItemsMarkup}\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectProductById } from \"../store/catalog\"\r\nimport { closeProductDetailsScreen, nextBuilderStep, selectDisplayedId } from \"../store/ui\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport FooterNav from \"./FooterNav\"\r\nimport \"./ProductDetails.css\"\r\n\r\nexport default function ProductDetails() {\r\n\r\n  const id = useSelector(selectDisplayedId)\r\n  const product = useSelector(selectProductById(id))\r\n  const dispatch = useDispatch()\r\n\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"product-details-section\">\r\n        <div className=\"model-image-container\">\r\n          {product && <img src={\"\" + process.env.REACT_APP_ASSETS_URL + product?.featured_image?.url} alt=\"\" />}\r\n        </div>  \r\n        <div className=\"product-details\">\r\n          <h3>{product && product?.name}</h3>\r\n          <h5 className=\"product-price\">{product?.rrp && formatCurrency(product.rrp)}</h5>\r\n          <ReactMarkdown>{product?.description +\"\"}</ReactMarkdown>\r\n        </div>\r\n      </div>\r\n      <FooterNav \r\n        onNextClick={() => {dispatch(nextBuilderStep()); }}\r\n        onPrevClick={() => {dispatch(closeProductDetailsScreen()); }}\r\n        showNext={true}\r\n        showPrev={true}\r\n        prevEnabled={true}\r\n        nextEnabled={true} \r\n        nextLabel={\"Select \" + product?.name + \" Model\"}\r\n        prevLabel=\"Back\" />\r\n      \r\n    </>\r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectBuildProduct, setProduct } from \"../store/build\"\r\nimport { selectProducts } from \"../store/catalog\"\r\nimport { showProductDetailsScreen } from \"../store/ui\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./ProductPicker.css\"\r\n\r\n\r\ninterface props {\r\n  onValidChange: (isValid: boolean) => void\r\n}\r\n\r\nexport default function ProductPicker(props: props) {\r\n  const dispatch = useDispatch()\r\n  const products = useSelector(selectProducts)\r\n  const product = useSelector(selectBuildProduct)\r\n\r\n  //if one of these products is selected, allow progress\r\n  useEffect(() => {\r\n    if (products.find((prod) => prod.id === product?.id)) {\r\n      props.onValidChange(true)\r\n    } else {\r\n      props.onValidChange(false)\r\n    }\r\n  })\r\n\r\n  // const cols = products.length >= 3 ? '1fr 1fr 1fr' : '1fr 1fr';\r\n  // const productStyle = products.length < 3 ? {\r\n  //   height: '500px'\r\n  // } : {};style={{gridTemplateColumns: cols}}\r\n\r\n  let buildItemsMarkup\r\n  if (products) {\r\n    buildItemsMarkup = products.map((x) => {\r\n      return (\r\n        <div\r\n          className={cx(\"product\", { selected: product?.id === x.id }) }\r\n          key={x.id}\r\n          // style={productStyle}\r\n          onClick={() => {\r\n            dispatch(setProduct(x.id))\r\n          }}\r\n        >\r\n          <div className=\"product-thumb-wrapper\">\r\n            {x.featured_image?.url && (\r\n              <img\r\n                className=\"product-thumb\"\r\n                alt={x.name}\r\n                src={x.featured_image?.url}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"select-product-details\">\r\n            <h3 className=\"product-title\">{x.name}</h3>\r\n            <p className=\"product-short_description\">{x.short_description}</p>\r\n            <div className=\"product-bottom-line\">\r\n              {x.rrp && <h4 className=\"product-price\">Starts at {formatCurrency(x.rrp)}</h4>}\r\n              <button className=\"primary-link text-button\" onClick={()=>dispatch(showProductDetailsScreen(x.id))}>View Specs</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"product-listing\" >\r\n      {buildItemsMarkup}\r\n      {/* <Link className=\"primary-button\" to=\"/select-accessories/\">Select Model ></Link> */}\r\n    </div>\r\n    \r\n  )\r\n}\r\n","import React from \"react\"\r\nimport \"./StepTitle.css\"\r\nimport cx from \"classnames\"\r\n\r\ntype StepTitleProps = {\r\n  title: string\r\n  isActive?: boolean\r\n  showBackButton?: boolean\r\n  onBackClick?: Function\r\n}\r\n\r\nexport default function StepTitle(props: StepTitleProps) {\r\n  let backLink\r\n\r\n  if (props.showBackButton) {\r\n    backLink = (\r\n      <span\r\n        className=\"step-back\"\r\n        onClick={() => props.onBackClick && props.onBackClick()}\r\n      >\r\n        {\"< \"}{\" \"}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={cx(\"step-title\", { active: props.isActive })}>\r\n      {backLink} <h2>{props.title}</h2>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport StepTitle from \"./StepTitle\"\r\n\r\ninterface StepTitlesProps {\r\n    titles: string[],\r\n    activeStep: string\r\n}\r\nexport default function StepTitles (props:StepTitlesProps) {\r\n\r\n  const stepTitles = props.titles.map( (title, idx) => \r\n    <StepTitle title={idx+1 + \". \" + title} isActive={title===props.activeStep} key={idx} />)\r\n\r\n  return <>{stepTitles}</> \r\n\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useState } from \"react\"\r\nimport { VscCreditCard, VscMail } from \"react-icons/vsc\"\r\nimport { useSelector } from \"react-redux\"\r\nimport {\r\n  selectBuildAccessories,\r\n  selectBuildCost, selectBuildImage, selectBuildModel,\r\n  selectBuildProduct,\r\n  selectFullBuild\r\n} from \"../store/build\"\r\nimport { selectCustomerDetails } from \"../store/customer\"\r\nimport { formatCurrency } from \"../utils/utils\"\r\nimport \"./ThankYouScreen.css\"\r\n\r\nexport default function ThankYouScreen() {\r\n  const product = useSelector(selectBuildProduct)\r\n  const model = useSelector(selectBuildModel)\r\n  const accessories = useSelector(selectBuildAccessories)  \r\n  const image = useSelector(selectBuildImage)\r\n\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const allDetails = {\r\n    ...useSelector(selectFullBuild), \r\n    customer: useSelector(selectCustomerDetails)\r\n  };\r\n  const sendMail = () =>{\r\n\r\n    setEmailSent(true);\r\n    if(window.szReactPlugin && emailSent===false){\r\n      fetch(window.szReactPlugin?.email_endpoint, {\r\n\r\n        method: \"POST\",\r\n        // credentials: 'same-origin',\r\n        headers: {\r\n          'Accept': 'application/json, text/plain, */*',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(allDetails)\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data) {\r\n            console.log(data)\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"thankyou-wrapper\">\r\n      <h1 className=\"h1\">Thank you for your enquiry</h1>\r\n      <h3 className=\"thankyou-productname\"><span className=\"thankyou-prod-name\">{product?.name}</span> {model?.name}</h3>\r\n      {accessories.length > 0 && <span className=\"thankyou-accessories\">With {accessories.length} Accessories</span>}\r\n      <div className=\"thankyou-product-image\">\r\n        <img src={\"\" + process.env.REACT_APP_ASSETS_URL + image?.url} alt=\"\" />\r\n      </div>\r\n      <div className=\"thankyou-box-price\">\r\n        Total <span>{formatCurrency(useSelector(selectBuildCost))}</span>\r\n      </div>\r\n      <div className=\"thankyou-buttons\">\r\n        <button className={cx(\"outline-button secondary\", {disabled: emailSent===true})} onClick={sendMail}><VscMail/> <span>Email Me a Copy</span></button>\r\n        <button className=\"primary-button\"><VscCreditCard/> <span>Checkout</span></button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import cx from \"classnames\"\r\nimport React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { animated, config, useTransition } from 'react-spring'\r\nimport { callWebhook, selectFullBuild } from \"../store/build\"\r\nimport { nextBuilderStep, prevBuilderStep, selectCurrentStep, selectCurrentUiScreen, selectScreenOrder, UIScreenTitles } from \"../store/ui\"\r\nimport AccessoriesPicker from \"./AccessoriesPicker\"\r\nimport AddressForm from \"./AddressForm\"\r\nimport \"./App.css\"\r\nimport BuildStatusBox from \"./BuildStatusBox\"\r\nimport ContactDetailsForm from \"./ContactDetailsForm\"\r\nimport DeliveryDetailsForm from \"./DeliveryDetailsForm\"\r\nimport FooterNav from \"./FooterNav\"\r\nimport ModelDetails from \"./ModelDetails\"\r\nimport ModelPicker from \"./ModelPicker\"\r\nimport ProductDetails from \"./ProductDetails\"\r\nimport ProductPicker from \"./ProductPicker\"\r\nimport StepTitles from \"./StepTitles\"\r\nimport ThankYouScreen from \"./ThankYouScreen\"\r\n\r\ndeclare global {\r\n  interface Window {szReactPlugin: {\r\n    webhook_url: string,\r\n    accent_color: string,\r\n    email_endpoint: string\r\n  }}\r\n}\r\n\r\nif( window.szReactPlugin ){\r\n  document.documentElement.style.setProperty('--accent_dark', window.szReactPlugin.accent_color);\r\n}\r\n\r\nfunction App() {\r\n  const currentScreen     = useSelector(selectCurrentUiScreen);\r\n  const currentScreenIdx  = useSelector(selectCurrentStep);\r\n  const screenNames       = useSelector(selectScreenOrder);\r\n  const fullBuild         = useSelector(selectFullBuild)\r\n  const dispatch          = useDispatch();\r\n  const transition        = useTransition(currentScreen, {\r\n    from: { transform: 'translateX(10%)', opacity:0 },\r\n    enter: { opacity: 1, transform: 'translateX(0%)' },\r\n    leave: { opacity: 0, transform: 'translateX(-10%)' },\r\n    config: config.slow\r\n    // delay: 1000,\r\n  })\r\n  \r\n  const [canAdvance, setCanAdvance] = useState(true);\r\n\r\n  const handleValidChange = (isValid:boolean) => {\r\n    setCanAdvance(isValid);\r\n  }\r\n\r\n  const handleNextClick = () => {\r\n    if((currentScreen === UIScreenTitles.YOUR_DETAILS ||\r\n        currentScreen === UIScreenTitles.YOUR_ADDRESS)\r\n        && window.szReactPlugin?.webhook_url){\r\n      dispatch(callWebhook(window.szReactPlugin?.webhook_url, fullBuild));\r\n    }\r\n    dispatch(nextBuilderStep());\r\n    setCanAdvance(true); \r\n\r\n  }\r\n\r\n  const getScreen = (screen: string) => {\r\n    switch(screen){\r\n    case UIScreenTitles.SELECT_PRODUCT:\r\n      return <ProductPicker onValidChange={handleValidChange} />\r\n    case UIScreenTitles.SELECT_MODEL:\r\n      return <ModelPicker onValidChange={handleValidChange} />\r\n    case UIScreenTitles.ADD_ACCESSORIES:\r\n      return <AccessoriesPicker  />\r\n    case UIScreenTitles.YOUR_DETAILS:\r\n      return <ContactDetailsForm onValidChange={handleValidChange} />\r\n    case UIScreenTitles.DELIVERY_DETAILS:\r\n      return <DeliveryDetailsForm onValidChange={handleValidChange} />\r\n    case UIScreenTitles.YOUR_ADDRESS:\r\n      return <AddressForm onValidChange={handleValidChange} />\r\n    case UIScreenTitles.CONFIRMATION:\r\n      return <ThankYouScreen/>\r\n    case UIScreenTitles.MODEL_DETAILS:\r\n      return <ModelDetails/>\r\n    case UIScreenTitles.PRODUCT_DETAILS:\r\n      return <ProductDetails/>\r\n    }\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app-container\">\r\n        <div className=\"primary-container\">\r\n          <main>\r\n            <header>\r\n              <h1 className=\"small-caps\">Configure Your Camper</h1>\r\n              <BuildStatusBox />\r\n            </header>\r\n            <div className=\"step-title-container\">\r\n              <StepTitles titles={screenNames} activeStep={currentScreen} />\r\n            </div>\r\n            <div  className=\"current-screen-container\">\r\n              {transition((style, theCurrentScreen, t, ) => \r\n                <animated.div style={style} className={cx(\"item\", {active: theCurrentScreen === currentScreen})}>\r\n                  {getScreen(theCurrentScreen)}\r\n                </animated.div> \r\n              )}\r\n            </div>\r\n            {(currentScreen !== UIScreenTitles.MODEL_DETAILS &&\r\n              currentScreen !== UIScreenTitles.PRODUCT_DETAILS) &&\r\n            <FooterNav \r\n              onNextClick={handleNextClick}\r\n              onPrevClick={() => { dispatch(prevBuilderStep()); setCanAdvance(true); }}\r\n              showNext={currentScreenIdx < screenNames.length-1}\r\n              showPrev={true}\r\n              prevEnabled={currentScreenIdx !== 0 }\r\n              nextEnabled={canAdvance} \r\n              nextLabel={screenNames[currentScreenIdx+1]}\r\n              prevLabel=\"Back\" />\r\n            }\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n          \r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './app/store/store';\r\nimport App from './app/ui/App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('sz-root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}